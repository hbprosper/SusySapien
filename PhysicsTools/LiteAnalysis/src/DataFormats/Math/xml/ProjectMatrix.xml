<?xml version="1.0"?>
<!--
==============================================================================
  XML File: ProjectMatrix.xml
  Created:  Fri Jan 15 20:47:52 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Math/interface/ProjectMatrix.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/Math/interface/ProjectMatrix.h">

    <include name="&quot;Math/SMatrix.h&quot;"/>

    <class name="ProjectMatrix"
           fullname="ProjectMatrix&lt;T, N, D&gt;"
           module="DataFormats.Math"
           project=""
           type="template struct"
           template="template&lt;typename T, unsigned int N, unsigned int D&gt;">

        <section>
            <typedef name="SMatDD"
                     value="ROOT::Math::SMatrix&lt;T, D, D, ROOT::Math::MatRepSym&lt;T, D&gt; &gt;">
typedef ROOT::Math::SMatrix&lt;T, D, D, ROOT::Math::MatRepSym&lt;T, D&gt; &gt; SMatDD;
            </typedef>

            <typedef name="SMatNN"
                     value="ROOT::Math::SMatrix&lt;T, N, N &gt;">
typedef ROOT::Math::SMatrix&lt;T, N, N &gt; SMatNN;
            </typedef>

            <typedef name="SMatND"
                     value="ROOT::Math::SMatrix&lt;T, N, D &gt;">
typedef ROOT::Math::SMatrix&lt;T, N, D &gt; SMatND;
            </typedef>

            <method1 name="project"
                     return="SMatND"
                     args="['SMatDD const&amp;']"
                     vars="['s']"
                     qual="">
SMatND project(SMatDD const&amp; s);
                <comment>
     H*S
                </comment>
            </method1>

            <method1 name="project"
                     return="SMatNN"
                     args="['SMatND const&amp;']"
                     vars="['k']"
                     qual="">
SMatNN project(SMatND const&amp; k);
                <comment>
     K*H
                </comment>
            </method1>

            <method1 name="projectAndSubtractFrom"
                     return="void"
                     args="['SMatNN&amp; __restrict__','SMatND const&amp; __restrict__']"
                     vars="['s','k']"
                     qual="">
void projectAndSubtractFrom(SMatNN&amp; __restrict__ s, SMatND const&amp; __restrict__ k);
                <comment>
     S-K*H
                </comment>
            </method1>

            <member>
unsigned int index[D];
                <comment>
     only H(i,index(i))=1.
                </comment>
            </member>

        </section>

        <typemap name="SMatDD"
                 value="ROOT::Math::SMatrix&lt;T, D, D, ROOT::Math::MatRepSym&lt;T, D&gt; &gt;"
                 type="typedef"/>
        <typemap name="SMatND"
                 value="ROOT::Math::SMatrix&lt;T, N, D &gt;"
                 type="typedef"/>
        <typemap name="SMatNN"
                 value="ROOT::Math::SMatrix&lt;T, N, N &gt;"
                 type="typedef"/>
        <typemap name="index[D]"
                 value="ProjectMatrix&lt;T, N, D&gt;::index[D]"
                 type="member"/>

    </class>

    <type name="ProjectMatrix&lt;T, N, D&gt;"/>
    <type name="SMatDD const&amp;"/>
    <type name="SMatND"/>
    <type name="SMatND const&amp;"/>
    <type name="SMatND const&amp; __restrict__"/>
    <type name="SMatNN"/>
    <type name="SMatNN&amp; __restrict__"/>
    <type name="unsigned int"/>
    <type name="void"/>
</header>
