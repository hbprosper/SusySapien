<?xml version="1.0"?>
<!--
==============================================================================
  XML File: SuperCluster.xml
  Created:  Fri Jan 15 20:46:24 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/EgammaReco/interface/SuperCluster.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/EgammaReco/interface/SuperCluster.h">

    <include name="&quot;DataFormats/Math/interface/Point3D.h&quot;"/>
    <include name="&quot;DataFormats/CaloRecHit/interface/CaloCluster.h&quot;"/>
    <include name="&quot;DataFormats/CaloRecHit/interface/CaloClusterFwd.h&quot;"/>
    <include name="&quot;DataFormats/DetId/interface/DetId.h&quot;"/>
    <include name="&lt;Rtypes.h&gt;"/>

    <namespace name="reco">

        <class name="SuperCluster"
               fullname="reco::SuperCluster"
               module="DataFormats.EgammaReco"
               project=""
               type="regular">
            <baseclass name="public CaloCluster"/>

            <section name="public">
                <typedef name="Point"
                         value="math::XYZPoint">
typedef math::XYZPoint Point;
                </typedef>

                <constructor name="SuperCluster"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
SuperCluster();
                    <comment>
        default constructor
                    </comment>
                </constructor>

                <constructor name="SuperCluster"
                             return=""
                             args="['double','const Point&amp;']"
                             vars="['energy','position']"
                             qual="">
SuperCluster(double energy, const Point&amp; position);
                    <comment>
        constructor defined by CaloCluster - will have to use setSeed and add() separately
                    </comment>
                </constructor>

                <constructor name="SuperCluster"
                             return=""
                             args="['double','const Point&amp;','const CaloClusterPtr&amp;','const CaloClusterPtrVector&amp;','double=0.','double=0.','double=0.']"
                             vars="['energy','position','seed','clusters','Epreshower','phiWidth','etaWidth']"
                             qual="">
SuperCluster(double energy, const Point&amp; position, const CaloClusterPtr&amp; seed, const CaloClusterPtrVector&amp; clusters, double Epreshower=0., double phiWidth=0., double etaWidth=0.);
                </constructor>

                <constructor name="SuperCluster"
                             return=""
                             args="['double','const Point&amp;','const CaloClusterPtr&amp;','const CaloClusterPtrVector&amp;','const CaloClusterPtrVector&amp;','double=0.','double=0.','double=0.']"
                             vars="['energy','position','seed','clusters','preshowerClusters','Epreshower','phiWidth','etaWidth']"
                             qual="">
SuperCluster(double energy, const Point&amp; position, const CaloClusterPtr&amp; seed, const CaloClusterPtrVector&amp; clusters, const CaloClusterPtrVector&amp; preshowerClusters, double Epreshower=0., double phiWidth=0., double etaWidth=0.);
                    <comment>
       to be merged in the previous one? -- FIXME
                    </comment>
                </constructor>

                <method1 name="rawEnergy"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double rawEnergy() const;
                    <comment>
        raw uncorrected energy (sum of energies of component BasicClusters)
                    </comment>
                </method1>

                <method1 name="preshowerEnergy"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double preshowerEnergy() const;
                    <comment>
        energy deposited in preshower
                    </comment>
                </method1>

                <method1 name="phiWidth"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double phiWidth() const;
                    <comment>
        obtain phi and eta width of the Super Cluster
                    </comment>
                </method1>

                <method1 name="etaWidth"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double etaWidth() const;
                </method1>

                <method1 name="setPreshowerEnergy"
                         return="void"
                         args="['double']"
                         vars="['preshowerEnergy']"
                         qual="">
void setPreshowerEnergy(double preshowerEnergy);
                    <comment>
      Assign new variables to supercluster
                    </comment>
                </method1>

                <method1 name="setPhiWidth"
                         return="void"
                         args="['double']"
                         vars="['pw']"
                         qual="">
void setPhiWidth(double pw);
                </method1>

                <method1 name="setEtaWidth"
                         return="void"
                         args="['double']"
                         vars="['ew']"
                         qual="">
void setEtaWidth(double ew);
                </method1>

                <method1 name="seed"
                         return="const CaloClusterPtr&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const CaloClusterPtr&amp; seed() const;
                    <comment>
        seed BasicCluster
                    </comment>
                </method1>

                <method1 name="clustersBegin"
                         return="CaloCluster_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
CaloCluster_iterator clustersBegin() const;
                    <comment>
        fist iterator over BasicCluster constituents
                    </comment>
                </method1>

                <method1 name="clustersEnd"
                         return="CaloCluster_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
CaloCluster_iterator clustersEnd() const;
                    <comment>
        last iterator over BasicCluster constituents
                    </comment>
                </method1>

                <method1 name="preshowerClustersBegin"
                         return="CaloCluster_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
CaloCluster_iterator preshowerClustersBegin() const;
                    <comment>
        fist iterator over PreshowerCluster constituents
                    </comment>
                </method1>

                <method1 name="preshowerClustersEnd"
                         return="CaloCluster_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
CaloCluster_iterator preshowerClustersEnd() const;
                    <comment>
        last iterator over PreshowerCluster constituents
                    </comment>
                </method1>

                <method1 name="clustersSize"
                         return="size_t"
                         args="['void']"
                         vars="['']"
                         qual="const">
size_t clustersSize() const;
                    <comment>
        number of BasicCluster constituents
                    </comment>
                </method1>

                <method1 name="setSeed"
                         return="void"
                         args="['const CaloClusterPtr&amp;']"
                         vars="['r']"
                         qual="">
void setSeed(const CaloClusterPtr&amp; r);
                    <comment>
        set reference to seed BasicCluster
                    </comment>
                </method1>

                <method1 name="addCluster"
                         return="void"
                         args="['const CaloClusterPtr&amp;']"
                         vars="['r']"
                         qual="">
void addCluster(const CaloClusterPtr&amp; r);
                    <comment>
        add reference to constituent BasicCluster
                    </comment>
                </method1>

                <method1 name="addPreshowerCluster"
                         return="void"
                         args="['const CaloClusterPtr&amp;']"
                         vars="['r']"
                         qual="">
void addPreshowerCluster(const CaloClusterPtr&amp; r);
                    <comment>
        add reference to constituent BasicCluster
                    </comment>
                </method1>

            </section>

            <typemap name="Point"
                     value="math::XYZPoint"
                     type="typedef"/>

        </class>
    </namespace>

    <type name="CaloCluster"/>
    <type name="CaloCluster_iterator"/>
    <type name="const CaloClusterPtr&amp;"/>
    <type name="const CaloClusterPtrVector&amp;"/>
    <type name="const Point&amp;"/>
    <type name="double"/>
    <type name="reco::SuperCluster"/>
    <type name="size_t"/>
    <type name="void"/>
</header>
