<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PreshowerCluster.xml
  Created:  Thu Jan 14 22:47:05 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/EgammaReco/interface/PreshowerCluster.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/EgammaReco/interface/PreshowerCluster.h">

    <include name="&quot;DataFormats/Math/interface/Point3D.h&quot;"/>
    <include name="&quot;DataFormats/EgammaReco/interface/BasicCluster.h&quot;"/>
    <include name="&quot;DataFormats/EgammaReco/interface/BasicClusterFwd.h&quot;"/>
    <include name="&lt;cmath&gt;"/>

    <namespace name="reco">

        <class name="PreshowerCluster"
               fullname="reco::PreshowerCluster"
               module="DataFormats.EgammaReco"
               project=""
               type="regular">
            <baseclass name="public CaloCluster"/>

            <section name="public">
                <typedef name="Point"
                         value="math::XYZPoint">
typedef math::XYZPoint Point;
                </typedef>

                <constructor name="PreshowerCluster"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PreshowerCluster();
                    <comment>
        default constructor
                    </comment>
                </constructor>

                <destructor name="~PreshowerCluster"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~PreshowerCluster();
                </destructor>

                <constructor name="PreshowerCluster"
                             return=""
                             args="['const double','const Point&amp;','const std::vector&lt;DetId&gt;','const int']"
                             vars="['E','pos','usedHits','plane']"
                             qual="">
PreshowerCluster(const double E, const Point&amp; pos, const std::vector&lt;DetId&gt; usedHits, const int plane);
                    <comment>
        Constructor from EcalRecHits
                    </comment>
                </constructor>

                <copyconstructor name="PreshowerCluster"
                                 return=""
                                 args="['const PreshowerCluster&amp;']"
                                 vars="['']"
                                 qual="">
PreshowerCluster(const PreshowerCluster&amp;);
                    <comment>
        Constructor from cluster
                    </comment>
                </copyconstructor>

                <method1 name="nhits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int nhits() const;
                    <comment>
        Number of RecHits the cluster
                    </comment>
                </method1>

                <method1 name="plane"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int plane() const;
                    <comment>
        Preshower plane
                    </comment>
                </method1>

                <method1 name="et"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double et() const;
                </method1>

                <operator name="operator=="
                          return="bool"
                          args="['const PreshowerCluster&amp;']"
                          vars="['']"
                          qual="const">
bool operator==(const PreshowerCluster&amp;) const;
                    <comment>
        Comparisons
                    </comment>
                </operator>

                <operator name="operator&lt;"
                          return="bool"
                          args="['const PreshowerCluster&amp;']"
                          vars="['']"
                          qual="const">
bool operator&lt;(const PreshowerCluster&amp;) const;
                </operator>

                <method1 name="basicCluster"
                         return="BasicClusterRef"
                         args="['void']"
                         vars="['']"
                         qual="const">
BasicClusterRef basicCluster() const;
                    <comment>
        Associated basic cluster;
                    </comment>
                </method1>

                <method2 name="getHitsByDetId"
                         return="std::vector&lt;DetId&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;DetId&gt; getHitsByDetId() const;
                    <comment>
        DetIds of component RecHits
                    </comment>
                </method2>

                <method1 name="setBCRef"
                         return="void"
                         args="['const BasicClusterRef&amp;']"
                         vars="['r']"
                         qual="">
void setBCRef(const BasicClusterRef&amp; r);
                </method1>

            </section>

            <typemap name="Point"
                     value="math::XYZPoint"
                     type="typedef"/>

        </class>
    </namespace>

    <type name="BasicClusterRef"/>
    <type name="CaloCluster"/>
    <type name="bool"/>
    <type name="const BasicClusterRef&amp;"/>
    <type name="const Point&amp;"/>
    <type name="const PreshowerCluster&amp;"/>
    <type name="const double"/>
    <type name="const int"/>
    <type name="const std::vector&lt;DetId&gt;"/>
    <type name="double"/>
    <type name="int"/>
    <type name="reco::PreshowerCluster"/>
    <type name="std::vector&lt;DetId&gt;"/>
    <type name="void"/>
</header>
