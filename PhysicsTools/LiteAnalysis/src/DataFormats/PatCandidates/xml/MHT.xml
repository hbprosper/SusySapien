<?xml version="1.0"?>
<!--
==============================================================================
  XML File: MHT.xml
  Created:  Fri Jan 15 20:47:13 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/PatCandidates/interface/MHT.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/PatCandidates/interface/MHT.h">

    <include name="&quot;DataFormats/Candidate/interface/CompositeRefBaseCandidate.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/Candidate.h&quot;"/>

    <namespace name="pat">

        <class name="MHT"
               fullname="pat::MHT"
               module="DataFormats.PatCandidates"
               project=""
               type="regular">
            <baseclass name="public reco::CompositeRefBaseCandidate"/>

            <section name="public">
                <constructor name="MHT"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
MHT ();
                </constructor>

                <constructor name="MHT"
                             return=""
                             args="['const Candidate::LorentzVector&amp;','double','double']"
                             vars="['p4','ht','signif']"
                             qual="">
MHT (const Candidate::LorentzVector&amp; p4, double ht, double signif);
                </constructor>

                <destructor name="~MHT"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~MHT ();
                </destructor>

                <method1 name="mht"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double mht() const;
                </method1>

                <method1 name="phi"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double phi() const;
                </method1>

                <method1 name="ht"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double ht() const;
                </method1>

                <method1 name="significance"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double significance() const;
                </method1>

                <method1 name="error"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double error() const;
                </method1>

                <method1 name="getNumberOfJets"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double getNumberOfJets() const;
                </method1>

                <method1 name="setNumberOfJets"
                         return="void"
                         args="['const double&amp;']"
                         vars="['numberOfJets']"
                         qual="">
void setNumberOfJets(const double&amp; numberOfJets);
                </method1>

                <method1 name="getNumberOfElectrons"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double getNumberOfElectrons() const;
                </method1>

                <method1 name="setNumberOfElectrons"
                         return="void"
                         args="['const double&amp;']"
                         vars="['numberOfElectrons']"
                         qual="">
void setNumberOfElectrons(const double&amp; numberOfElectrons);
                </method1>

                <method1 name="getNumberOfMuons"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double getNumberOfMuons() const;
                </method1>

                <method1 name="setNumberOfMuons"
                         return="void"
                         args="['const double&amp;']"
                         vars="['numberOfMuons']"
                         qual="">
void setNumberOfMuons(const double&amp; numberOfMuons);
                </method1>

            </section>

        </class>
        <typedef name="MHTCollection"
                 value="std::vector&lt;pat::MHT&gt;">
typedef std::vector&lt;pat::MHT&gt; MHTCollection;
        </typedef>

    </namespace>

    <type name="const Candidate::LorentzVector&amp;"/>
    <type name="const double&amp;"/>
    <type name="double"/>
    <type name="pat::MHT"/>
    <type name="reco::CompositeRefBaseCandidate"/>
    <type name="void"/>
</header>
