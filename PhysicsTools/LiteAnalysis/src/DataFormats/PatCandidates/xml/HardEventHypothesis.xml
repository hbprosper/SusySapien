<?xml version="1.0"?>
<!--
==============================================================================
  XML File: HardEventHypothesis.xml
  Created:  Fri Jan 15 20:47:10 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/PatCandidates/interface/HardEventHypothesis.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/PatCandidates/interface/HardEventHypothesis.h">

    <include name="&quot;DataFormats/Candidate/interface/Candidate.h&quot;"/>
    <include name="&quot;DataFormats/PatCandidates/interface/Electron.h&quot;"/>
    <include name="&quot;DataFormats/PatCandidates/interface/Muon.h&quot;"/>
    <include name="&quot;DataFormats/PatCandidates/interface/Jet.h&quot;"/>
    <include name="&quot;DataFormats/PatCandidates/interface/Photon.h&quot;"/>
    <include name="&quot;DataFormats/PatCandidates/interface/MET.h&quot;"/>
    <include name="&quot;DataFormats/PatCandidates/interface/Tau.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/CompositeCandidate.h&quot;"/>
    <include name="&lt;vector&gt;"/>
    <forward name="StarterKit"/>

    <namespace name="pat">

        <class name="HardEventHypothesis"
               fullname="pat::HardEventHypothesis"
               module="DataFormats.PatCandidates"
               project=""
               type="abstract regular">

            <section name="public">
                <friend>
friend class StarterKit;
                    <comment>
       Allow StarterKit to access the internal members of this class
                    </comment>
                </friend>

                <method1 name="setQuality"
                         return="inline void"
                         args="['float']"
                         vars="['q']"
                         qual="">
inline void setQuality(float q);
                    <comment>
       Setting quality member
                    </comment>
                </method1>

                <method1 name="getQuality"
                         return="inline float"
                         args="['void']"
                         vars="['']"
                         qual="const">
inline float getQuality() const;
                    <comment>
       Getting quality member
                    </comment>
                </method1>

                <method1 name="getCandidateRole"
                         return="virtual const char*"
                         args="['int=0']"
                         vars="['i']"
                         qual="const = 0">
virtual const char* getCandidateRole (int i=0) const=0;
                    <comment>
       This will return static event-wide definitions of the candidate roles.
                    </comment>
                </method1>

                <method1 name="getIsVector"
                         return="virtual bool"
                         args="['int=0']"
                         vars="['i']"
                         qual="const = 0">
virtual bool getIsVector(int i=0) const=0;
                    <comment>
       This will return static event-wide boolean to see if the role is a vector or not
                    </comment>
                </method1>

            </section>

        </class>
    </namespace>

    <type name="bool"/>
    <type name="const char*"/>
    <type name="float"/>
    <type name="int"/>
    <type name="pat::HardEventHypothesis"/>
    <type name="void"/>
</header>
