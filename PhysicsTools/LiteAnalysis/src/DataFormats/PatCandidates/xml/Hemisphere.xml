<?xml version="1.0"?>
<!--
==============================================================================
  XML File: Hemisphere.xml
  Created:  Thu Jan 14 22:48:12 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/PatCandidates/interface/Hemisphere.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/PatCandidates/interface/Hemisphere.h">

    <include name="&quot;DataFormats/Candidate/interface/CompositePtrCandidate.h&quot;"/>

    <namespace name="pat">
        <comment>
   Define typedefs for convenience
        </comment>
        <forward name="Hemisphere"/>
        <typedef name="HemisphereCollection"
                 value="std::vector&lt;Hemisphere&gt;">
typedef std::vector&lt;Hemisphere&gt; HemisphereCollection;
        </typedef>

        <typedef name="HemisphereRef"
                 value="edm::Ref&lt;HemisphereCollection&gt;">
typedef edm::Ref&lt;HemisphereCollection&gt; HemisphereRef;
        </typedef>

        <typedef name="HemisphereRefVector"
                 value="edm::RefVector&lt;HemisphereCollection&gt;">
typedef edm::RefVector&lt;HemisphereCollection&gt; HemisphereRefVector;
        </typedef>

    </namespace>

    <namespace name="pat">

        <class name="Hemisphere"
               fullname="pat::Hemisphere"
               module="DataFormats.PatCandidates"
               project=""
               type="regular">
            <baseclass name="public reco::CompositePtrCandidate"/>

            <section name="public">
                <constructor name="Hemisphere"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
Hemisphere ();
                </constructor>

                <constructor name="Hemisphere"
                             return=""
                             args="['const Particle::LorentzVector&amp;']"
                             vars="['p4']"
                             qual="">
Hemisphere (const Particle::LorentzVector&amp; p4);
                </constructor>

                <destructor name="~Hemisphere"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~Hemisphere ();
                </destructor>

            </section>

        </class>
    </namespace>

    <type name="const Particle::LorentzVector&amp;"/>
    <type name="pat::Hemisphere"/>
    <type name="reco::CompositePtrCandidate"/>
    <type name="void"/>
</header>
