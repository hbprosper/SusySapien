<?xml version="1.0"?>
<!--
==============================================================================
  XML File: TriggerFilterObjectWithRefs.xml
  Created:  Thu Jan 14 22:49:04 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/HLTReco/interface/TriggerFilterObjectWithRefs.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/HLTReco/interface/TriggerFilterObjectWithRefs.h">

    <include name="&quot;DataFormats/HLTReco/interface/TriggerRefsCollections.h&quot;"/>
    <include name="&quot;FWCore/Utilities/interface/InputTag.h&quot;"/>
    <include name="&lt;string&gt;"/>
    <include name="&lt;vector&gt;"/>
    <include name="&lt;algorithm&gt;"/>

    <namespace name="trigger">

        <class name="TriggerFilterObjectWithRefs"
               fullname="trigger::TriggerFilterObjectWithRefs"
               module="DataFormats.HLTReco"
               project=""
               type="regular">
            <baseclass name="public TriggerRefsCollections"/>
            <comment>
      class)
            </comment>

            <section name="public">
                <constructor name="TriggerFilterObjectWithRefs"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
TriggerFilterObjectWithRefs();
                    <comment>
        constructors
                    </comment>
                </constructor>

                <constructor name="TriggerFilterObjectWithRefs"
                             return=""
                             args="['int','int']"
                             vars="['path','module']"
                             qual="">
TriggerFilterObjectWithRefs(int path, int module);
                </constructor>

                <method1 name="path"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int path() const;
                    <comment>
        accessors
                    </comment>
                </method1>

                <method1 name="module"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int module() const;
                </method1>

                <method1 name="addCollectionTag"
                         return="void"
                         args="['const edm::InputTag&amp;']"
                         vars="['collectionTag']"
                         qual="">
void addCollectionTag(const edm::InputTag&amp; collectionTag);
                    <comment>
        collectionTags
                    </comment>
                </method1>

                <method2 name="getCollectionTags"
                         return="void"
                         args="['std::vector&lt;edm::InputTag&gt;&amp;']"
                         vars="['collectionTags']"
                         qual="const">
void getCollectionTags(std::vector&lt;edm::InputTag&gt;&amp; collectionTags) const;
                </method2>

                <method1 name="swap"
                         return="void"
                         args="['TriggerFilterObjectWithRefs&amp;']"
                         vars="['other']"
                         qual="">
void swap(TriggerFilterObjectWithRefs&amp; other);
                    <comment>
        utility
                    </comment>
                </method1>

            </section>

        </class>
        <function1 name="swap"
                   return="inline void"
                   args="['TriggerFilterObjectWithRefs&amp;','TriggerFilterObjectWithRefs&amp;']"
                   vars="['first','second']"
                   qual="">
inline void swap(TriggerFilterObjectWithRefs&amp; first, TriggerFilterObjectWithRefs&amp; second);
            <comment>
     picked up via argument dependent lookup, e-g- by boost::swap()
            </comment>
        </function1>

    </namespace>

    <type name="TriggerFilterObjectWithRefs&amp;"/>
    <type name="TriggerRefsCollections"/>
    <type name="const edm::InputTag&amp;"/>
    <type name="int"/>
    <type name="std::vector&lt;edm::InputTag&gt;&amp;"/>
    <type name="trigger::TriggerFilterObjectWithRefs"/>
    <type name="void"/>
</header>
