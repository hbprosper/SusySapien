<?xml version="1.0"?>
<!--
==============================================================================
  XML File: RecoCaloTowerCandidate.xml
  Created:  Thu Jan 14 22:48:29 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/RecoCandidate/interface/RecoCaloTowerCandidate.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/RecoCandidate/interface/RecoCaloTowerCandidate.h">

    <include name="&quot;DataFormats/RecoCandidate/interface/RecoCandidate.h&quot;"/>

    <namespace name="reco">

        <class name="RecoCaloTowerCandidate"
               fullname="reco::RecoCaloTowerCandidate"
               module="DataFormats.RecoCandidate"
               project=""
               type="regular">
            <baseclass name="public RecoCandidate"/>

            <section name="public">
                <constructor name="RecoCaloTowerCandidate"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
RecoCaloTowerCandidate();
                    <comment>
        default constructor
                    </comment>
                </constructor>

                <constructor name="RecoCaloTowerCandidate"
                             return=""
                             args="['Charge','const LorentzVector&amp;','const Point&amp;=Point(0, 0, 0)']"
                             vars="['q','p4','vtx']"
                             qual="">
RecoCaloTowerCandidate(Charge q, const LorentzVector&amp; p4, const Point&amp; vtx=Point(0, 0, 0));
                    <comment>
        constructor from values
                    </comment>
                </constructor>

                <constructor name="RecoCaloTowerCandidate"
                             return=""
                             args="['Charge','const PolarLorentzVector&amp;','const Point&amp;=Point(0, 0, 0)']"
                             vars="['q','p4','vtx']"
                             qual="">
RecoCaloTowerCandidate(Charge q, const PolarLorentzVector&amp; p4, const Point&amp; vtx=Point(0, 0, 0));
                    <comment>
        constructor from values
                    </comment>
                </constructor>

                <destructor name="~RecoCaloTowerCandidate"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~RecoCaloTowerCandidate();
                    <comment>
        destructor
                    </comment>
                </destructor>

                <method1 name="clone"
                         return="virtual RecoCaloTowerCandidate*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual RecoCaloTowerCandidate* clone() const;
                    <comment>
        returns a clone of the candidate
                    </comment>
                </method1>

                <method1 name="setCaloTower"
                         return="void"
                         args="['const CaloTowerRef&amp;']"
                         vars="['r']"
                         qual="">
void setCaloTower(const CaloTowerRef&amp; r);
                    <comment>
        set CaloTower reference
                    </comment>
                </method1>

                <method1 name="caloTower"
                         return="virtual CaloTowerRef"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual CaloTowerRef caloTower() const;
                    <comment>
        reference to a CaloTower
                    </comment>
                </method1>

            </section>

        </class>
    </namespace>

    <type name="CaloTowerRef"/>
    <type name="Charge"/>
    <type name="RecoCaloTowerCandidate*"/>
    <type name="RecoCandidate"/>
    <type name="const CaloTowerRef&amp;"/>
    <type name="const LorentzVector&amp;"/>
    <type name="const Point&amp;"/>
    <type name="const PolarLorentzVector&amp;"/>
    <type name="reco::RecoCaloTowerCandidate"/>
    <type name="void"/>
</header>
