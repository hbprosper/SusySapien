<?xml version="1.0"?>
<!--
==============================================================================
  XML File: TrackCandidate.xml
  Created:  Fri Jan 15 20:47:44 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TrackCandidate/interface/TrackCandidate.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/TrackCandidate/interface/TrackCandidate.h">

    <include name="&quot;DataFormats/Common/interface/RefToBase.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/OwnVector.h&quot;"/>
    <include name="&quot;DataFormats/TrackingRecHit/interface/TrackingRecHit.h&quot;"/>
    <include name="&quot;DataFormats/TrajectorySeed/interface/TrajectorySeed.h&quot;"/>
    <include name="&lt;utility&gt;"/>

    <class name="TrackCandidate"
           fullname="TrackCandidate"
           module="DataFormats.TrackCandidate"
           project=""
           type="regular">
        <comment>
    A track candidate is
    - a TSOS or equivalent (here a PTrajectoryStateOnDet)
    - a vector of rechits (here via the OwnVector interface)
    - a TrajectorySeed (to be confirmed as matching the final track)
    - a reference to the TrajectorySeed in the origianl collection
      of seeds. Often this collection is not saved on disk and
      therefore the reference may be invalid.

only the second is compulsory,the other three can be empty / not present
        </comment>

        <section name="public">
            <typedef name="RecHitContainer"
                     value="edm::OwnVector&lt;TrackingRecHit&gt;">
typedef edm::OwnVector&lt;TrackingRecHit&gt; RecHitContainer;
            </typedef>

            <typedef name="const_iterator"
                     value="RecHitContainer::const_iterator">
typedef RecHitContainer::const_iterator const_iterator;
            </typedef>

            <typedef name="range"
                     value="std::pair&lt;const_iterator, const_iterator&gt;">
typedef std::pair&lt;const_iterator, const_iterator&gt; range;
            </typedef>

            <constructor name="TrackCandidate"
                         return=""
                         args="['void']"
                         vars="['']"
                         qual="">
TrackCandidate();
            </constructor>

            <destructor name="~TrackCandidate"
                        return="virtual"
                        args="['void']"
                        vars="['']"
                        qual="">
virtual ~TrackCandidate();
            </destructor>

            <constructor name="TrackCandidate"
                         return=""
                         args="['RecHitContainer&amp;']"
                         vars="['rh']"
                         qual="">
TrackCandidate(RecHitContainer&amp; rh);
            </constructor>

            <constructor name="TrackCandidate"
                         return=""
                         args="['RecHitContainer&amp;','TrajectorySeed const&amp;','PTrajectoryStateOnDet const&amp;']"
                         vars="['rh','s','st']"
                         qual="">
TrackCandidate(RecHitContainer&amp; rh, TrajectorySeed const&amp; s, PTrajectoryStateOnDet const&amp; st);
            </constructor>

            <constructor name="TrackCandidate"
                         return=""
                         args="['RecHitContainer&amp;','TrajectorySeed const&amp;','PTrajectoryStateOnDet const&amp;','const edm::RefToBase&lt;TrajectorySeed&gt;&amp;']"
                         vars="['rh','s','st','seedRef']"
                         qual="">
TrackCandidate(RecHitContainer&amp; rh, TrajectorySeed const&amp; s, PTrajectoryStateOnDet const&amp; st, const edm::RefToBase&lt;TrajectorySeed&gt;&amp; seedRef);
            </constructor>

            <method1 name="trajectoryStateOnDet"
                     return="PTrajectoryStateOnDet const&amp;"
                     args="['void']"
                     vars="['']"
                     qual="const">
PTrajectoryStateOnDet const&amp; trajectoryStateOnDet() const;
            </method1>

            <method1 name="recHits"
                     return="range"
                     args="['void']"
                     vars="['']"
                     qual="const">
range recHits() const;
            </method1>

            <method1 name="seed"
                     return="TrajectorySeed const&amp;"
                     args="['void']"
                     vars="['']"
                     qual="const">
TrajectorySeed const&amp; seed() const;
            </method1>

            <method2 name="seedRef"
                     return="edm::RefToBase&lt;TrajectorySeed&gt;"
                     args="['void']"
                     vars="['']"
                     qual="const">
edm::RefToBase&lt;TrajectorySeed&gt; seedRef() const;
                <comment>
       return the edm::reference to the trajectory seed in the original
       seeds collection. If the collection has been dropped from the
       Event, the reference may be invalid. Its validity should be tested,
       before the reference is actually used.
                </comment>
            </method2>

            <method2 name="setSeedRef"
                     return="void"
                     args="['edm::RefToBase&lt;TrajectorySeed&gt;&amp;']"
                     vars="['seedRef']"
                     qual="">
void setSeedRef(edm::RefToBase&lt;TrajectorySeed&gt;&amp; seedRef);
            </method2>

        </section>

        <typemap name="RecHitContainer"
                 value="edm::OwnVector&lt;TrackingRecHit&gt;"
                 type="typedef"/>
        <typemap name="const_iterator"
                 value="edm::OwnVector&lt;TrackingRecHit&gt;::const_iterator"
                 type="typedef"/>
        <typemap name="range"
                 value="std::pair&lt;edm::OwnVector&lt;TrackingRecHit&gt;::const_iterator, edm::OwnVector&lt;TrackingRecHit&gt;::const_iterator&gt;"
                 type="typedef"/>

    </class>

    <type name="PTrajectoryStateOnDet const&amp;"/>
    <type name="RecHitContainer&amp;"/>
    <type name="TrackCandidate"/>
    <type name="TrajectorySeed const&amp;"/>
    <type name="const edm::RefToBase&lt;TrajectorySeed&gt;&amp;"/>
    <type name="edm::RefToBase&lt;TrajectorySeed&gt;"/>
    <type name="edm::RefToBase&lt;TrajectorySeed&gt;&amp;"/>
    <type name="range"/>
    <type name="void"/>
</header>
