<?xml version="1.0"?>
<!--
==============================================================================
  XML File: CaloMET.xml
  Created:  Thu Jan 14 22:47:33 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/METReco/interface/CaloMET.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/METReco/interface/CaloMET.h">

    <include name="&quot;DataFormats/METReco/interface/SpecificCaloMETData.h&quot;"/>
    <include name="&quot;DataFormats/METReco/interface/MET.h&quot;"/>
    <include name="&quot;DataFormats/METReco/interface/CorrMETData.h&quot;"/>

    <namespace name="reco">

        <class name="CaloMET"
               fullname="reco::CaloMET"
               module="DataFormats.METReco"
               project=""
               type="regular">
            <baseclass name="public MET"/>

            <section name="public">
                <constructor name="CaloMET"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
CaloMET();
                    <comment>
         Constructors
                    </comment>
                </constructor>

                <constructor name="CaloMET"
                             return=""
                             args="['SpecificCaloMETData','double','const LorentzVector&amp;','const Point&amp;']"
                             vars="['calo_data_','sumet_','fP4','fVertex']"
                             qual="">
CaloMET(SpecificCaloMETData calo_data_, double sumet_, const LorentzVector&amp; fP4, const Point&amp; fVertex);
                </constructor>

                <constructor name="CaloMET"
                             return=""
                             args="['SpecificCaloMETData','double','std::vector&lt;CorrMETData&gt;','const LorentzVector&amp;','const Point&amp;']"
                             vars="['calo_data_','sumet_','corr_','fP4','fVertex']"
                             qual="">
CaloMET(SpecificCaloMETData calo_data_, double sumet_, std::vector&lt;CorrMETData&gt; corr_, const LorentzVector&amp; fP4, const Point&amp; fVertex);
                </constructor>

                <destructor name="~CaloMET"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~CaloMET();
                    <comment>
         Default destructor
                    </comment>
                </destructor>

                <method1 name="maxEtInEmTowers"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double maxEtInEmTowers() const;
                    <comment>
         Returns the maximum energy deposited in ECAL towers
                    </comment>
                </method1>

                <method1 name="maxEtInHadTowers"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double maxEtInHadTowers() const;
                    <comment>
         Returns the maximum energy deposited in HCAL towers
                    </comment>
                </method1>

                <method1 name="etFractionHadronic"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double etFractionHadronic () const;
                    <comment>
         Returns the event hadronic energy fraction
                    </comment>
                </method1>

                <method1 name="emEtFraction"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double emEtFraction() const;
                    <comment>
         Returns the event electromagnetic energy fraction
                    </comment>
                </method1>

                <method1 name="hadEtInHB"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double hadEtInHB() const;
                    <comment>
         Returns the event hadronic energy in HB
                    </comment>
                </method1>

                <method1 name="hadEtInHO"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double hadEtInHO() const;
                    <comment>
         Returns the event hadronic energy in HO
                    </comment>
                </method1>

                <method1 name="hadEtInHE"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double hadEtInHE() const;
                    <comment>
         Returns the event hadronic energy in HE
                    </comment>
                </method1>

                <method1 name="hadEtInHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double hadEtInHF() const;
                    <comment>
         Returns the event hadronic energy in HF
                    </comment>
                </method1>

                <method1 name="emEtInEB"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double emEtInEB() const;
                    <comment>
         Returns the event electromagnetic energy in EB
                    </comment>
                </method1>

                <method1 name="emEtInEE"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double emEtInEE() const;
                    <comment>
         Returns the event electromagnetic energy in EE
                    </comment>
                </method1>

                <method1 name="emEtInHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double emEtInHF() const;
                    <comment>
         Returns the event electromagnetic energy extracted from HF
                    </comment>
                </method1>

                <method1 name="metSignificance"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double metSignificance() const;
                    <comment>
         Returns the event MET Significance
                    </comment>
                </method1>

                <method1 name="CaloSETInpHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double CaloSETInpHF() const;
                    <comment>
         Returns the event SET in HF+
                    </comment>
                </method1>

                <method1 name="CaloSETInmHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double CaloSETInmHF() const;
                    <comment>
         Returns the event SET in HF-
                    </comment>
                </method1>

                <method1 name="CaloMETInpHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double CaloMETInpHF() const;
                    <comment>
         Returns the event MET in HF+
                    </comment>
                </method1>

                <method1 name="CaloMETInmHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double CaloMETInmHF() const;
                    <comment>
         Returns the event MET in HF-
                    </comment>
                </method1>

                <method1 name="CaloMETPhiInpHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double CaloMETPhiInpHF() const;
                    <comment>
         Returns the event MET-phi in HF+
                    </comment>
                </method1>

                <method1 name="CaloMETPhiInmHF"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double CaloMETPhiInmHF() const;
                    <comment>
         Returns the event MET-phi in HF-
                    </comment>
                </method1>

                <method1 name="getSpecific"
                         return="SpecificCaloMETData"
                         args="['void']"
                         vars="['']"
                         qual="const">
SpecificCaloMETData getSpecific() const;
                    <comment>
         block accessors
                    </comment>
                </method1>

            </section>

        </class>
    </namespace>

    <type name="MET"/>
    <type name="SpecificCaloMETData"/>
    <type name="const LorentzVector&amp;"/>
    <type name="const Point&amp;"/>
    <type name="double"/>
    <type name="reco::CaloMET"/>
    <type name="std::vector&lt;CorrMETData&gt;"/>
    <type name="void"/>
</header>
