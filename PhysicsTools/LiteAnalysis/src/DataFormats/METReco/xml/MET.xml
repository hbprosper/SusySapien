<?xml version="1.0"?>
<!--
==============================================================================
  XML File: MET.xml
  Created:  Fri Jan 15 20:46:47 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/METReco/interface/MET.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/METReco/interface/MET.h">

    <include name="&quot;DataFormats/RecoCandidate/interface/RecoCandidate.h&quot;"/>
    <include name="&quot;DataFormats/METReco/interface/CorrMETData.h&quot;"/>
    <include name="&lt;cmath&gt;"/>
    <include name="&lt;vector&gt;"/>
    <include name="&lt;cstring&gt;"/>

    <namespace name="reco">

        <class name="MET"
               fullname="reco::MET"
               module="DataFormats.METReco"
               project=""
               type="regular">
            <baseclass name="public RecoCandidate"/>

            <section name="public">
                <constructor name="MET"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
MET();
                    <comment>
        Define Constructors
                    </comment>
                </constructor>

                <constructor name="MET"
                             return=""
                             args="['const LorentzVector&amp;','const Point&amp;']"
                             vars="['p4_','vtx_']"
                             qual="">
MET(const LorentzVector&amp; p4_, const Point&amp; vtx_);
                </constructor>

                <constructor name="MET"
                             return=""
                             args="['double','const LorentzVector&amp;','const Point&amp;']"
                             vars="['sumet_','p4_','vtx_']"
                             qual="">
MET(double sumet_, const LorentzVector&amp; p4_, const Point&amp; vtx_);
                </constructor>

                <constructor name="MET"
                             return=""
                             args="['double','std::vector&lt;CorrMETData&gt;','const LorentzVector&amp;','const Point&amp;']"
                             vars="['sumet_','corr_','p4_','vtx_']"
                             qual="">
MET(double sumet_, std::vector&lt;CorrMETData&gt; corr_, const LorentzVector&amp; p4_, const Point&amp; vtx_);
                </constructor>

                <method1 name="sumEt"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double sumEt() const;
                    <comment>
        Define methods to extract elements related to MET
        scalar sum of transverse energy over all objects
                    </comment>
                </method1>

                <method1 name="mEtSig"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double mEtSig() const;
                    <comment>
        MET Significance = MET / sqrt(SumET)
                    </comment>
                </method1>

                <method1 name="e_longitudinal"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double e_longitudinal() const;
                    <comment>
        longitudinal component of the vector sum of energy over all object
        (useful for data quality monitoring)
                    </comment>
                </method1>

                <method2 name="dmEx"
                         return="std::vector&lt;double&gt;"
                         args="['void']"
                         vars="['']"
                         qual="">
std::vector&lt;double&gt; dmEx();
                    <comment>
        Define different methods for the corrections to individual MET elements
                    </comment>
                </method2>

                <method2 name="dmEy"
                         return="std::vector&lt;double&gt;"
                         args="['void']"
                         vars="['']"
                         qual="">
std::vector&lt;double&gt; dmEy();
                </method2>

                <method2 name="dsumEt"
                         return="std::vector&lt;double&gt;"
                         args="['void']"
                         vars="['']"
                         qual="">
std::vector&lt;double&gt; dsumEt();
                </method2>

                <method2 name="mEtCorr"
                         return="std::vector&lt;CorrMETData&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;CorrMETData&gt; mEtCorr() const;
                    <comment>
        Define method to extract the entire &quot;block&quot; of MET corrections
                    </comment>
                </method2>

            </section>

        </class>
    </namespace>

    <type name="RecoCandidate"/>
    <type name="const LorentzVector&amp;"/>
    <type name="const Point&amp;"/>
    <type name="double"/>
    <type name="reco::MET"/>
    <type name="std::vector&lt;CorrMETData&gt;"/>
    <type name="std::vector&lt;double&gt;"/>
    <type name="void"/>
</header>
