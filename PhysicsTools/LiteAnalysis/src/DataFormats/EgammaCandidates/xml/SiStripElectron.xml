<?xml version="1.0"?>
<!--
==============================================================================
  XML File: SiStripElectron.xml
  Created:  Thu Jan 14 22:46:58 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/EgammaCandidates/interface/SiStripElectron.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/EgammaCandidates/interface/SiStripElectron.h">

    <include name="&lt;vector&gt;"/>
    <include name="&quot;DataFormats/RecoCandidate/interface/RecoCandidate.h&quot;"/>
    <include name="&quot;DataFormats/TrackerRecHit2D/interface/SiStripRecHit2DCollection.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefVector.h&quot;"/>

    <namespace name="reco">
        <comment>
   forward declarations
        </comment>

        <class name="SiStripElectron"
               fullname="reco::SiStripElectron"
               module="DataFormats.EgammaCandidates"
               project=""
               type="regular">
            <baseclass name="public RecoCandidate"/>

            <section name="public">
                <constructor name="SiStripElectron"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
SiStripElectron();
                    <comment>
        default constructor
                    </comment>
                </constructor>

                <constructor name="SiStripElectron"
                             return=""
                             args="['const reco::SuperClusterRef&amp;','Charge','const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp;','const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp;','double','double','double','double','int','double','double','double','unsigned int','unsigned int','unsigned int']"
                             vars="['superCluster','q','rphiRecHits','stereoRecHits','superClusterPhiVsRSlope','phiVsRSlope','phiAtOrigin','chi2','ndof','pt','pz','zVsRSlope','numberOfStereoHits','numberOfBarrelRphiHits','numberOfEndcapZphiHits']"
                             qual="">
SiStripElectron(const reco::SuperClusterRef&amp; superCluster, Charge q, const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp; rphiRecHits, const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp; stereoRecHits, double superClusterPhiVsRSlope, double phiVsRSlope, double phiAtOrigin, double chi2, int ndof, double pt, double pz, double zVsRSlope, unsigned int numberOfStereoHits, unsigned int numberOfBarrelRphiHits, unsigned int numberOfEndcapZphiHits);
                    <comment>
        constructor from band algorithm
                    </comment>
                </constructor>

                <copyconstructor name="SiStripElectron"
                                 return=""
                                 args="['const SiStripElectron&amp;']"
                                 vars="['rhs']"
                                 qual="">
SiStripElectron(const SiStripElectron&amp; rhs);
                    <comment>
        copy constructor (update in SiStripElectron.cc)
                    </comment>
                </copyconstructor>

                <constructor name="SiStripElectron"
                             return=""
                             args="['Charge','const LorentzVector&amp;','const Point&amp;=Point(0, 0, 0)']"
                             vars="['q','p4','vtx']"
                             qual="">
SiStripElectron(Charge q, const LorentzVector&amp; p4, const Point&amp; vtx=Point(0, 0, 0));
                    <comment>
        constructor from RecoCandidate
                    </comment>
                </constructor>

                <destructor name="~SiStripElectron"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~SiStripElectron();
                    <comment>
        destructor
                    </comment>
                </destructor>

                <method1 name="clone"
                         return="virtual SiStripElectron*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual SiStripElectron* clone() const;
                    <comment>
        returns a clone of the candidate
                    </comment>
                </method1>

                <method1 name="superCluster"
                         return="virtual reco::SuperClusterRef"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual reco::SuperClusterRef superCluster() const;
                    <comment>
        reference to a SuperCluster
                    </comment>
                </method1>

                <method2 name="rphiRecHits"
                         return="const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp; rphiRecHits() const;
                    <comment>
        reference to the rphiRecHits identified as belonging to an electron
                    </comment>
                </method2>

                <method2 name="stereoRecHits"
                         return="const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp; stereoRecHits() const;
                    <comment>
        reference to the stereoRecHits identified as belonging to an electron
                    </comment>
                </method2>

                <method1 name="superClusterPhiVsRSlope"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double superClusterPhiVsRSlope() const;
                    <comment>
        returns phi(r) projection from supercluster
                    </comment>
                </method1>

                <method1 name="phiVsRSlope"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double phiVsRSlope() const;
                    <comment>
        returns phi(r) slope from fit to tracker hits
                    </comment>
                </method1>

                <method1 name="phiAtOrigin"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double phiAtOrigin() const;
                    <comment>
        returns phi(r=0) intercept from fit to tracker hits
                    </comment>
                </method1>

                <method1 name="chi2"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double chi2() const;
                    <comment>
        returns chi^2 of fit to tracker hits
                    </comment>
                </method1>

                <method1 name="ndof"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int ndof() const;
                    <comment>
        returns number of degrees of freedom of fit to tracker hits
                    </comment>
                </method1>

                <method1 name="pt"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double pt() const;
                    <comment>
        returns transverse momentum, as determined by fit to tracker hits
                    </comment>
                </method1>

                <method1 name="pz"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double pz() const;
                    <comment>
        returns longitudinal momentum, as determined by fit to tracker hits
                    </comment>
                </method1>

                <method1 name="zVsRSlope"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double zVsRSlope() const;
                    <comment>
        returns z(r) slope fit from stereo tracker hits (constrained to pass through supercluster)
                    </comment>
                </method1>

                <method1 name="numberOfStereoHits"
                         return="unsigned int"
                         args="['void']"
                         vars="['']"
                         qual="const">
unsigned int numberOfStereoHits() const;
                    <comment>
        returns number of stereo hits in phi band (barrel + endcap)
                    </comment>
                </method1>

                <method1 name="numberOfBarrelRphiHits"
                         return="unsigned int"
                         args="['void']"
                         vars="['']"
                         qual="const">
unsigned int numberOfBarrelRphiHits() const;
                    <comment>
        returns number of barrel rphi hits in phi band
                    </comment>
                </method1>

                <method1 name="numberOfEndcapZphiHits"
                         return="unsigned int"
                         args="['void']"
                         vars="['']"
                         qual="const">
unsigned int numberOfEndcapZphiHits() const;
                    <comment>
        returns number of endcap zphi hits in phi band
                    </comment>
                </method1>

                <method1 name="isElectron"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool isElectron() const;
                </method1>

            </section>

        </class>
    </namespace>

    <type name="Charge"/>
    <type name="RecoCandidate"/>
    <type name="SiStripElectron*"/>
    <type name="bool"/>
    <type name="const LorentzVector&amp;"/>
    <type name="const Point&amp;"/>
    <type name="const SiStripElectron&amp;"/>
    <type name="const edm::RefVector&lt;SiStripRecHit2DCollection&gt;&amp;"/>
    <type name="const reco::SuperClusterRef&amp;"/>
    <type name="double"/>
    <type name="int"/>
    <type name="reco::SiStripElectron"/>
    <type name="reco::SuperClusterRef"/>
    <type name="unsigned int"/>
    <type name="void"/>
</header>
