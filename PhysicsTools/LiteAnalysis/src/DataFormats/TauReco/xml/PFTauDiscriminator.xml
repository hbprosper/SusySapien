<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PFTauDiscriminator.xml
  Created:  Thu Jan 14 22:48:45 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TauReco/interface/PFTauDiscriminator.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/TauReco/interface/PFTauDiscriminator.h">

    <include name="&quot;DataFormats/Common/interface/AssociationVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefProd.h&quot;"/>
    <include name="&quot;DataFormats/TauReco/interface/PFTau.h&quot;"/>
    <include name="&lt;vector&gt;"/>

    <namespace name="reco">
        <typedef name="PFTauDiscriminatorBase"
                 value="edm::AssociationVector&lt;PFTauRefProd, std::vector&lt;float&gt; &gt;">
typedef edm::AssociationVector&lt;PFTauRefProd, std::vector&lt;float&gt; &gt; PFTauDiscriminatorBase;
        </typedef>


        <class name="PFTauDiscriminator"
               fullname="reco::PFTauDiscriminator"
               module="DataFormats.TauReco"
               project=""
               type="regular">
            <baseclass name="public PFTauDiscriminatorBase"/>

            <section name="public">
                <constructor name="PFTauDiscriminator"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PFTauDiscriminator();
                </constructor>

                <constructor name="PFTauDiscriminator"
                             return=""
                             args="['const reco::PFTauRefProd&amp;']"
                             vars="['ref']"
                             qual="">
PFTauDiscriminator(const reco::PFTauRefProd&amp; ref);
                </constructor>

                <constructor name="PFTauDiscriminator"
                             return=""
                             args="['const PFTauDiscriminatorBase&amp;']"
                             vars="['v']"
                             qual="">
PFTauDiscriminator(const PFTauDiscriminatorBase&amp; v);
                </constructor>

            </section>

        </class>
        <typedef name="PFTauDiscriminatorVT"
                 value="PFTauDiscriminator::value_type">
typedef PFTauDiscriminator::value_type PFTauDiscriminatorVT;
        </typedef>

        <typedef name="PFTauDiscriminatorRef"
                 value="edm::Ref&lt;PFTauDiscriminator&gt;">
typedef edm::Ref&lt;PFTauDiscriminator&gt; PFTauDiscriminatorRef;
        </typedef>

        <typedef name="PFTauDiscriminatorRefProd"
                 value="edm::RefProd&lt;PFTauDiscriminator&gt;">
typedef edm::RefProd&lt;PFTauDiscriminator&gt; PFTauDiscriminatorRefProd;
        </typedef>

        <typedef name="PFTauDiscriminatorRefVector"
                 value="edm::RefVector&lt;PFTauDiscriminator&gt;">
typedef edm::RefVector&lt;PFTauDiscriminator&gt; PFTauDiscriminatorRefVector;
        </typedef>

    </namespace>

    <type name="PFTauDiscriminatorBase"/>
    <type name="const PFTauDiscriminatorBase&amp;"/>
    <type name="const reco::PFTauRefProd&amp;"/>
    <type name="reco::PFTauDiscriminator"/>
    <type name="void"/>
</header>
