<?xml version="1.0"?>
<!--
==============================================================================
  XML File: CaloTauDiscriminator.xml
  Created:  Fri Jan 15 20:47:33 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TauReco/interface/CaloTauDiscriminator.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/TauReco/interface/CaloTauDiscriminator.h">

    <include name="&quot;DataFormats/Common/interface/AssociationVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefProd.h&quot;"/>
    <include name="&quot;DataFormats/TauReco/interface/CaloTau.h&quot;"/>
    <include name="&lt;vector&gt;"/>

    <namespace name="reco">
        <typedef name="CaloTauDiscriminatorBase"
                 value="edm::AssociationVector&lt;CaloTauRefProd, std::vector&lt;float&gt; &gt;">
typedef edm::AssociationVector&lt;CaloTauRefProd, std::vector&lt;float&gt; &gt; CaloTauDiscriminatorBase;
        </typedef>


        <class name="CaloTauDiscriminator"
               fullname="reco::CaloTauDiscriminator"
               module="DataFormats.TauReco"
               project=""
               type="regular">
            <baseclass name="public CaloTauDiscriminatorBase"/>

            <section name="public">
                <constructor name="CaloTauDiscriminator"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
CaloTauDiscriminator();
                </constructor>

                <constructor name="CaloTauDiscriminator"
                             return=""
                             args="['const reco::CaloTauRefProd&amp;']"
                             vars="['ref']"
                             qual="">
CaloTauDiscriminator(const reco::CaloTauRefProd&amp; ref);
                </constructor>

                <constructor name="CaloTauDiscriminator"
                             return=""
                             args="['const CaloTauDiscriminatorBase&amp;']"
                             vars="['v']"
                             qual="">
CaloTauDiscriminator(const CaloTauDiscriminatorBase&amp; v);
                </constructor>

            </section>

        </class>
        <typedef name="CaloTauDiscriminatorVT"
                 value="CaloTauDiscriminator::value_type">
typedef CaloTauDiscriminator::value_type CaloTauDiscriminatorVT;
        </typedef>

        <typedef name="CaloTauDiscriminatorRef"
                 value="edm::Ref&lt;CaloTauDiscriminator&gt;">
typedef edm::Ref&lt;CaloTauDiscriminator&gt; CaloTauDiscriminatorRef;
        </typedef>

        <typedef name="CaloTauDiscriminatorRefProd"
                 value="edm::RefProd&lt;CaloTauDiscriminator&gt;">
typedef edm::RefProd&lt;CaloTauDiscriminator&gt; CaloTauDiscriminatorRefProd;
        </typedef>

        <typedef name="CaloTauDiscriminatorRefVector"
                 value="edm::RefVector&lt;CaloTauDiscriminator&gt;">
typedef edm::RefVector&lt;CaloTauDiscriminator&gt; CaloTauDiscriminatorRefVector;
        </typedef>

    </namespace>

    <type name="CaloTauDiscriminatorBase"/>
    <type name="const CaloTauDiscriminatorBase&amp;"/>
    <type name="const reco::CaloTauRefProd&amp;"/>
    <type name="reco::CaloTauDiscriminator"/>
    <type name="void"/>
</header>
