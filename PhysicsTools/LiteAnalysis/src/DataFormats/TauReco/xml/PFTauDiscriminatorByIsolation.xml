<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PFTauDiscriminatorByIsolation.xml
  Created:  Thu Jan 14 22:48:46 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TauReco/interface/PFTauDiscriminatorByIsolation.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/TauReco/interface/PFTauDiscriminatorByIsolation.h">

    <include name="&quot;DataFormats/Common/interface/AssociationVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefProd.h&quot;"/>
    <include name="&quot;DataFormats/TauReco/interface/PFTau.h&quot;"/>
    <include name="&lt;vector&gt;"/>

    <namespace name="reco">
        <typedef name="PFTauDiscriminatorByIsolationBase"
                 value="edm::AssociationVector&lt;PFTauRefProd, std::vector&lt;int&gt; &gt;">
typedef edm::AssociationVector&lt;PFTauRefProd, std::vector&lt;int&gt; &gt; PFTauDiscriminatorByIsolationBase;
        </typedef>


        <class name="PFTauDiscriminatorByIsolation"
               fullname="reco::PFTauDiscriminatorByIsolation"
               module="DataFormats.TauReco"
               project=""
               type="regular">
            <baseclass name="public PFTauDiscriminatorByIsolationBase"/>

            <section name="public">
                <constructor name="PFTauDiscriminatorByIsolation"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PFTauDiscriminatorByIsolation();
                </constructor>

                <constructor name="PFTauDiscriminatorByIsolation"
                             return=""
                             args="['const reco::PFTauRefProd&amp;']"
                             vars="['ref']"
                             qual="">
PFTauDiscriminatorByIsolation(const reco::PFTauRefProd&amp; ref);
                </constructor>

                <constructor name="PFTauDiscriminatorByIsolation"
                             return=""
                             args="['const PFTauDiscriminatorByIsolationBase&amp;']"
                             vars="['v']"
                             qual="">
PFTauDiscriminatorByIsolation(const PFTauDiscriminatorByIsolationBase&amp; v);
                </constructor>

            </section>

        </class>
        <typedef name="PFTauDiscriminatorByIsolationVT"
                 value="PFTauDiscriminatorByIsolation::value_type">
typedef PFTauDiscriminatorByIsolation::value_type PFTauDiscriminatorByIsolationVT;
        </typedef>

        <typedef name="PFTauDiscriminatorByIsolationRef"
                 value="edm::Ref&lt;PFTauDiscriminatorByIsolation&gt;">
typedef edm::Ref&lt;PFTauDiscriminatorByIsolation&gt; PFTauDiscriminatorByIsolationRef;
        </typedef>

        <typedef name="PFTauDiscriminatorByIsolationRefProd"
                 value="edm::RefProd&lt;PFTauDiscriminatorByIsolation&gt;">
typedef edm::RefProd&lt;PFTauDiscriminatorByIsolation&gt; PFTauDiscriminatorByIsolationRefProd;
        </typedef>

        <typedef name="PFTauDiscriminatorByIsolationRefVector"
                 value="edm::RefVector&lt;PFTauDiscriminatorByIsolation&gt;">
typedef edm::RefVector&lt;PFTauDiscriminatorByIsolation&gt; PFTauDiscriminatorByIsolationRefVector;
        </typedef>

    </namespace>

    <type name="PFTauDiscriminatorByIsolationBase"/>
    <type name="const PFTauDiscriminatorByIsolationBase&amp;"/>
    <type name="const reco::PFTauRefProd&amp;"/>
    <type name="reco::PFTauDiscriminatorByIsolation"/>
    <type name="void"/>
</header>
