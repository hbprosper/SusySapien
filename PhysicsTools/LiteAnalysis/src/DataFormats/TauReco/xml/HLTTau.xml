<?xml version="1.0"?>
<!--
==============================================================================
  XML File: HLTTau.xml
  Created:  Fri Jan 15 20:47:35 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TauReco/interface/HLTTau.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/TauReco/interface/HLTTau.h">

    <include name="&quot;DataFormats/TauReco/interface/HLTTauFwd.h&quot;"/>

    <namespace name="reco">

        <class name="HLTTau"
               fullname="reco::HLTTau"
               module="DataFormats.TauReco"
               project=""
               type="regular">

            <section name="public">
                <constructor name="HLTTau"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
HLTTau();
                </constructor>

                <constructor name="HLTTau"
                             return=""
                             args="['float','float','float','float','int','float','int','float']"
                             vars="['eta','phi','pt','emIsolation','trackIsolationL25','leadTrackPtL25','trackIsolationL3','leadTrackPtL3']"
                             qual="">
HLTTau(float eta, float phi, float pt, float emIsolation, int trackIsolationL25, float leadTrackPtL25, int trackIsolationL3, float leadTrackPtL3);
                </constructor>

                <destructor name="~HLTTau"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~HLTTau();
                </destructor>

                <method1 name="getEta"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getEta() const;
                </method1>

                <method1 name="getPhi"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getPhi() const;
                </method1>

                <method1 name="getPt"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getPt() const;
                </method1>

                <method1 name="getEMIsolationValue"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getEMIsolationValue() const;
                </method1>

                <method1 name="getL25TrackIsolationResponse"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int getL25TrackIsolationResponse() const;
                </method1>

                <method1 name="getNL25TrackIsolation"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int getNL25TrackIsolation() const;
                </method1>

                <method1 name="getL25LeadTrackPtValue"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getL25LeadTrackPtValue() const;
                </method1>

                <method1 name="getL3TrackIsolationResponse"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int getL3TrackIsolationResponse() const;
                </method1>

                <method1 name="getNL3TrackIsolation"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int getNL3TrackIsolation() const;
                </method1>

                <method1 name="getL3LeadTrackPtValue"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getL3LeadTrackPtValue() const;
                </method1>

                <method1 name="getSumPtTracksL25"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getSumPtTracksL25() const;
                </method1>

                <method1 name="getSumPtTracksL3"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float getSumPtTracksL3() const;
                </method1>

                <method1 name="getSeedEcalHitEt"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double getSeedEcalHitEt() const;
                </method1>

                <method2 name="getEcalClusterShape"
                         return="std::vector&lt;double&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;double&gt; getEcalClusterShape() const;
                </method2>

                <method1 name="getNEcalHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int getNEcalHits() const;
                </method1>

                <method1 name="getHcalIsolEt"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double getHcalIsolEt() const;
                </method1>

                <method1 name="getSeedHcalHitEt"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double getSeedHcalHitEt() const;
                </method1>

                <method2 name="getHcalClusterShape"
                         return="std::vector&lt;double&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;double&gt; getHcalClusterShape() const;
                </method2>

                <method1 name="getNHcalHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int getNHcalHits() const;
                </method1>

                <method1 name="setNL25TrackIsolation"
                         return="void"
                         args="['int']"
                         vars="['nTracks']"
                         qual="">
void setNL25TrackIsolation(int nTracks);
                </method1>

                <method1 name="setNL3TrackIsolation"
                         return="void"
                         args="['int']"
                         vars="['nTracks']"
                         qual="">
void setNL3TrackIsolation(int nTracks);
                </method1>

                <method1 name="setSumPtTracksL25"
                         return="void"
                         args="['double']"
                         vars="['sumPt']"
                         qual="">
void setSumPtTracksL25(double sumPt);
                </method1>

                <method1 name="setSumPtTracksL3"
                         return="void"
                         args="['double']"
                         vars="['sumPt']"
                         qual="">
void setSumPtTracksL3(double sumPt);
                </method1>

                <method1 name="setSeedEcalHitEt"
                         return="void"
                         args="['double']"
                         vars="['seed']"
                         qual="">
void setSeedEcalHitEt(double seed);
                </method1>

                <method2 name="setEcalClusterShape"
                         return="void"
                         args="['std::vector&lt;double&gt;']"
                         vars="['clusters']"
                         qual="">
void setEcalClusterShape(std::vector&lt;double&gt; clusters);
                </method2>

                <method1 name="setNEcalHits"
                         return="void"
                         args="['int']"
                         vars="['nhits']"
                         qual="">
void setNEcalHits(int nhits);
                </method1>

                <method1 name="setHcalIsolEt"
                         return="void"
                         args="['double']"
                         vars="['hcalIso']"
                         qual="">
void setHcalIsolEt(double hcalIso);
                </method1>

                <method1 name="setSeedHcalHitEt"
                         return="void"
                         args="['double']"
                         vars="['seed']"
                         qual="">
void setSeedHcalHitEt(double seed);
                </method1>

                <method2 name="setHcalClusterShape"
                         return="void"
                         args="['std::vector&lt;double&gt;']"
                         vars="['clusters']"
                         qual="">
void setHcalClusterShape(std::vector&lt;double&gt; clusters);
                </method2>

                <method1 name="setNHcalHits"
                         return="void"
                         args="['int']"
                         vars="['nhits']"
                         qual="">
void setNHcalHits(int nhits);
                </method1>

            </section>

        </class>
    </namespace>

    <type name="double"/>
    <type name="float"/>
    <type name="int"/>
    <type name="reco::HLTTau"/>
    <type name="std::vector&lt;double&gt;"/>
    <type name="void"/>
</header>
