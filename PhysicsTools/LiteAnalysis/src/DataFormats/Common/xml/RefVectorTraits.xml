<?xml version="1.0"?>
<!--
==============================================================================
  XML File: RefVectorTraits.xml
  Created:  Thu Jan 14 22:46:27 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Common/interface/RefVectorTraits.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/Common/interface/RefVectorTraits.h">


    <namespace name="edm">
        <forward name="template&lt;typename C, typename T, typename F&gt; Ref"/>
        <forward name="template&lt;typename C, typename T, typename F&gt; RefVector"/>
        <forward name="template&lt;typename C, typename T, typename F&gt; RefVectorIterator"/>

        <namespace name="refhelper">

            <class name="RefVectorTrait"
                   fullname="edm::refhelper::RefVectorTrait&lt;C, T, F&gt;"
                   module="DataFormats.Common"
                   project=""
                   type="template struct"
                   template="template&lt;typename C, typename T, typename F&gt;">

                <section>
                    <typedef name="ref_type"
                             value="Ref&lt;C, T, F&gt;">
typedef Ref&lt;C, T, F&gt; ref_type;
                    </typedef>

                    <typedef name="iterator_type"
                             value="RefVectorIterator&lt;C, T, F&gt;">
typedef RefVectorIterator&lt;C, T, F&gt; iterator_type;
                    </typedef>

                </section>

                <typemap name="iterator_type"
                         value="RefVectorIterator&lt;C, T, F&gt;"
                         type="typedef"/>
                <typemap name="ref_type"
                         value="Ref&lt;C, T, F&gt;"
                         type="typedef"/>

            </class>

            <class name="RefVectorTrait&lt;RefVector&lt;C, T, F&gt;, T1, F1&gt;"
                   fullname="edm::refhelper::RefVectorTrait&lt;RefVector&lt;C, T, F&gt;, T1, F1&gt;"
                   module="DataFormats.Common"
                   project=""
                   type="specialized template struct"
                   template="template&lt;typename C, typename T, typename F, typename T1, typename F1&gt;">

                <section>
                    <typedef name="ref_type"
                             value="Ref&lt;C, T, F&gt;">
typedef Ref&lt;C, T, F&gt; ref_type;
                    </typedef>

                    <typedef name="iterator_type"
                             value="RefVectorIterator&lt;C, T, F&gt;">
typedef RefVectorIterator&lt;C, T, F&gt; iterator_type;
                    </typedef>

                </section>

                <typemap name="iterator_type"
                         value="RefVectorIterator&lt;C, T, F&gt;"
                         type="typedef"/>
                <typemap name="ref_type"
                         value="Ref&lt;C, T, F&gt;"
                         type="typedef"/>

            </class>
        </namespace>
    </namespace>

    <type name="edm::refhelper::RefVectorTrait&lt;C, T, F&gt;"/>
    <type name="edm::refhelper::RefVectorTrait&lt;RefVector&lt;C, T, F&gt;, T1, F1&gt;"/>
</header>
