<?xml version="1.0"?>
<!--
==============================================================================
  XML File: getRef.xml
  Created:  Thu Jan 14 22:46:33 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Common/interface/getRef.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/Common/interface/getRef.h">

    <include name="&quot;DataFormats/Common/interface/Ref.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/View.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/Handle.h&quot;"/>

    <namespace name="edm">

        <namespace name="helper">

            <class name="MatcherGetRef"
                   fullname="edm::helper::MatcherGetRef&lt;C&gt;"
                   module="DataFormats.Common"
                   project=""
                   type="template struct"
                   template="template&lt;typename C&gt;">

                <section>
                    <typedef name="ref_type"
                             value="Ref&lt;C&gt;">
typedef Ref&lt;C&gt; ref_type;
                    </typedef>

                    <method2 name="getRef"
                             return="static ref_type"
                             args="['const Handle&lt;C&gt;&amp;','size_t']"
                             vars="['c','k']"
                             qual="">
static ref_type getRef(const Handle&lt;C&gt;&amp; c, size_t k);
                    </method2>

                </section>

                <typemap name="ref_type"
                         value="Ref&lt;C&gt;"
                         type="typedef"/>

            </class>

            <class name="MatcherGetRef&lt;View&lt;T&gt; &gt;"
                   fullname="edm::helper::MatcherGetRef&lt;View&lt;T&gt; &gt;"
                   module="DataFormats.Common"
                   project=""
                   type="specialized template struct"
                   template="template&lt;typename T&gt;">

                <section>
                    <typedef name="ref_type"
                             value="RefToBase&lt;T&gt;">
typedef RefToBase&lt;T&gt; ref_type;
                    </typedef>

                    <method2 name="getRef"
                             return="static ref_type"
                             args="['const Handle&lt;View&lt;T&gt; &gt;&amp;','size_t']"
                             vars="['v','k']"
                             qual="">
static ref_type getRef(const Handle&lt;View&lt;T&gt; &gt;&amp; v, size_t k);
                    </method2>

                </section>

                <typemap name="ref_type"
                         value="RefToBase&lt;T&gt;"
                         type="typedef"/>

            </class>
        </namespace>
    </namespace>

    <type name="const Handle&lt;C&gt;&amp;"/>
    <type name="const Handle&lt;View&lt;T&gt; &gt;&amp;"/>
    <type name="edm::helper::MatcherGetRef&lt;C&gt;"/>
    <type name="edm::helper::MatcherGetRef&lt;View&lt;T&gt; &gt;"/>
    <type name="ref_type"/>
    <type name="size_t"/>
</header>
