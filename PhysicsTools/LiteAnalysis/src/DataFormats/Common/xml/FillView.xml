<?xml version="1.0"?>
<!--
==============================================================================
  XML File: FillView.xml
  Created:  Thu Jan 14 22:46:02 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Common/interface/FillView.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/Common/interface/FillView.h">

    <include name="&lt;string&gt;"/>
    <include name="&lt;vector&gt;"/>
    <include name="&lt;list&gt;"/>
    <include name="&lt;deque&gt;"/>
    <include name="&lt;set&gt;"/>
    <include name="&quot;DataFormats/Common/interface/RefTraits.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefVectorTraits.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/GetProduct.h&quot;"/>

    <namespace name="edm">
        <forward name="template&lt;typename C, typename T, typename F&gt; RefVector"/>
        <forward name="template&lt;typename C, typename T, typename F&gt; Ref"/>

        <namespace name="detail">

            <class name="FillViewRefTypeTrait"
                   fullname="edm::detail::FillViewRefTypeTrait&lt;C, T, F&gt;"
                   module="DataFormats.Common"
                   project=""
                   type="template struct"
                   template="template&lt;typename C, typename T, typename F&gt;">
                <comment>
       Function template reallyFillView&lt;C&gt; can fill views for
       standard-library collections of appropriate types (vector, list,
       deque, set).
                </comment>

                <section>
                    <typedef name="type"
                             value="Ref&lt;C, T, F&gt;">
typedef Ref&lt;C, T, F&gt; type;
                    </typedef>

                </section>

                <typemap name="type"
                         value="Ref&lt;C, T, F&gt;"
                         type="typedef"/>

            </class>

            <class name="FillViewRefTypeTrait&lt;RefVector&lt;C, T, F&gt;, T1, F1&gt;"
                   fullname="edm::detail::FillViewRefTypeTrait&lt;RefVector&lt;C, T, F&gt;, T1, F1&gt;"
                   module="DataFormats.Common"
                   project=""
                   type="specialized template struct"
                   template="template&lt;typename C, typename T, typename F, typename T1, typename F1&gt;">

                <section>
                    <typedef name="type"
                             value="typename refhelper::RefVectorTrait&lt;C, T, F&gt;::ref_type">
typedef typename refhelper::RefVectorTrait&lt;C, T, F&gt;::ref_type type;
                    </typedef>

                </section>

                <typemap name="type"
                         value="typename refhelper::RefVectorTrait&lt;C, T, F&gt;::ref_type"
                         type="typedef"/>

            </class>
        </namespace>
    </namespace>
    <include name="&quot;DataFormats/Common/interface/EDProductfwd.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefHolder_.h&quot;"/>
    <include name="&quot;DataFormats/Provenance/interface/ProductID.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefVectorHolderBase.h&quot;"/>

    <namespace name="edm">

        <namespace name="detail">
        </namespace>
    </namespace>
    <include name="&quot;DataFormats/Common/interface/RefHolder.h&quot;"/>

    <type name="edm::detail::FillViewRefTypeTrait&lt;C, T, F&gt;"/>
    <type name="edm::detail::FillViewRefTypeTrait&lt;RefVector&lt;C, T, F&gt;, T1, F1&gt;"/>
</header>
