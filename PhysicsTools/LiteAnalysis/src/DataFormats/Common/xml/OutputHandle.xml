<?xml version="1.0"?>
<!--
==============================================================================
  XML File: OutputHandle.xml
  Created:  Fri Jan 15 20:45:45 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Common/interface/OutputHandle.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/Common/interface/OutputHandle.h">

    <include name="&quot;DataFormats/Provenance/interface/BranchDescription.h&quot;"/>
    <include name="&quot;DataFormats/Provenance/interface/ProductID.h&quot;"/>
    <include name="&quot;DataFormats/Provenance/interface/ProductProvenance.h&quot;"/>
    <include name="&quot;FWCore/Utilities/interface/Exception.h&quot;"/>
    <include name="&lt;boost/shared_ptr.hpp&gt;"/>

    <namespace name="edm">
        <forward name="EDProduct"/>

        <class name="OutputHandle"
               fullname="edm::OutputHandle"
               module="DataFormats.Common"
               project=""
               type="regular">

            <section name="public">
                <constructor name="OutputHandle"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
OutputHandle();
                </constructor>

                <copyconstructor name="OutputHandle"
                                 return=""
                                 args="['OutputHandle const&amp;']"
                                 vars="['h']"
                                 qual="">
OutputHandle(OutputHandle const&amp; h);
                </copyconstructor>

                <constructor name="OutputHandle"
                             return=""
                             args="['EDProduct const*','ConstBranchDescription const*','boost::shared_ptr&lt;ProductProvenance&gt;']"
                             vars="['prod','desc','productProvenance']"
                             qual="">
OutputHandle(EDProduct const* prod, ConstBranchDescription const* desc, boost::shared_ptr&lt;ProductProvenance&gt; productProvenance);
                </constructor>

                <constructor name="OutputHandle"
                             return=""
                             args="['boost::shared_ptr&lt;cms::Exception&gt; const&amp;']"
                             vars="['iWhyFailed']"
                             qual="">
OutputHandle(boost::shared_ptr&lt;cms::Exception&gt; const&amp; iWhyFailed);
                    <comment>
       Used when the attempt to get the data failed
                    </comment>
                </constructor>

                <destructor name="~OutputHandle"
                            return=""
                            args="['void']"
                            vars="['']"
                            qual="">
~OutputHandle();
                </destructor>

                <method1 name="swap"
                         return="void"
                         args="['OutputHandle&amp;']"
                         vars="['other']"
                         qual="">
void swap(OutputHandle&amp; other);
                </method1>

                <operator name="operator="
                          return="OutputHandle&amp;"
                          args="['OutputHandle const&amp;']"
                          vars="['rhs']"
                          qual="">
OutputHandle&amp; operator=(OutputHandle const&amp; rhs);
                </operator>

                <method1 name="isValid"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool isValid() const;
                </method1>

                <method1 name="failedToGet"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool failedToGet() const;
                </method1>

                <method1 name="wrapper"
                         return="EDProduct const*"
                         args="['void']"
                         vars="['']"
                         qual="const">
EDProduct const* wrapper() const;
                </method1>

                <method2 name="whyFailed"
                         return="boost::shared_ptr&lt;cms::Exception&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
boost::shared_ptr&lt;cms::Exception&gt; whyFailed() const;
                </method2>

                <method1 name="productProvenance"
                         return="ProductProvenance const*"
                         args="['void']"
                         vars="['']"
                         qual="const">
ProductProvenance const* productProvenance() const;
                </method1>

                <method2 name="productProvenanceSharedPtr"
                         return="boost::shared_ptr&lt;ProductProvenance&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
boost::shared_ptr&lt;ProductProvenance&gt; productProvenanceSharedPtr() const;
                </method2>

                <method1 name="desc"
                         return="ConstBranchDescription const*"
                         args="['void']"
                         vars="['']"
                         qual="const">
ConstBranchDescription const* desc() const;
                </method1>

            </section>

        </class>
        <function1 name="swap"
                   return="inline void"
                   args="['OutputHandle&amp;','OutputHandle&amp;']"
                   vars="['a','b']"
                   qual="">
inline   void   swap(OutputHandle&amp; a, OutputHandle&amp; b);
            <comment>
     Free swap function
            </comment>
        </function1>

    </namespace>

    <type name="ConstBranchDescription const*"/>
    <type name="EDProduct const*"/>
    <type name="OutputHandle const&amp;"/>
    <type name="OutputHandle&amp;"/>
    <type name="ProductProvenance const*"/>
    <type name="bool"/>
    <type name="boost::shared_ptr&lt;ProductProvenance&gt;"/>
    <type name="boost::shared_ptr&lt;cms::Exception&gt;"/>
    <type name="boost::shared_ptr&lt;cms::Exception&gt; const&amp;"/>
    <type name="edm::OutputHandle"/>
    <type name="void"/>
</header>
