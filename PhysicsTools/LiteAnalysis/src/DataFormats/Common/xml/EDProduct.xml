<?xml version="1.0"?>
<!--
==============================================================================
  XML File: EDProduct.xml
  Created:  Fri Jan 15 20:45:32 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Common/interface/EDProduct.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/Common/interface/EDProduct.h">

    <include name="&lt;vector&gt;"/>
    <include name="&quot;DataFormats/Common/interface/EDProductfwd.h&quot;"/>

    <namespace name="edm">

        <class name="EDProduct"
               fullname="edm::EDProduct"
               module="DataFormats.Common"
               project=""
               type="abstract regular">

            <section name="public">
                <constructor name="EDProduct"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
EDProduct();
                </constructor>

                <destructor name="~EDProduct"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~EDProduct();
                </destructor>

                <method1 name="isPresent"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool isPresent() const;
                </method1>

                <method2 name="fillView"
                         return="void"
                         args="['ProductID const&amp;','std::vector&lt;void const*&gt;&amp;','helper_vector_ptr&amp;']"
                         vars="['id','view','helpers']"
                         qual="const">
void fillView(ProductID const&amp; id, std::vector&lt;void const*&gt;&amp; view, helper_vector_ptr&amp; helpers) const;
                    <comment>
       We have to use vector&lt;void*&gt; to keep the type information out
       of the EDProduct class.
                    </comment>
                </method2>

                <method1 name="setPtr"
                         return="void"
                         args="['const std::type_info&amp;','unsigned long','void const*&amp;']"
                         vars="['iToType','iIndex','oPtr']"
                         qual="const">
void setPtr(const std::type_info&amp; iToType, unsigned long iIndex, void const*&amp; oPtr) const;
                </method1>

                <method2 name="fillPtrVector"
                         return="void"
                         args="['const std::type_info&amp;','const std::vector&lt;unsigned long&gt;&amp;','std::vector&lt;void const*&gt;&amp;']"
                         vars="['iToType','iIndicies','oPtr']"
                         qual="const">
void fillPtrVector(const std::type_info&amp; iToType, const std::vector&lt;unsigned long&gt;&amp; iIndicies, std::vector&lt;void const*&gt;&amp; oPtr) const;
                </method2>

                <method1 name="isMergeable"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool isMergeable() const;
                </method1>

                <method1 name="mergeProduct"
                         return="bool"
                         args="['EDProduct const*']"
                         vars="['newProduct']"
                         qual="">
bool mergeProduct(EDProduct const* newProduct);
                </method1>

                <method1 name="hasIsProductEqual"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasIsProductEqual() const;
                </method1>

                <method1 name="isProductEqual"
                         return="bool"
                         args="['EDProduct const*']"
                         vars="['newProduct']"
                         qual="const">
bool isProductEqual(EDProduct const* newProduct) const;
                </method1>

            </section>

        </class>
    </namespace>

    <type name="EDProduct const*"/>
    <type name="ProductID const&amp;"/>
    <type name="bool"/>
    <type name="const std::type_info&amp;"/>
    <type name="const std::vector&lt;unsigned long&gt;&amp;"/>
    <type name="edm::EDProduct"/>
    <type name="helper_vector_ptr&amp;"/>
    <type name="std::vector&lt;void const*&gt;&amp;"/>
    <type name="unsigned long"/>
    <type name="void"/>
    <type name="void const*&amp;"/>
</header>
