<?xml version="1.0"?>
<!--
==============================================================================
  XML File: CaloCluster.xml
  Created:  Thu Jan 14 22:46:35 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/CaloRecHit/interface/CaloCluster.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/CaloRecHit/interface/CaloCluster.h">

    <include name="&quot;DataFormats/Math/interface/Point3D.h&quot;"/>
    <include name="&quot;DataFormats/CaloRecHit/interface/CaloID.h&quot;"/>

    <namespace name="reco">

        <class name="CaloCluster"
               fullname="reco::CaloCluster"
               module="DataFormats.CaloRecHit"
               project=""
               type="regular">

            <section name="public">
                <constructor name="CaloCluster"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
CaloCluster();
                    <comment>
        default constructor. Sets energy and position to zero
                    </comment>
                </constructor>

                <constructor name="CaloCluster"
                             return=""
                             args="['double','const math::XYZPoint&amp;']"
                             vars="['energy','position']"
                             qual="">
CaloCluster(double energy, const math::XYZPoint&amp; position);
                    <comment>
        constructor from values
                    </comment>
                </constructor>

                <constructor name="CaloCluster"
                             return=""
                             args="['double','const math::XYZPoint&amp;','const CaloID&amp;']"
                             vars="['energy','position','caloID']"
                             qual="">
CaloCluster(double energy, const math::XYZPoint&amp; position, const CaloID&amp; caloID);
                    <comment>
        constructor from values
                    </comment>
                </constructor>

                <destructor name="~CaloCluster"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~CaloCluster();
                    <comment>
        destructor
                    </comment>
                </destructor>

                <method1 name="energy"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double energy() const;
                    <comment>
        cluster energy
                    </comment>
                </method1>

                <method1 name="position"
                         return="const math::XYZPoint&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const math::XYZPoint&amp; position() const;
                    <comment>
        cluster centroid position
                    </comment>
                </method1>

                <operator name="operator&gt;="
                          return="bool"
                          args="['const CaloCluster&amp;']"
                          vars="['rhs']"
                          qual="const">
bool operator&gt;=(const CaloCluster&amp; rhs) const;
                    <comment>
        comparison &gt;= operator
                    </comment>
                </operator>

                <operator name="operator&gt;"
                          return="bool"
                          args="['const CaloCluster&amp;']"
                          vars="['rhs']"
                          qual="const">
bool operator&gt;(const CaloCluster&amp; rhs) const;
                    <comment>
        comparison &gt; operator
                    </comment>
                </operator>

                <operator name="operator&lt;="
                          return="bool"
                          args="['const CaloCluster&amp;']"
                          vars="['rhs']"
                          qual="const">
bool operator&lt;=(const CaloCluster&amp; rhs) const;
                    <comment>
        comparison &lt;= operator
                    </comment>
                </operator>

                <operator name="operator&lt;"
                          return="bool"
                          args="['const CaloCluster&amp;']"
                          vars="['rhs']"
                          qual="const">
bool operator&lt;(const CaloCluster&amp; rhs) const;
                    <comment>
        comparison &lt;= operator
                    </comment>
                </operator>

                <method1 name="x"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double x() const;
                    <comment>
        x coordinate of cluster centroid
                    </comment>
                </method1>

                <method1 name="y"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double y() const;
                    <comment>
        y coordinate of cluster centroid
                    </comment>
                </method1>

                <method1 name="z"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double z() const;
                    <comment>
        z coordinate of cluster centroid
                    </comment>
                </method1>

                <method1 name="eta"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double eta() const;
                    <comment>
        pseudorapidity of cluster centroid
                    </comment>
                </method1>

                <method1 name="phi"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double phi() const;
                    <comment>
        azimuthal angle of cluster centroid
                    </comment>
                </method1>

                <method1 name="caloID"
                         return="CaloID&amp;"
                         args="['void']"
                         vars="['']"
                         qual="">
CaloID&amp; caloID();
                </method1>

                <method1 name="caloID"
                         return="const CaloID&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const CaloID&amp; caloID() const;
                </method1>

                <operator name="operator="
                          return="CaloCluster&amp;"
                          args="['const CaloCluster&amp;']"
                          vars="['rhs']"
                          qual="">
CaloCluster&amp; operator=(const CaloCluster&amp; rhs);
                </operator>

            </section>

        </class>
    </namespace>

    <type name="CaloCluster&amp;"/>
    <type name="CaloID&amp;"/>
    <type name="bool"/>
    <type name="const CaloCluster&amp;"/>
    <type name="const CaloID&amp;"/>
    <type name="const math::XYZPoint&amp;"/>
    <type name="double"/>
    <type name="reco::CaloCluster"/>
    <type name="void"/>
</header>
