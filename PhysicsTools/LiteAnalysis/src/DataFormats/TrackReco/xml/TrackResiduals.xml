<?xml version="1.0"?>
<!--
==============================================================================
  XML File: TrackResiduals.xml
  Created:  Fri Jan 15 20:47:42 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TrackReco/interface/TrackResiduals.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/TrackReco/interface/TrackResiduals.h">

    <include name="&lt;iostream&gt;"/>
    <include name="&quot;DataFormats/TrackingRecHit/interface/TrackingRecHitFwd.h&quot;"/>
    <include name="&quot;DataFormats/TrackReco/interface/TrackResiduals.h&quot;"/>
    <forward name="Trajectory"/>

    <namespace name="reco">
        <forward name="HitPattern"/>

        <class name="TrackResiduals"
               fullname="reco::TrackResiduals"
               module="DataFormats.TrackReco"
               project=""
               type="regular">

            <section>
                <friend>
friend class Trajectory;
                </friend>

            </section>
            <section name="public">
                <enum name="ResidualType">
enum ResidualType {
 X_Y_RESIDUALS, X_Y_PULLS };
                    <field name="X_Y_RESIDUALS" value=""/>
                    <field name="X_Y_PULLS" value=""/>
                </enum>

            </section>
            <section name="public">
                <constructor name="TrackResiduals"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
TrackResiduals ();
                </constructor>

                <constructor name="TrackResiduals"
                             return=""
                             args="['enum']"
                             vars="['ResidualType']"
                             qual="">
TrackResiduals (enum ResidualType);
                </constructor>

            </section>
            <section name="public">
                <method1 name="setResidualXY"
                         return="void"
                         args="['int','double','double']"
                         vars="['idx','residualX','residualY']"
                         qual="">
void setResidualXY (int idx, double residualX, double residualY);
                </method1>

                <method1 name="setPullXY"
                         return="void"
                         args="['int','double','double']"
                         vars="['idx','pullX','pullY']"
                         qual="">
void setPullXY (int idx, double pullX, double pullY);
                </method1>

                <method1 name="setResidualType"
                         return="void"
                         args="['enum']"
                         vars="['ResidualType']"
                         qual="">
void setResidualType (enum ResidualType);
                </method1>

                <method1 name="print"
                         return="void"
                         args="['std::ostream&amp;=std::cout']"
                         vars="['stream']"
                         qual="const">
void print (std::ostream&amp; stream=std::cout) const;
                </method1>

                <method1 name="print"
                         return="void"
                         args="['const HitPattern&amp;','std::ostream&amp;=std::cout']"
                         vars="['','stream']"
                         qual="const">
void print (const HitPattern&amp;, std::ostream&amp; stream=std::cout) const;
                </method1>

                <method1 name="residualX"
                         return="double"
                         args="['int','const HitPattern&amp;']"
                         vars="['i','']"
                         qual="const">
double residualX (int i, const HitPattern&amp;) const;
                    <comment>
	      figure out which hits are valid)
                    </comment>
                </method1>

                <method1 name="residualY"
                         return="double"
                         args="['int','const HitPattern&amp;']"
                         vars="['i','']"
                         qual="const">
double residualY (int i, const HitPattern&amp;) const;
                </method1>

                <method1 name="residualX"
                         return="double"
                         args="['int']"
                         vars="['i']"
                         qual="const">
double residualX (int i) const;
                    <comment>
	      for alignment with the HitPattern
                    </comment>
                </method1>

                <method1 name="residualY"
                         return="double"
                         args="['int']"
                         vars="['i']"
                         qual="const">
double residualY (int i) const;
                </method1>

            </section>

            <typemap name="ResidualType"
                     value="reco::TrackResiduals::ResidualType"
                     type="enum"/>
            <typemap name="X_Y_PULLS"
                     value="reco::TrackResiduals::X_Y_PULLS"
                     type="enum"/>
            <typemap name="X_Y_RESIDUALS"
                     value="reco::TrackResiduals::X_Y_RESIDUALS"
                     type="enum"/>

        </class>
    </namespace>

    <type name="const HitPattern&amp;"/>
    <type name="double"/>
    <type name="enum"/>
    <type name="enum ResidualType"/>
    <type name="int"/>
    <type name="reco::TrackResiduals"/>
    <type name="std::ostream&amp;"/>
    <type name="void"/>
</header>
