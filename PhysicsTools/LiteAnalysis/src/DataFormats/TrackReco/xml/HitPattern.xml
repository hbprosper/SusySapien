<?xml version="1.0"?>
<!--
==============================================================================
  XML File: HitPattern.xml
  Created:  Fri Jan 15 20:47:39 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/TrackReco/interface/HitPattern.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/TrackReco/interface/HitPattern.h">

    <include name="&lt;ostream&gt;"/>
    <include name="&quot;DataFormats/DetId/interface/DetId.h&quot;"/>
    <include name="&quot;DataFormats/SiPixelDetId/interface/PixelSubdetector.h&quot;"/>
    <include name="&quot;DataFormats/SiStripDetId/interface/StripSubdetector.h&quot;"/>
    <include name="&quot;DataFormats/TrackingRecHit/interface/TrackingRecHitFwd.h&quot;"/>

    <namespace name="reco">

        <class name="HitPattern"
               fullname="reco::HitPattern"
               module="DataFormats.TrackReco"
               project=""
               type="regular">

            <section name="public">
                <enum name="">
enum {
 MONO=1, STEREO=2 };
                    <field name="MONO" value="1"/>
                    <field name="STEREO" value="2"/>
                </enum>

                <constructor name="HitPattern"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
HitPattern();
                    <comment>
       default constructor
       init hit pattern array as 0x00000000, ..., 0x00000000
                    </comment>
                </constructor>

                <method2 name="HitPattern"
                         return="template&lt;typename I&gt;"
                         args="['const I&amp;','const I&amp;']"
                         vars="['begin','end']"
                         qual="">
template&lt;typename I&gt;     HitPattern(const I&amp; begin, const I&amp; end);
                    <comment>
       constructor from iterator (begin, end) pair
                    </comment>
                </method2>

                <method2 name="HitPattern"
                         return="template&lt;typename C&gt;"
                         args="['const C&amp;']"
                         vars="['c']"
                         qual="">
template&lt;typename C&gt;     HitPattern(const C&amp; c);
                    <comment>
       constructor from hit collection
                    </comment>
                </method2>

                <method2 name="set"
                         return="template&lt;typename I&gt; void"
                         args="['const I&amp;','const I&amp;']"
                         vars="['begin','end']"
                         qual="">
template&lt;typename I&gt;     void set(const I&amp; begin, const I&amp; end);
                    <comment>
       set pattern from iterator (begin, end) pair
       init hit pattern array as 0x00000000, ..., 0x00000000
       loop over the hits and set hit pattern
                    </comment>
                </method2>

                <method1 name="printHitPattern"
                         return="void"
                         args="['int','std::ostream&amp;']"
                         vars="['position','stream']"
                         qual="const">
void printHitPattern (int position, std::ostream&amp; stream) const;
                    <comment>
       print the pattern of the position-th hit
                    </comment>
                </method1>

                <method1 name="print"
                         return="void"
                         args="['std::ostream&amp;=std::cout']"
                         vars="['stream']"
                         qual="const">
void print (std::ostream&amp; stream=std::cout) const;
                </method1>

                <method1 name="set"
                         return="void"
                         args="['const TrackingRecHit&amp;','unsigned int']"
                         vars="['','i']"
                         qual="">
void set(const TrackingRecHit&amp;, unsigned int i);
                    <comment>
       set the pattern of the i-th hit
                    </comment>
                </method1>

                <method1 name="getHitPattern"
                         return="uint32_t"
                         args="['int']"
                         vars="['position']"
                         qual="const">
uint32_t getHitPattern(int position) const;
                    <comment>
       get the pattern of the position-th hit
                    </comment>
                </method1>

                <method1 name="trackerHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool trackerHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="muonHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool muonHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="getSubStructure"
                         return="uint32_t"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
uint32_t getSubStructure(uint32_t pattern) const;
                </method1>

                <method1 name="pixelHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool pixelHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="pixelBarrelHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool pixelBarrelHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="pixelEndcapHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool pixelEndcapHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="stripHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool stripHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="stripTIBHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool stripTIBHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="stripTIDHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool stripTIDHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="stripTOBHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool stripTOBHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="stripTECHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool stripTECHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="muonDTHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool muonDTHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="muonCSCHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool muonCSCHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="muonRPCHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool muonRPCHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="getLayer"
                         return="uint32_t"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
uint32_t getLayer(uint32_t pattern) const;
                </method1>

                <method1 name="getHitType"
                         return="uint32_t"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
uint32_t getHitType(uint32_t pattern) const;
                </method1>

                <method1 name="validHitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool validHitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="type_1_HitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool type_1_HitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="type_2_HitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool type_2_HitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="type_3_HitFilter"
                         return="bool"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="const">
bool type_3_HitFilter(uint32_t pattern) const;
                </method1>

                <method1 name="getSide"
                         return="static uint32_t"
                         args="['uint32_t']"
                         vars="['pattern']"
                         qual="">
static uint32_t getSide (uint32_t pattern);
                </method1>

                <method1 name="hasValidHitInFirstPixelBarrel"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasValidHitInFirstPixelBarrel() const;
                </method1>

                <method1 name="numberOfHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfHits() const;
                </method1>

                <method1 name="numberOfValidHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidHits() const;
                </method1>

                <method1 name="numberOfValidTrackerHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidTrackerHits() const;
                </method1>

                <method1 name="numberOfValidMuonHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidMuonHits() const;
                </method1>

                <method1 name="numberOfValidPixelHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidPixelHits() const;
                </method1>

                <method1 name="numberOfValidPixelBarrelHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidPixelBarrelHits() const;
                </method1>

                <method1 name="numberOfValidPixelEndcapHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidPixelEndcapHits() const;
                </method1>

                <method1 name="numberOfValidStripHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidStripHits() const;
                </method1>

                <method1 name="numberOfValidStripTIBHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidStripTIBHits() const;
                </method1>

                <method1 name="numberOfValidStripTIDHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidStripTIDHits() const;
                </method1>

                <method1 name="numberOfValidStripTOBHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidStripTOBHits() const;
                </method1>

                <method1 name="numberOfValidStripTECHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidStripTECHits() const;
                </method1>

                <method1 name="numberOfValidMuonDTHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidMuonDTHits() const;
                </method1>

                <method1 name="numberOfValidMuonCSCHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidMuonCSCHits() const;
                </method1>

                <method1 name="numberOfValidMuonRPCHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidMuonRPCHits() const;
                </method1>

                <method1 name="numberOfLostHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostHits() const;
                </method1>

                <method1 name="numberOfLostTrackerHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostTrackerHits() const;
                </method1>

                <method1 name="numberOfLostMuonHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostMuonHits() const;
                </method1>

                <method1 name="numberOfLostPixelHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostPixelHits() const;
                </method1>

                <method1 name="numberOfLostPixelBarrelHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostPixelBarrelHits() const;
                </method1>

                <method1 name="numberOfLostPixelEndcapHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostPixelEndcapHits() const;
                </method1>

                <method1 name="numberOfLostStripHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostStripHits() const;
                </method1>

                <method1 name="numberOfLostStripTIBHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostStripTIBHits() const;
                </method1>

                <method1 name="numberOfLostStripTIDHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostStripTIDHits() const;
                </method1>

                <method1 name="numberOfLostStripTOBHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostStripTOBHits() const;
                </method1>

                <method1 name="numberOfLostStripTECHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostStripTECHits() const;
                </method1>

                <method1 name="numberOfLostMuonDTHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostMuonDTHits() const;
                </method1>

                <method1 name="numberOfLostMuonCSCHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostMuonCSCHits() const;
                </method1>

                <method1 name="numberOfLostMuonRPCHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfLostMuonRPCHits() const;
                </method1>

                <method1 name="numberOfBadHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfBadHits() const;
                </method1>

                <method1 name="numberOfBadMuonHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfBadMuonHits() const;
                </method1>

                <method1 name="numberOfBadMuonDTHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfBadMuonDTHits() const;
                </method1>

                <method1 name="numberOfBadMuonCSCHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfBadMuonCSCHits() const;
                </method1>

                <method1 name="numberOfBadMuonRPCHits"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfBadMuonRPCHits() const;
                </method1>

                <method1 name="numberOfValidStripLayersWithMonoAndStereo"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numberOfValidStripLayersWithMonoAndStereo () const;
                </method1>

                <method1 name="getTrackerLayerCase"
                         return="uint32_t"
                         args="['uint32_t','uint32_t']"
                         vars="['substr','layer']"
                         qual="const">
uint32_t getTrackerLayerCase(uint32_t substr, uint32_t layer) const;
                </method1>

                <method1 name="getTrackerMonoStereo"
                         return="uint32_t"
                         args="['uint32_t','uint32_t']"
                         vars="['substr','layer']"
                         qual="const">
uint32_t getTrackerMonoStereo (uint32_t substr, uint32_t layer) const;
                </method1>

                <method1 name="trackerLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int trackerLayersWithMeasurement() const;
                </method1>

                <method1 name="pixelLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelLayersWithMeasurement() const;
                </method1>

                <method1 name="stripLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripLayersWithMeasurement() const;
                </method1>

                <method1 name="pixelBarrelLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelBarrelLayersWithMeasurement() const;
                </method1>

                <method1 name="pixelEndcapLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelEndcapLayersWithMeasurement() const;
                </method1>

                <method1 name="stripTIBLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIBLayersWithMeasurement() const;
                </method1>

                <method1 name="stripTIDLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIDLayersWithMeasurement() const;
                </method1>

                <method1 name="stripTOBLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTOBLayersWithMeasurement() const;
                </method1>

                <method1 name="stripTECLayersWithMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTECLayersWithMeasurement() const;
                </method1>

                <method1 name="trackerLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int trackerLayersWithoutMeasurement() const;
                </method1>

                <method1 name="pixelLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelLayersWithoutMeasurement() const;
                </method1>

                <method1 name="stripLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripLayersWithoutMeasurement() const;
                </method1>

                <method1 name="pixelBarrelLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelBarrelLayersWithoutMeasurement() const;
                </method1>

                <method1 name="pixelEndcapLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelEndcapLayersWithoutMeasurement() const;
                </method1>

                <method1 name="stripTIBLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIBLayersWithoutMeasurement() const;
                </method1>

                <method1 name="stripTIDLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIDLayersWithoutMeasurement() const;
                </method1>

                <method1 name="stripTOBLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTOBLayersWithoutMeasurement() const;
                </method1>

                <method1 name="stripTECLayersWithoutMeasurement"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTECLayersWithoutMeasurement() const;
                </method1>

                <method1 name="trackerLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int trackerLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="pixelLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="stripLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="pixelBarrelLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelBarrelLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="pixelEndcapLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelEndcapLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="stripTIBLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIBLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="stripTIDLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIDLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="stripTOBLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTOBLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="stripTECLayersTotallyOffOrBad"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTECLayersTotallyOffOrBad() const;
                </method1>

                <method1 name="trackerLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int trackerLayersNull() const;
                </method1>

                <method1 name="pixelLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelLayersNull() const;
                </method1>

                <method1 name="stripLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripLayersNull() const;
                </method1>

                <method1 name="pixelBarrelLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelBarrelLayersNull() const;
                </method1>

                <method1 name="pixelEndcapLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int pixelEndcapLayersNull() const;
                </method1>

                <method1 name="stripTIBLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIBLayersNull() const;
                </method1>

                <method1 name="stripTIDLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTIDLayersNull() const;
                </method1>

                <method1 name="stripTOBLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTOBLayersNull() const;
                </method1>

                <method1 name="stripTECLayersNull"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int stripTECLayersNull() const;
                </method1>

            </section>
            <section name="private">
                <constant name="PatternSize"
                          type="const static unsigned short"
                          value="25"/>
                <constant name="HitSize"
                          type="const static unsigned short"
                          value="11"/>
                <constant name="SubDetectorOffset"
                          type="const static unsigned short"
                          value="10"/>
                <constant name="SubDetectorMask"
                          type="const static unsigned short"
                          value="0x1"/>
                <constant name="SubstrOffset"
                          type="const static unsigned short"
                          value="7"/>
                <constant name="SubstrMask"
                          type="const static unsigned short"
                          value="0x7"/>
                <constant name="LayerOffset"
                          type="const static unsigned short"
                          value="3"/>
                <constant name="LayerMask"
                          type="const static unsigned short"
                          value="0xF"/>
                <constant name="SideOffset"
                          type="const static unsigned short"
                          value="2"/>
                <constant name="SideMask"
                          type="const static unsigned short"
                          value="0x1"/>
                <constant name="HitTypeOffset"
                          type="const static unsigned short"
                          value="0"/>
                <constant name="HitTypeMask"
                          type="const static unsigned short"
                          value="0x3"/>
            </section>

            <typemap name="MONO "
                     value="reco::HitPattern::MONO "
                     type="enum"/>
            <typemap name="STEREO "
                     value="reco::HitPattern::STEREO "
                     type="enum"/>

        </class>
    </namespace>

    <type name="bool"/>
    <type name="const TrackingRecHit&amp;"/>
    <type name="enum"/>
    <type name="int"/>
    <type name="reco::HitPattern"/>
    <type name="std::ostream&amp;"/>
    <type name="template&lt;typename C&gt;"/>
    <type name="template&lt;typename I&gt;"/>
    <type name="template&lt;typename I&gt; void"/>
    <type name="uint32_t"/>
    <type name="unsigned int"/>
    <type name="void"/>
</header>
