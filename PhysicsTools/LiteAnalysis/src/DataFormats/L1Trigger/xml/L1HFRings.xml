<?xml version="1.0"?>
<!--
==============================================================================
  XML File: L1HFRings.xml
  Created:  Fri Jan 15 20:46:40 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/L1Trigger/interface/L1HFRings.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/L1Trigger/interface/L1HFRings.h">

    <include name="&quot;DataFormats/L1GlobalCaloTrigger/interface/L1GctCollections.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/Ref.h&quot;"/>

    <namespace name="l1extra">
        <comment>
   forward declarations
        </comment>

        <class name="L1HFRings"
               fullname="l1extra::L1HFRings"
               module="DataFormats.L1Trigger"
               project=""
               type="regular">

            <section name="public">
                <enum name="HFRingLabels">
enum HFRingLabels {
 kRing1PosEta, kRing1NegEta, kRing2PosEta, 
    kRing2NegEta, kNumRings };
                    <field name="kRing1PosEta" value=""/>
                    <field name="kRing1NegEta" value=""/>
                    <field name="kRing2PosEta" value=""/>
                    <field name="kRing2NegEta" value=""/>
                    <field name="kNumRings" value=""/>
                </enum>

                <constructor name="L1HFRings"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
L1HFRings();
                </constructor>

                <constructor name="L1HFRings"
                             return=""
                             args="['const double*','const int*','const edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;&amp;=edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;()','const edm::Ref&lt;L1GctHFBitCountsCollection &gt;&amp;=edm::Ref&lt;L1GctHFBitCountsCollection &gt;()','int=0']"
                             vars="['hfEtSums','hfBitCounts','aHFEtSumsRef','aHFBitCountsRef','bx']"
                             qual="">
L1HFRings(const double* hfEtSums, const int* hfBitCounts, const edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;&amp; aHFEtSumsRef=    edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;(), const edm::Ref&lt;L1GctHFBitCountsCollection &gt;&amp; aHFBitCountsRef=edm::Ref&lt;L1GctHFBitCountsCollection &gt;(), int bx=0);
                    <comment>
         Default Refs are null.
                    </comment>
                </constructor>

                <destructor name="~L1HFRings"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~L1HFRings();
                </destructor>

                <method1 name="hfEtSum"
                         return="double"
                         args="['HFRingLabels']"
                         vars="['i']"
                         qual="const">
double hfEtSum(HFRingLabels i) const;
                    <comment>
         ---------- const member functions ---------------------
                    </comment>
                </method1>

                <method1 name="hfBitCount"
                         return="int"
                         args="['HFRingLabels']"
                         vars="['i']"
                         qual="const">
int hfBitCount(HFRingLabels i) const;
                </method1>

                <method2 name="gctHFEtSumsRef"
                         return="const edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;&amp; gctHFEtSumsRef() const;
                </method2>

                <method2 name="gctHFBitCountsRef"
                         return="const edm::Ref&lt;L1GctHFBitCountsCollection &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::Ref&lt;L1GctHFBitCountsCollection &gt;&amp; gctHFBitCountsRef() const;
                </method2>

                <method1 name="gctHFEtSums"
                         return="const L1GctHFRingEtSums*"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1GctHFRingEtSums* gctHFEtSums() const;
                </method1>

                <method1 name="gctHFBitCounts"
                         return="const L1GctHFBitCounts*"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1GctHFBitCounts* gctHFBitCounts() const;
                </method1>

                <method1 name="bx"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int bx() const;
                </method1>

            </section>

            <typemap name="HFRingLabels"
                     value="l1extra::L1HFRings::HFRingLabels"
                     type="enum"/>
            <typemap name="kNumRings"
                     value="l1extra::L1HFRings::kNumRings"
                     type="enum"/>
            <typemap name="kRing1NegEta"
                     value="l1extra::L1HFRings::kRing1NegEta"
                     type="enum"/>
            <typemap name="kRing1PosEta"
                     value="l1extra::L1HFRings::kRing1PosEta"
                     type="enum"/>
            <typemap name="kRing2NegEta"
                     value="l1extra::L1HFRings::kRing2NegEta"
                     type="enum"/>
            <typemap name="kRing2PosEta"
                     value="l1extra::L1HFRings::kRing2PosEta"
                     type="enum"/>

        </class>
    </namespace>

    <type name="HFRingLabels"/>
    <type name="const L1GctHFBitCounts*"/>
    <type name="const L1GctHFRingEtSums*"/>
    <type name="const double*"/>
    <type name="const edm::Ref&lt;L1GctHFBitCountsCollection &gt;&amp;"/>
    <type name="const edm::Ref&lt;L1GctHFRingEtSumsCollection &gt;&amp;"/>
    <type name="const int*"/>
    <type name="double"/>
    <type name="enum HFRingLabels"/>
    <type name="int"/>
    <type name="l1extra::L1HFRings"/>
    <type name="void"/>
</header>
