<?xml version="1.0"?>
<!--
==============================================================================
  XML File: L1EtMissParticle.xml
  Created:  Thu Jan 14 22:47:29 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/L1Trigger/interface/L1EtMissParticle.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/L1Trigger/interface/L1EtMissParticle.h">

    <include name="&quot;DataFormats/Candidate/interface/LeafCandidate.h&quot;"/>
    <include name="&quot;DataFormats/L1GlobalCaloTrigger/interface/L1GctCollections.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/Ref.h&quot;"/>

    <namespace name="l1extra">
        <comment>
   forward declarations
        </comment>

        <class name="L1EtMissParticle"
               fullname="l1extra::L1EtMissParticle"
               module="DataFormats.L1Trigger"
               project=""
               type="regular">
            <baseclass name="public reco::LeafCandidate"/>

            <section name="public">
                <constructor name="L1EtMissParticle"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
L1EtMissParticle();
                </constructor>

                <constructor name="L1EtMissParticle"
                             return=""
                             args="['const LorentzVector&amp;','const double&amp;','const double&amp;','const edm::Ref&lt;L1GctEtMissCollection &gt;&amp;=edm::Ref&lt;L1GctEtMissCollection &gt;()','const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp;=edm::Ref&lt;L1GctEtTotalCollection &gt;()','const edm::Ref&lt;L1GctEtHadCollection &gt;&amp;=edm::Ref&lt;L1GctEtHadCollection &gt;()','int=0']"
                             vars="['p4','etTotal','etHad','aEtMissRef','aEtTotalRef','aEtHadRef','bx']"
                             qual="">
L1EtMissParticle(             const LorentzVector&amp; p4, const double&amp; etTotal, const double&amp; etHad, const edm::Ref&lt;L1GctEtMissCollection &gt;&amp; aEtMissRef=         edm::Ref&lt;L1GctEtMissCollection &gt;(), const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp; aEtTotalRef=         edm::Ref&lt;L1GctEtTotalCollection &gt;(), const edm::Ref&lt;L1GctEtHadCollection &gt;&amp; aEtHadRef=         edm::Ref&lt;L1GctEtHadCollection &gt;(), int bx=0);
                    <comment>
	    Default Refs are null.
                    </comment>
                </constructor>

                <constructor name="L1EtMissParticle"
                             return=""
                             args="['const PolarLorentzVector&amp;','const double&amp;','const double&amp;','const edm::Ref&lt;L1GctEtMissCollection &gt;&amp;=edm::Ref&lt;L1GctEtMissCollection &gt;()','const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp;=edm::Ref&lt;L1GctEtTotalCollection &gt;()','const edm::Ref&lt;L1GctEtHadCollection &gt;&amp;=edm::Ref&lt;L1GctEtHadCollection &gt;()','int=0']"
                             vars="['p4','etTotal','etHad','aEtMissRef','aEtTotalRef','aEtHadRef','bx']"
                             qual="">
L1EtMissParticle(      const PolarLorentzVector&amp; p4, const double&amp; etTotal, const double&amp; etHad, const edm::Ref&lt;L1GctEtMissCollection &gt;&amp; aEtMissRef=         edm::Ref&lt;L1GctEtMissCollection &gt;(), const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp; aEtTotalRef=         edm::Ref&lt;L1GctEtTotalCollection &gt;(), const edm::Ref&lt;L1GctEtHadCollection &gt;&amp; aEtHadRef=         edm::Ref&lt;L1GctEtHadCollection &gt;(), int bx=0);
                </constructor>

                <destructor name="~L1EtMissParticle"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~L1EtMissParticle();
                </destructor>

                <method1 name="etMiss"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double etMiss() const;
                    <comment>
	    ---------- const member functions ---------------------
                    </comment>
                </method1>

                <method1 name="etTotal"
                         return="const double&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const double&amp; etTotal() const;
                </method1>

                <method1 name="etHad"
                         return="const double&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const double&amp; etHad() const;
                </method1>

                <method2 name="gctEtMissRef"
                         return="const edm::Ref&lt;L1GctEtMissCollection &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::Ref&lt;L1GctEtMissCollection &gt;&amp; gctEtMissRef() const;
                </method2>

                <method2 name="gctEtTotalRef"
                         return="const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp; gctEtTotalRef() const;
                </method2>

                <method2 name="gctEtHadRef"
                         return="const edm::Ref&lt;L1GctEtHadCollection &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::Ref&lt;L1GctEtHadCollection &gt;&amp; gctEtHadRef() const;
                </method2>

                <method1 name="gctEtMiss"
                         return="const L1GctEtMiss*"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1GctEtMiss* gctEtMiss() const;
                </method1>

                <method1 name="gctEtTotal"
                         return="const L1GctEtTotal*"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1GctEtTotal* gctEtTotal() const;
                </method1>

                <method1 name="gctEtHad"
                         return="const L1GctEtHad*"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1GctEtHad* gctEtHad() const;
                </method1>

                <method1 name="clone"
                         return="virtual L1EtMissParticle*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual L1EtMissParticle* clone() const;
                </method1>

                <method1 name="bx"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int bx() const;
                </method1>

                <method1 name="setEtTotal"
                         return="void"
                         args="['const double&amp;']"
                         vars="['etTotal']"
                         qual="">
void setEtTotal(const double&amp; etTotal);
                    <comment>
	    ---------- member functions ---------------------------
                    </comment>
                </method1>

                <method1 name="setEtHad"
                         return="void"
                         args="['const double&amp;']"
                         vars="['etHad']"
                         qual="">
void setEtHad(const double&amp; etHad);
                </method1>

                <method1 name="setBx"
                         return="void"
                         args="['int']"
                         vars="['bx']"
                         qual="">
void setBx(int bx);
                </method1>

            </section>

        </class>
    </namespace>

    <type name="L1EtMissParticle*"/>
    <type name="const L1GctEtHad*"/>
    <type name="const L1GctEtMiss*"/>
    <type name="const L1GctEtTotal*"/>
    <type name="const LorentzVector&amp;"/>
    <type name="const PolarLorentzVector&amp;"/>
    <type name="const double&amp;"/>
    <type name="const edm::Ref&lt;L1GctEtHadCollection &gt;&amp;"/>
    <type name="const edm::Ref&lt;L1GctEtMissCollection &gt;&amp;"/>
    <type name="const edm::Ref&lt;L1GctEtTotalCollection &gt;&amp;"/>
    <type name="double"/>
    <type name="int"/>
    <type name="l1extra::L1EtMissParticle"/>
    <type name="reco::LeafCandidate"/>
    <type name="void"/>
</header>
