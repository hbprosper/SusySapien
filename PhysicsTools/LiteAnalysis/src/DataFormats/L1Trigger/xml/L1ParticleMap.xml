<?xml version="1.0"?>
<!--
==============================================================================
  XML File: L1ParticleMap.xml
  Created:  Fri Jan 15 20:46:42 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/L1Trigger/interface/L1ParticleMap.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/L1Trigger/interface/L1ParticleMap.h">

    <include name="&lt;string&gt;"/>
    <include name="&quot;DataFormats/L1Trigger/interface/L1EmParticleFwd.h&quot;"/>
    <include name="&quot;DataFormats/L1Trigger/interface/L1JetParticleFwd.h&quot;"/>
    <include name="&quot;DataFormats/L1Trigger/interface/L1MuonParticleFwd.h&quot;"/>
    <include name="&quot;DataFormats/L1Trigger/interface/L1EtMissParticle.h&quot;"/>
    <include name="&quot;DataFormats/L1Trigger/interface/L1EtMissParticleFwd.h&quot;"/>

    <namespace name="l1extra">
        <comment>
   forward declarations
        </comment>

        <class name="L1ParticleMap"
               fullname="l1extra::L1ParticleMap"
               module="DataFormats.L1Trigger"
               project=""
               type="regular">

            <section name="public">
                <enum name="L1ObjectType">
enum L1ObjectType
  {

            kEM, 
            kJet, 
            kMuon, 
     kEtMiss, 
     kEtTotal, 
     kEtHad, 
            kNumOfL1ObjectTypes
  };
                    <field name="kEM" value=""/>
                    <field name="kJet" value=""/>
                    <field name="kMuon" value=""/>
                    <field name="kEtMiss" value=""/>
                    <field name="kEtTotal" value=""/>
                    <field name="kEtHad" value=""/>
                    <field name="kNumOfL1ObjectTypes" value=""/>
                </enum>

                <enum name="L1TriggerType">
enum L1TriggerType
  {

     kSingleMu3, 
     kSingleMu5, 
     kSingleMu7, 
     kSingleMu10, 
     kSingleMu14, 
     kSingleMu20, 
     kSingleMu25, 
     kSingleIsoEG5, 
     kSingleIsoEG8, 
     kSingleIsoEG10, 
     kSingleIsoEG12, 
     kSingleIsoEG15, 
     kSingleIsoEG20, 
     kSingleIsoEG25, 
     kSingleEG5, 
     kSingleEG8, 
     kSingleEG10, 
     kSingleEG12, 
     kSingleEG15, 
     kSingleEG20, 
     kSingleEG25, 
     kSingleJet15, 
     kSingleJet20, 
     kSingleJet30, 
     kSingleJet50, 
     kSingleJet70, 
     kSingleJet100, 
     kSingleJet150, 
     kSingleJet200, 
     kSingleTauJet10, 
     kSingleTauJet20, 
     kSingleTauJet30, 
     kSingleTauJet35, 
     kSingleTauJet40, 
     kSingleTauJet60, 
     kSingleTauJet80, 
     kSingleTauJet100, 
     kHTT100, 
     kHTT200, 
     kHTT250, 
     kHTT300, 
     kHTT400, 
     kHTT500, 
     kETM10, 
     kETM15, 
     kETM20, 
     kETM30, 
     kETM40, 
     kETM50, 
     kETM60, 
     kETT60, 
     kDoubleMu3, 
     kDoubleIsoEG8, 
     kDoubleIsoEG10, 
     kDoubleEG5, 
     kDoubleEG10, 
     kDoubleEG15, 
     kDoubleJet70, 
     kDoubleJet100, 
     kDoubleTauJet20, 
     kDoubleTauJet30, 
     kDoubleTauJet35, 
     kDoubleTauJet40, 
     kMu3_IsoEG5, 
     kMu5_IsoEG10, 
     kMu3_EG12, 
     kMu3_Jet15, 
     kMu5_Jet15, 
     kMu3_Jet70, 
     kMu5_Jet20, 
     kMu5_TauJet20, 
     kMu5_TauJet30, 
     kIsoEG10_EG10, 
     kIsoEG10_Jet15, 
     kIsoEG10_Jet20, 
     kIsoEG10_Jet30, 
     kIsoEG10_Jet70, 
     kIsoEG10_TauJet20, 
     kIsoEG10_TauJet30, 
     kEG10_Jet15, 
     kEG12_Jet20, 
     kEG12_Jet70, 
     kEG12_TauJet40, 
     kJet70_TauJet40, 
     kMu3_HTT200, 
     kIsoEG10_HTT200, 
     kEG12_HTT200, 
     kJet70_HTT200, 
     kTauJet40_HTT200, 
     kMu3_ETM30, 
     kIsoEG10_ETM30, 
     kEG12_ETM30, 
     kJet70_ETM40, 
     kTauJet20_ETM20, 
     kTauJet30_ETM30, 
     kTauJet30_ETM40, 
     kHTT100_ETM30, 
     kTripleMu3, 
     kTripleIsoEG5, 
     kTripleEG10, 
     kTripleJet50, 
     kTripleTauJet40, 
     kDoubleMu3_IsoEG5, 
     kDoubleMu3_EG10, 
     kDoubleIsoEG5_Mu3, 
     kDoubleEG10_Mu3, 
     kDoubleMu3_HTT200, 
     kDoubleIsoEG5_HTT200, 
     kDoubleEG10_HTT200, 
     kDoubleJet50_HTT200, 
     kDoubleTauJet40_HTT200, 
     kDoubleMu3_ETM20, 
     kDoubleIsoEG5_ETM20, 
     kDoubleEG10_ETM20, 
     kDoubleJet50_ETM20, 
     kDoubleTauJet40_ETM20, 
     kQuadJet30, 
            kExclusiveDoubleIsoEG4, 
            kExclusiveDoubleJet60, 
            kExclusiveJet25_Gap_Jet25, 
            kIsoEG10_Jet20_ForJet10, 
     kMinBias_HTT10, 
     kZeroBias, 
     kNumOfL1TriggerTypes
  };
                    <field name="kSingleMu3" value=""/>
                    <field name="kSingleMu5" value=""/>
                    <field name="kSingleMu7" value=""/>
                    <field name="kSingleMu10" value=""/>
                    <field name="kSingleMu14" value=""/>
                    <field name="kSingleMu20" value=""/>
                    <field name="kSingleMu25" value=""/>
                    <field name="kSingleIsoEG5" value=""/>
                    <field name="kSingleIsoEG8" value=""/>
                    <field name="kSingleIsoEG10" value=""/>
                    <field name="kSingleIsoEG12" value=""/>
                    <field name="kSingleIsoEG15" value=""/>
                    <field name="kSingleIsoEG20" value=""/>
                    <field name="kSingleIsoEG25" value=""/>
                    <field name="kSingleEG5" value=""/>
                    <field name="kSingleEG8" value=""/>
                    <field name="kSingleEG10" value=""/>
                    <field name="kSingleEG12" value=""/>
                    <field name="kSingleEG15" value=""/>
                    <field name="kSingleEG20" value=""/>
                    <field name="kSingleEG25" value=""/>
                    <field name="kSingleJet15" value=""/>
                    <field name="kSingleJet20" value=""/>
                    <field name="kSingleJet30" value=""/>
                    <field name="kSingleJet50" value=""/>
                    <field name="kSingleJet70" value=""/>
                    <field name="kSingleJet100" value=""/>
                    <field name="kSingleJet150" value=""/>
                    <field name="kSingleJet200" value=""/>
                    <field name="kSingleTauJet10" value=""/>
                    <field name="kSingleTauJet20" value=""/>
                    <field name="kSingleTauJet30" value=""/>
                    <field name="kSingleTauJet35" value=""/>
                    <field name="kSingleTauJet40" value=""/>
                    <field name="kSingleTauJet60" value=""/>
                    <field name="kSingleTauJet80" value=""/>
                    <field name="kSingleTauJet100" value=""/>
                    <field name="kHTT100" value=""/>
                    <field name="kHTT200" value=""/>
                    <field name="kHTT250" value=""/>
                    <field name="kHTT300" value=""/>
                    <field name="kHTT400" value=""/>
                    <field name="kHTT500" value=""/>
                    <field name="kETM10" value=""/>
                    <field name="kETM15" value=""/>
                    <field name="kETM20" value=""/>
                    <field name="kETM30" value=""/>
                    <field name="kETM40" value=""/>
                    <field name="kETM50" value=""/>
                    <field name="kETM60" value=""/>
                    <field name="kETT60" value=""/>
                    <field name="kDoubleMu3" value=""/>
                    <field name="kDoubleIsoEG8" value=""/>
                    <field name="kDoubleIsoEG10" value=""/>
                    <field name="kDoubleEG5" value=""/>
                    <field name="kDoubleEG10" value=""/>
                    <field name="kDoubleEG15" value=""/>
                    <field name="kDoubleJet70" value=""/>
                    <field name="kDoubleJet100" value=""/>
                    <field name="kDoubleTauJet20" value=""/>
                    <field name="kDoubleTauJet30" value=""/>
                    <field name="kDoubleTauJet35" value=""/>
                    <field name="kDoubleTauJet40" value=""/>
                    <field name="kMu3_IsoEG5" value=""/>
                    <field name="kMu5_IsoEG10" value=""/>
                    <field name="kMu3_EG12" value=""/>
                    <field name="kMu3_Jet15" value=""/>
                    <field name="kMu5_Jet15" value=""/>
                    <field name="kMu3_Jet70" value=""/>
                    <field name="kMu5_Jet20" value=""/>
                    <field name="kMu5_TauJet20" value=""/>
                    <field name="kMu5_TauJet30" value=""/>
                    <field name="kIsoEG10_EG10" value=""/>
                    <field name="kIsoEG10_Jet15" value=""/>
                    <field name="kIsoEG10_Jet20" value=""/>
                    <field name="kIsoEG10_Jet30" value=""/>
                    <field name="kIsoEG10_Jet70" value=""/>
                    <field name="kIsoEG10_TauJet20" value=""/>
                    <field name="kIsoEG10_TauJet30" value=""/>
                    <field name="kEG10_Jet15" value=""/>
                    <field name="kEG12_Jet20" value=""/>
                    <field name="kEG12_Jet70" value=""/>
                    <field name="kEG12_TauJet40" value=""/>
                    <field name="kJet70_TauJet40" value=""/>
                    <field name="kMu3_HTT200" value=""/>
                    <field name="kIsoEG10_HTT200" value=""/>
                    <field name="kEG12_HTT200" value=""/>
                    <field name="kJet70_HTT200" value=""/>
                    <field name="kTauJet40_HTT200" value=""/>
                    <field name="kMu3_ETM30" value=""/>
                    <field name="kIsoEG10_ETM30" value=""/>
                    <field name="kEG12_ETM30" value=""/>
                    <field name="kJet70_ETM40" value=""/>
                    <field name="kTauJet20_ETM20" value=""/>
                    <field name="kTauJet30_ETM30" value=""/>
                    <field name="kTauJet30_ETM40" value=""/>
                    <field name="kHTT100_ETM30" value=""/>
                    <field name="kTripleMu3" value=""/>
                    <field name="kTripleIsoEG5" value=""/>
                    <field name="kTripleEG10" value=""/>
                    <field name="kTripleJet50" value=""/>
                    <field name="kTripleTauJet40" value=""/>
                    <field name="kDoubleMu3_IsoEG5" value=""/>
                    <field name="kDoubleMu3_EG10" value=""/>
                    <field name="kDoubleIsoEG5_Mu3" value=""/>
                    <field name="kDoubleEG10_Mu3" value=""/>
                    <field name="kDoubleMu3_HTT200" value=""/>
                    <field name="kDoubleIsoEG5_HTT200" value=""/>
                    <field name="kDoubleEG10_HTT200" value=""/>
                    <field name="kDoubleJet50_HTT200" value=""/>
                    <field name="kDoubleTauJet40_HTT200" value=""/>
                    <field name="kDoubleMu3_ETM20" value=""/>
                    <field name="kDoubleIsoEG5_ETM20" value=""/>
                    <field name="kDoubleEG10_ETM20" value=""/>
                    <field name="kDoubleJet50_ETM20" value=""/>
                    <field name="kDoubleTauJet40_ETM20" value=""/>
                    <field name="kQuadJet30" value=""/>
                    <field name="kExclusiveDoubleIsoEG4" value=""/>
                    <field name="kExclusiveDoubleJet60" value=""/>
                    <field name="kExclusiveJet25_Gap_Jet25" value=""/>
                    <field name="kIsoEG10_Jet20_ForJet10" value=""/>
                    <field name="kMinBias_HTT10" value=""/>
                    <field name="kZeroBias" value=""/>
                    <field name="kNumOfL1TriggerTypes" value=""/>
                    <comment>
	    RelaxedEM = isolated OR non-isolated
	    Jet = central OR forward OR tau
                    </comment>
                </enum>

                <typedef name="L1IndexCombo"
                         value="std::vector&lt;unsigned int &gt;">
typedef std::vector&lt;unsigned int &gt; L1IndexCombo;
                </typedef>

                <typedef name="L1IndexComboVector"
                         value="std::vector&lt;L1IndexCombo &gt;">
typedef std::vector&lt;L1IndexCombo &gt; L1IndexComboVector;
                </typedef>

                <typedef name="L1ObjectTypeVector"
                         value="std::vector&lt;L1ObjectType &gt;">
typedef std::vector&lt;L1ObjectType &gt; L1ObjectTypeVector;
                </typedef>

                <constructor name="L1ParticleMap"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
L1ParticleMap();
                </constructor>

                <constructor name="L1ParticleMap"
                             return=""
                             args="['L1TriggerType','bool','const L1ObjectTypeVector&amp;','const L1EmParticleVectorRef&amp;=L1EmParticleVectorRef()','const L1JetParticleVectorRef&amp;=L1JetParticleVectorRef()','const L1MuonParticleVectorRef&amp;=L1MuonParticleVectorRef()','const L1EtMissParticleRefProd&amp;=L1EtMissParticleRefProd()','const L1IndexComboVector&amp;=L1IndexComboVector()']"
                             vars="['triggerType','triggerDecision','objectTypes','emParticles','jetParticles','muonParticles','etMissParticle','indexCombos']"
                             qual="">
L1ParticleMap(      L1TriggerType triggerType, bool triggerDecision, const L1ObjectTypeVector&amp; objectTypes, const L1EmParticleVectorRef&amp; emParticles=      L1EmParticleVectorRef(), const L1JetParticleVectorRef&amp; jetParticles=      L1JetParticleVectorRef(), const L1MuonParticleVectorRef&amp; muonParticles=         L1MuonParticleVectorRef(), const L1EtMissParticleRefProd&amp; etMissParticle=         L1EtMissParticleRefProd(), const L1IndexComboVector&amp; indexCombos=         L1IndexComboVector()     );
                </constructor>

                <destructor name="~L1ParticleMap"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~L1ParticleMap();
                </destructor>

                <method1 name="triggerType"
                         return="L1TriggerType"
                         args="['void']"
                         vars="['']"
                         qual="const">
L1TriggerType triggerType() const;
                    <comment>
	    ---------- const member functions ---------------------
                    </comment>
                </method1>

                <method1 name="triggerName"
                         return="const std::string&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const std::string&amp; triggerName() const;
                </method1>

                <method1 name="triggerDecision"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool triggerDecision() const;
                </method1>

                <method1 name="objectTypes"
                         return="const L1ObjectTypeVector&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1ObjectTypeVector&amp; objectTypes() const;
                    <comment>
	    Indices of object types (see the above enum), that participated
	    in this trigger.  The order of these type indices corresponds to
	    the particles listed in each L1IndexCombo.
                    </comment>
                </method1>

                <method1 name="numOfObjects"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int numOfObjects() const;
                    <comment>
	    Number of objects that participated in this trigger.
                    </comment>
                </method1>

                <method1 name="emParticles"
                         return="const L1EmParticleVectorRef&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1EmParticleVectorRef&amp; emParticles() const;
                </method1>

                <method1 name="jetParticles"
                         return="const L1JetParticleVectorRef&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1JetParticleVectorRef&amp; jetParticles() const;
                </method1>

                <method1 name="muonParticles"
                         return="const L1MuonParticleVectorRef&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1MuonParticleVectorRef&amp; muonParticles() const;
                </method1>

                <method1 name="etMissParticle"
                         return="const L1EtMissParticleRefProd&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1EtMissParticleRefProd&amp; etMissParticle() const;
                </method1>

                <method1 name="indexCombos"
                         return="const L1IndexComboVector&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const L1IndexComboVector&amp; indexCombos() const;
                    <comment>
	    If there are zero or one non-global objects, then there is no need
	    to store the object combinations.  In this case, the stored
	    vector m_objectCombinations will be empty, and it will be
	    filled upon request at analysis time.
                    </comment>
                </method1>

                <method1 name="candidateInCombo"
                         return="const reco::LeafCandidate*"
                         args="['int','const L1IndexCombo&amp;']"
                         vars="['aIndexInCombo','aCombo']"
                         qual="const">
const reco::LeafCandidate* candidateInCombo(      int aIndexInCombo, const L1IndexCombo&amp; aCombo) const;
                    <comment>
	    These functions retrieve the object corresponding to a
	    particular entry in a given combination.  The pointer is null
	    if an error occurs (e.g. the particle requested does not match
	    the type of the function).
                    </comment>
                </method1>

                <method1 name="emParticleInCombo"
                         return="const L1EmParticle*"
                         args="['int','const L1IndexCombo&amp;']"
                         vars="['aIndexInCombo','aCombo']"
                         qual="const">
const L1EmParticle* emParticleInCombo(      int aIndexInCombo, const L1IndexCombo&amp; aCombo) const;
                </method1>

                <method1 name="jetParticleInCombo"
                         return="const L1JetParticle*"
                         args="['int','const L1IndexCombo&amp;']"
                         vars="['aIndexInCombo','aCombo']"
                         qual="const">
const L1JetParticle* jetParticleInCombo(      int aIndexInCombo, const L1IndexCombo&amp; aCombo) const;
                </method1>

                <method1 name="muonParticleInCombo"
                         return="const L1MuonParticle*"
                         args="['int','const L1IndexCombo&amp;']"
                         vars="['aIndexInCombo','aCombo']"
                         qual="const">
const L1MuonParticle* muonParticleInCombo(      int aIndexInCombo, const L1IndexCombo&amp; aCombo) const;
                </method1>

                <method1 name="etMissParticleInCombo"
                         return="const L1EtMissParticle*"
                         args="['int','const L1IndexCombo&amp;']"
                         vars="['aIndexInCombo','aCombo']"
                         qual="const">
const L1EtMissParticle* etMissParticleInCombo(      int aIndexInCombo, const L1IndexCombo&amp; aCombo) const;
                    <comment>
	    This function just returns the single global object.
                    </comment>
                </method1>

                <method2 name="candidateCombo"
                         return="std::vector&lt;const reco::LeafCandidate*&gt;"
                         args="['const L1IndexCombo&amp;']"
                         vars="['aCombo']"
                         qual="const">
std::vector&lt;const reco::LeafCandidate*&gt; candidateCombo(      const L1IndexCombo&amp; aCombo) const;
                    <comment>
	    For a given particle combination, convert all the particles to
	    reco::LeafCandidate pointers.
                    </comment>
                </method2>

                <method1 name="triggerName"
                         return="static const std::string&amp;"
                         args="['L1TriggerType']"
                         vars="['type']"
                         qual="">
static const std::string&amp; triggerName(L1TriggerType type);
                    <comment>
	    ---------- static member functions --------------------
                    </comment>
                </method1>

                <method1 name="triggerType"
                         return="static L1TriggerType"
                         args="['const std::string&amp;']"
                         vars="['name']"
                         qual="">
static L1TriggerType triggerType(const std::string&amp; name);
                </method1>

                <method1 name="objectTypeIsGlobal"
                         return="static bool"
                         args="['L1ObjectType']"
                         vars="['type']"
                         qual="">
static bool objectTypeIsGlobal(L1ObjectType type);
                </method1>

            </section>

            <typemap name="L1IndexCombo"
                     value="std::vector&lt;unsigned int &gt;"
                     type="typedef"/>
            <typemap name="L1IndexComboVector"
                     value="std::vector&lt;std::vector&lt;unsigned int &gt; &gt;"
                     type="typedef"/>
            <typemap name="L1ObjectType"
                     value="l1extra::L1ParticleMap::L1ObjectType"
                     type="enum"/>
            <typemap name="L1ObjectTypeVector"
                     value="std::vector&lt;L1ObjectType &gt;"
                     type="typedef"/>
            <typemap name="L1TriggerType"
                     value="l1extra::L1ParticleMap::L1TriggerType"
                     type="enum"/>
            <typemap name="kDoubleEG10"
                     value="l1extra::L1ParticleMap::kDoubleEG10"
                     type="enum"/>
            <typemap name="kDoubleEG10_ETM20"
                     value="l1extra::L1ParticleMap::kDoubleEG10_ETM20"
                     type="enum"/>
            <typemap name="kDoubleEG10_HTT200"
                     value="l1extra::L1ParticleMap::kDoubleEG10_HTT200"
                     type="enum"/>
            <typemap name="kDoubleEG10_Mu3"
                     value="l1extra::L1ParticleMap::kDoubleEG10_Mu3"
                     type="enum"/>
            <typemap name="kDoubleEG15"
                     value="l1extra::L1ParticleMap::kDoubleEG15"
                     type="enum"/>
            <typemap name="kDoubleEG5"
                     value="l1extra::L1ParticleMap::kDoubleEG5"
                     type="enum"/>
            <typemap name="kDoubleIsoEG10"
                     value="l1extra::L1ParticleMap::kDoubleIsoEG10"
                     type="enum"/>
            <typemap name="kDoubleIsoEG5_ETM20"
                     value="l1extra::L1ParticleMap::kDoubleIsoEG5_ETM20"
                     type="enum"/>
            <typemap name="kDoubleIsoEG5_HTT200"
                     value="l1extra::L1ParticleMap::kDoubleIsoEG5_HTT200"
                     type="enum"/>
            <typemap name="kDoubleIsoEG5_Mu3"
                     value="l1extra::L1ParticleMap::kDoubleIsoEG5_Mu3"
                     type="enum"/>
            <typemap name="kDoubleIsoEG8"
                     value="l1extra::L1ParticleMap::kDoubleIsoEG8"
                     type="enum"/>
            <typemap name="kDoubleJet100"
                     value="l1extra::L1ParticleMap::kDoubleJet100"
                     type="enum"/>
            <typemap name="kDoubleJet50_ETM20"
                     value="l1extra::L1ParticleMap::kDoubleJet50_ETM20"
                     type="enum"/>
            <typemap name="kDoubleJet50_HTT200"
                     value="l1extra::L1ParticleMap::kDoubleJet50_HTT200"
                     type="enum"/>
            <typemap name="kDoubleJet70"
                     value="l1extra::L1ParticleMap::kDoubleJet70"
                     type="enum"/>
            <typemap name="kDoubleMu3"
                     value="l1extra::L1ParticleMap::kDoubleMu3"
                     type="enum"/>
            <typemap name="kDoubleMu3_EG10"
                     value="l1extra::L1ParticleMap::kDoubleMu3_EG10"
                     type="enum"/>
            <typemap name="kDoubleMu3_ETM20"
                     value="l1extra::L1ParticleMap::kDoubleMu3_ETM20"
                     type="enum"/>
            <typemap name="kDoubleMu3_HTT200"
                     value="l1extra::L1ParticleMap::kDoubleMu3_HTT200"
                     type="enum"/>
            <typemap name="kDoubleMu3_IsoEG5"
                     value="l1extra::L1ParticleMap::kDoubleMu3_IsoEG5"
                     type="enum"/>
            <typemap name="kDoubleTauJet20"
                     value="l1extra::L1ParticleMap::kDoubleTauJet20"
                     type="enum"/>
            <typemap name="kDoubleTauJet30"
                     value="l1extra::L1ParticleMap::kDoubleTauJet30"
                     type="enum"/>
            <typemap name="kDoubleTauJet35"
                     value="l1extra::L1ParticleMap::kDoubleTauJet35"
                     type="enum"/>
            <typemap name="kDoubleTauJet40"
                     value="l1extra::L1ParticleMap::kDoubleTauJet40"
                     type="enum"/>
            <typemap name="kDoubleTauJet40_ETM20"
                     value="l1extra::L1ParticleMap::kDoubleTauJet40_ETM20"
                     type="enum"/>
            <typemap name="kDoubleTauJet40_HTT200"
                     value="l1extra::L1ParticleMap::kDoubleTauJet40_HTT200"
                     type="enum"/>
            <typemap name="kEG10_Jet15"
                     value="l1extra::L1ParticleMap::kEG10_Jet15"
                     type="enum"/>
            <typemap name="kEG12_ETM30"
                     value="l1extra::L1ParticleMap::kEG12_ETM30"
                     type="enum"/>
            <typemap name="kEG12_HTT200"
                     value="l1extra::L1ParticleMap::kEG12_HTT200"
                     type="enum"/>
            <typemap name="kEG12_Jet20"
                     value="l1extra::L1ParticleMap::kEG12_Jet20"
                     type="enum"/>
            <typemap name="kEG12_Jet70"
                     value="l1extra::L1ParticleMap::kEG12_Jet70"
                     type="enum"/>
            <typemap name="kEG12_TauJet40"
                     value="l1extra::L1ParticleMap::kEG12_TauJet40"
                     type="enum"/>
            <typemap name="kEM"
                     value="l1extra::L1ParticleMap::kEM"
                     type="enum"/>
            <typemap name="kETM10"
                     value="l1extra::L1ParticleMap::kETM10"
                     type="enum"/>
            <typemap name="kETM15"
                     value="l1extra::L1ParticleMap::kETM15"
                     type="enum"/>
            <typemap name="kETM20"
                     value="l1extra::L1ParticleMap::kETM20"
                     type="enum"/>
            <typemap name="kETM30"
                     value="l1extra::L1ParticleMap::kETM30"
                     type="enum"/>
            <typemap name="kETM40"
                     value="l1extra::L1ParticleMap::kETM40"
                     type="enum"/>
            <typemap name="kETM50"
                     value="l1extra::L1ParticleMap::kETM50"
                     type="enum"/>
            <typemap name="kETM60"
                     value="l1extra::L1ParticleMap::kETM60"
                     type="enum"/>
            <typemap name="kETT60"
                     value="l1extra::L1ParticleMap::kETT60"
                     type="enum"/>
            <typemap name="kEtHad"
                     value="l1extra::L1ParticleMap::kEtHad"
                     type="enum"/>
            <typemap name="kEtMiss"
                     value="l1extra::L1ParticleMap::kEtMiss"
                     type="enum"/>
            <typemap name="kEtTotal"
                     value="l1extra::L1ParticleMap::kEtTotal"
                     type="enum"/>
            <typemap name="kExclusiveDoubleIsoEG4"
                     value="l1extra::L1ParticleMap::kExclusiveDoubleIsoEG4"
                     type="enum"/>
            <typemap name="kExclusiveDoubleJet60"
                     value="l1extra::L1ParticleMap::kExclusiveDoubleJet60"
                     type="enum"/>
            <typemap name="kExclusiveJet25_Gap_Jet25"
                     value="l1extra::L1ParticleMap::kExclusiveJet25_Gap_Jet25"
                     type="enum"/>
            <typemap name="kHTT100"
                     value="l1extra::L1ParticleMap::kHTT100"
                     type="enum"/>
            <typemap name="kHTT100_ETM30"
                     value="l1extra::L1ParticleMap::kHTT100_ETM30"
                     type="enum"/>
            <typemap name="kHTT200"
                     value="l1extra::L1ParticleMap::kHTT200"
                     type="enum"/>
            <typemap name="kHTT250"
                     value="l1extra::L1ParticleMap::kHTT250"
                     type="enum"/>
            <typemap name="kHTT300"
                     value="l1extra::L1ParticleMap::kHTT300"
                     type="enum"/>
            <typemap name="kHTT400"
                     value="l1extra::L1ParticleMap::kHTT400"
                     type="enum"/>
            <typemap name="kHTT500"
                     value="l1extra::L1ParticleMap::kHTT500"
                     type="enum"/>
            <typemap name="kIsoEG10_EG10"
                     value="l1extra::L1ParticleMap::kIsoEG10_EG10"
                     type="enum"/>
            <typemap name="kIsoEG10_ETM30"
                     value="l1extra::L1ParticleMap::kIsoEG10_ETM30"
                     type="enum"/>
            <typemap name="kIsoEG10_HTT200"
                     value="l1extra::L1ParticleMap::kIsoEG10_HTT200"
                     type="enum"/>
            <typemap name="kIsoEG10_Jet15"
                     value="l1extra::L1ParticleMap::kIsoEG10_Jet15"
                     type="enum"/>
            <typemap name="kIsoEG10_Jet20"
                     value="l1extra::L1ParticleMap::kIsoEG10_Jet20"
                     type="enum"/>
            <typemap name="kIsoEG10_Jet20_ForJet10"
                     value="l1extra::L1ParticleMap::kIsoEG10_Jet20_ForJet10"
                     type="enum"/>
            <typemap name="kIsoEG10_Jet30"
                     value="l1extra::L1ParticleMap::kIsoEG10_Jet30"
                     type="enum"/>
            <typemap name="kIsoEG10_Jet70"
                     value="l1extra::L1ParticleMap::kIsoEG10_Jet70"
                     type="enum"/>
            <typemap name="kIsoEG10_TauJet20"
                     value="l1extra::L1ParticleMap::kIsoEG10_TauJet20"
                     type="enum"/>
            <typemap name="kIsoEG10_TauJet30"
                     value="l1extra::L1ParticleMap::kIsoEG10_TauJet30"
                     type="enum"/>
            <typemap name="kJet"
                     value="l1extra::L1ParticleMap::kJet"
                     type="enum"/>
            <typemap name="kJet70_ETM40"
                     value="l1extra::L1ParticleMap::kJet70_ETM40"
                     type="enum"/>
            <typemap name="kJet70_HTT200"
                     value="l1extra::L1ParticleMap::kJet70_HTT200"
                     type="enum"/>
            <typemap name="kJet70_TauJet40"
                     value="l1extra::L1ParticleMap::kJet70_TauJet40"
                     type="enum"/>
            <typemap name="kMinBias_HTT10"
                     value="l1extra::L1ParticleMap::kMinBias_HTT10"
                     type="enum"/>
            <typemap name="kMu3_EG12"
                     value="l1extra::L1ParticleMap::kMu3_EG12"
                     type="enum"/>
            <typemap name="kMu3_ETM30"
                     value="l1extra::L1ParticleMap::kMu3_ETM30"
                     type="enum"/>
            <typemap name="kMu3_HTT200"
                     value="l1extra::L1ParticleMap::kMu3_HTT200"
                     type="enum"/>
            <typemap name="kMu3_IsoEG5"
                     value="l1extra::L1ParticleMap::kMu3_IsoEG5"
                     type="enum"/>
            <typemap name="kMu3_Jet15"
                     value="l1extra::L1ParticleMap::kMu3_Jet15"
                     type="enum"/>
            <typemap name="kMu3_Jet70"
                     value="l1extra::L1ParticleMap::kMu3_Jet70"
                     type="enum"/>
            <typemap name="kMu5_IsoEG10"
                     value="l1extra::L1ParticleMap::kMu5_IsoEG10"
                     type="enum"/>
            <typemap name="kMu5_Jet15"
                     value="l1extra::L1ParticleMap::kMu5_Jet15"
                     type="enum"/>
            <typemap name="kMu5_Jet20"
                     value="l1extra::L1ParticleMap::kMu5_Jet20"
                     type="enum"/>
            <typemap name="kMu5_TauJet20"
                     value="l1extra::L1ParticleMap::kMu5_TauJet20"
                     type="enum"/>
            <typemap name="kMu5_TauJet30"
                     value="l1extra::L1ParticleMap::kMu5_TauJet30"
                     type="enum"/>
            <typemap name="kMuon"
                     value="l1extra::L1ParticleMap::kMuon"
                     type="enum"/>
            <typemap name="kNumOfL1ObjectTypes"
                     value="l1extra::L1ParticleMap::kNumOfL1ObjectTypes"
                     type="enum"/>
            <typemap name="kNumOfL1TriggerTypes"
                     value="l1extra::L1ParticleMap::kNumOfL1TriggerTypes"
                     type="enum"/>
            <typemap name="kQuadJet30"
                     value="l1extra::L1ParticleMap::kQuadJet30"
                     type="enum"/>
            <typemap name="kSingleEG10"
                     value="l1extra::L1ParticleMap::kSingleEG10"
                     type="enum"/>
            <typemap name="kSingleEG12"
                     value="l1extra::L1ParticleMap::kSingleEG12"
                     type="enum"/>
            <typemap name="kSingleEG15"
                     value="l1extra::L1ParticleMap::kSingleEG15"
                     type="enum"/>
            <typemap name="kSingleEG20"
                     value="l1extra::L1ParticleMap::kSingleEG20"
                     type="enum"/>
            <typemap name="kSingleEG25"
                     value="l1extra::L1ParticleMap::kSingleEG25"
                     type="enum"/>
            <typemap name="kSingleEG5"
                     value="l1extra::L1ParticleMap::kSingleEG5"
                     type="enum"/>
            <typemap name="kSingleEG8"
                     value="l1extra::L1ParticleMap::kSingleEG8"
                     type="enum"/>
            <typemap name="kSingleIsoEG10"
                     value="l1extra::L1ParticleMap::kSingleIsoEG10"
                     type="enum"/>
            <typemap name="kSingleIsoEG12"
                     value="l1extra::L1ParticleMap::kSingleIsoEG12"
                     type="enum"/>
            <typemap name="kSingleIsoEG15"
                     value="l1extra::L1ParticleMap::kSingleIsoEG15"
                     type="enum"/>
            <typemap name="kSingleIsoEG20"
                     value="l1extra::L1ParticleMap::kSingleIsoEG20"
                     type="enum"/>
            <typemap name="kSingleIsoEG25"
                     value="l1extra::L1ParticleMap::kSingleIsoEG25"
                     type="enum"/>
            <typemap name="kSingleIsoEG5"
                     value="l1extra::L1ParticleMap::kSingleIsoEG5"
                     type="enum"/>
            <typemap name="kSingleIsoEG8"
                     value="l1extra::L1ParticleMap::kSingleIsoEG8"
                     type="enum"/>
            <typemap name="kSingleJet100"
                     value="l1extra::L1ParticleMap::kSingleJet100"
                     type="enum"/>
            <typemap name="kSingleJet15"
                     value="l1extra::L1ParticleMap::kSingleJet15"
                     type="enum"/>
            <typemap name="kSingleJet150"
                     value="l1extra::L1ParticleMap::kSingleJet150"
                     type="enum"/>
            <typemap name="kSingleJet20"
                     value="l1extra::L1ParticleMap::kSingleJet20"
                     type="enum"/>
            <typemap name="kSingleJet200"
                     value="l1extra::L1ParticleMap::kSingleJet200"
                     type="enum"/>
            <typemap name="kSingleJet30"
                     value="l1extra::L1ParticleMap::kSingleJet30"
                     type="enum"/>
            <typemap name="kSingleJet50"
                     value="l1extra::L1ParticleMap::kSingleJet50"
                     type="enum"/>
            <typemap name="kSingleJet70"
                     value="l1extra::L1ParticleMap::kSingleJet70"
                     type="enum"/>
            <typemap name="kSingleMu10"
                     value="l1extra::L1ParticleMap::kSingleMu10"
                     type="enum"/>
            <typemap name="kSingleMu14"
                     value="l1extra::L1ParticleMap::kSingleMu14"
                     type="enum"/>
            <typemap name="kSingleMu20"
                     value="l1extra::L1ParticleMap::kSingleMu20"
                     type="enum"/>
            <typemap name="kSingleMu25"
                     value="l1extra::L1ParticleMap::kSingleMu25"
                     type="enum"/>
            <typemap name="kSingleMu3"
                     value="l1extra::L1ParticleMap::kSingleMu3"
                     type="enum"/>
            <typemap name="kSingleMu5"
                     value="l1extra::L1ParticleMap::kSingleMu5"
                     type="enum"/>
            <typemap name="kSingleMu7"
                     value="l1extra::L1ParticleMap::kSingleMu7"
                     type="enum"/>
            <typemap name="kSingleTauJet10"
                     value="l1extra::L1ParticleMap::kSingleTauJet10"
                     type="enum"/>
            <typemap name="kSingleTauJet100"
                     value="l1extra::L1ParticleMap::kSingleTauJet100"
                     type="enum"/>
            <typemap name="kSingleTauJet20"
                     value="l1extra::L1ParticleMap::kSingleTauJet20"
                     type="enum"/>
            <typemap name="kSingleTauJet30"
                     value="l1extra::L1ParticleMap::kSingleTauJet30"
                     type="enum"/>
            <typemap name="kSingleTauJet35"
                     value="l1extra::L1ParticleMap::kSingleTauJet35"
                     type="enum"/>
            <typemap name="kSingleTauJet40"
                     value="l1extra::L1ParticleMap::kSingleTauJet40"
                     type="enum"/>
            <typemap name="kSingleTauJet60"
                     value="l1extra::L1ParticleMap::kSingleTauJet60"
                     type="enum"/>
            <typemap name="kSingleTauJet80"
                     value="l1extra::L1ParticleMap::kSingleTauJet80"
                     type="enum"/>
            <typemap name="kTauJet20_ETM20"
                     value="l1extra::L1ParticleMap::kTauJet20_ETM20"
                     type="enum"/>
            <typemap name="kTauJet30_ETM30"
                     value="l1extra::L1ParticleMap::kTauJet30_ETM30"
                     type="enum"/>
            <typemap name="kTauJet30_ETM40"
                     value="l1extra::L1ParticleMap::kTauJet30_ETM40"
                     type="enum"/>
            <typemap name="kTauJet40_HTT200"
                     value="l1extra::L1ParticleMap::kTauJet40_HTT200"
                     type="enum"/>
            <typemap name="kTripleEG10"
                     value="l1extra::L1ParticleMap::kTripleEG10"
                     type="enum"/>
            <typemap name="kTripleIsoEG5"
                     value="l1extra::L1ParticleMap::kTripleIsoEG5"
                     type="enum"/>
            <typemap name="kTripleJet50"
                     value="l1extra::L1ParticleMap::kTripleJet50"
                     type="enum"/>
            <typemap name="kTripleMu3"
                     value="l1extra::L1ParticleMap::kTripleMu3"
                     type="enum"/>
            <typemap name="kTripleTauJet40"
                     value="l1extra::L1ParticleMap::kTripleTauJet40"
                     type="enum"/>
            <typemap name="kZeroBias"
                     value="l1extra::L1ParticleMap::kZeroBias"
                     type="enum"/>

        </class>
    </namespace>

    <type name="L1ObjectType"/>
    <type name="L1TriggerType"/>
    <type name="bool"/>
    <type name="const L1EmParticle*"/>
    <type name="const L1EmParticleVectorRef&amp;"/>
    <type name="const L1EtMissParticle*"/>
    <type name="const L1EtMissParticleRefProd&amp;"/>
    <type name="const L1IndexCombo&amp;"/>
    <type name="const L1IndexComboVector&amp;"/>
    <type name="const L1JetParticle*"/>
    <type name="const L1JetParticleVectorRef&amp;"/>
    <type name="const L1MuonParticle*"/>
    <type name="const L1MuonParticleVectorRef&amp;"/>
    <type name="const L1ObjectTypeVector&amp;"/>
    <type name="const reco::LeafCandidate*"/>
    <type name="const std::string&amp;"/>
    <type name="enum L1ObjectType"/>
    <type name="enum L1TriggerType"/>
    <type name="int"/>
    <type name="l1extra::L1ParticleMap"/>
    <type name="std::vector&lt;const reco::LeafCandidate*&gt;"/>
    <type name="void"/>
</header>
