<?xml version="1.0"?>
<!--
==============================================================================
  XML File: L1DataEmulDigi.xml
  Created:  Thu Jan 14 22:47:27 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/L1Trigger/interface/L1DataEmulDigi.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/L1Trigger/interface/L1DataEmulDigi.h">

    <include name="&lt;ostream&gt;"/>
    <include name="&lt;string&gt;"/>
    <include name="&lt;utility&gt;"/>
    <include name="&lt;vector&gt;"/>
    <include name="&quot;DataFormats/L1Trigger/interface/L1MonitorDigi.h&quot;"/>

    <class name="L1DataEmulDigi"
           fullname="L1DataEmulDigi"
           module="DataFormats.L1Trigger"
           project=""
           type="regular">

        <section name="public">
            <constructor name="L1DataEmulDigi"
                         return=""
                         args="['void']"
                         vars="['']"
                         qual="">
L1DataEmulDigi();
            </constructor>

            <constructor name="L1DataEmulDigi"
                         return=""
                         args="['int','int','double','double','double','int']"
                         vars="['sid','cid','x1','x2','x3','n']"
                         qual="">
L1DataEmulDigi(int sid, int cid, double x1, double x2, double x3, int n);
            </constructor>

            <constructor name="L1DataEmulDigi"
                         return=""
                         args="['int','int','double','double','double','int','unsigned int','unsigned int','float','float','L1MonitorDigi','L1MonitorDigi']"
                         vars="['sid','cid','x1','x2','x3','n','dw','ew','dr','er','dm','em']"
                         qual="">
L1DataEmulDigi(int sid, int cid, double x1, double x2, double x3, int n, unsigned int dw, unsigned int ew, float dr, float er, L1MonitorDigi dm, L1MonitorDigi em);
            </constructor>

            <destructor name="~L1DataEmulDigi"
                        return=""
                        args="['void']"
                        vars="['']"
                        qual="">
~L1DataEmulDigi();
            </destructor>

            <method1 name="setSid"
                     return="void"
                     args="['int']"
                     vars="['sid']"
                     qual="">
void setSid (int sid);
            </method1>

            <method1 name="setCid"
                     return="void"
                     args="['int']"
                     vars="['cid']"
                     qual="">
void setCid (int cid);
            </method1>

            <method1 name="setLocation"
                     return="void"
                     args="['double','double','double']"
                     vars="['x1','x2','x3']"
                     qual="">
void setLocation (double x1, double x2, double x3);
            </method1>

            <method1 name="setType"
                     return="void"
                     args="['int']"
                     vars="['n']"
                     qual="">
void setType (int n);
            </method1>

            <method1 name="setData"
                     return="void"
                     args="['unsigned int','unsigned int']"
                     vars="['d','e']"
                     qual="">
void setData(unsigned int d, unsigned int e);
            </method1>

            <method1 name="setRank"
                     return="void"
                     args="['float','float']"
                     vars="['d','e']"
                     qual="">
void setRank(float d, float e);
            </method1>

            <method1 name="setDEpair"
                     return="void"
                     args="['L1MonitorDigi','L1MonitorDigi']"
                     vars="['d','e']"
                     qual="">
void setDEpair(L1MonitorDigi d, L1MonitorDigi e);
            </method1>

            <method1 name="sid"
                     return="int"
                     args="['void']"
                     vars="['']"
                     qual="const">
int sid() const;
            </method1>

            <method1 name="cid"
                     return="int"
                     args="['void']"
                     vars="['']"
                     qual="const">
int cid() const;
            </method1>

            <method1 name="x1"
                     return="double"
                     args="['void']"
                     vars="['']"
                     qual="const">
double x1() const;
            </method1>

            <method1 name="x2"
                     return="double"
                     args="['void']"
                     vars="['']"
                     qual="const">
double x2() const;
            </method1>

            <method1 name="x3"
                     return="double"
                     args="['void']"
                     vars="['']"
                     qual="const">
double x3() const;
            </method1>

            <method1 name="type"
                     return="int"
                     args="['void']"
                     vars="['']"
                     qual="const">
int type() const;
            </method1>

            <method1 name="data"
                     return="void"
                     args="['unsigned int*']"
                     vars="['d']"
                     qual="const">
void data(unsigned int* d) const;
            </method1>

            <method1 name="rank"
                     return="void"
                     args="['float*']"
                     vars="['r']"
                     qual="const">
void rank(float* r) const;
            </method1>

            <method1 name="data"
                     return="L1MonitorDigi"
                     args="['void']"
                     vars="['']"
                     qual="const">
L1MonitorDigi data() const;
            </method1>

            <method1 name="emul"
                     return="L1MonitorDigi"
                     args="['void']"
                     vars="['']"
                     qual="const">
L1MonitorDigi emul() const;
            </method1>

            <method1 name="reset"
                     return="int"
                     args="['void']"
                     vars="['']"
                     qual="">
int reset();
            </method1>

            <method1 name="empty"
                     return="bool"
                     args="['void']"
                     vars="['']"
                     qual="const">
bool empty() const;
            </method1>

        </section>

    </class>
    <operator name="operator&lt;&lt;"
              return="std::ostream&amp;"
              args="['std::ostream&amp;','const L1DataEmulDigi&amp;']"
              vars="['','']"
              qual="">
std::ostream&amp; operator&lt;&lt;(std::ostream&amp;, const L1DataEmulDigi&amp;);
    </operator>


    <class name="GltDEDigi"
           fullname="GltDEDigi"
           module="DataFormats.L1Trigger"
           project=""
           type="regular struct">

        <section>
            <typedef name="GltBits"
                     value="std::vector&lt;bool&gt;">
typedef std::vector&lt;bool&gt; GltBits;
            </typedef>

            <constructor name="GltDEDigi"
                         return=""
                         args="['void']"
                         vars="['']"
                         qual="">
GltDEDigi();
            </constructor>

            <method1 name="reset"
                     return="void"
                     args="['void']"
                     vars="['']"
                     qual="">
void reset();
            </method1>

            <constructor name="GltDEDigi"
                         return=""
                         args="['bool[]','GltBits[]','GltBits[]']"
                         vars="['glbit[]','dbits[]','tbits[]']"
                         qual="">
GltDEDigi(bool glbit[], GltBits dbits[], GltBits tbits[]);
            </constructor>

            <method1 name="set"
                     return="void"
                     args="['bool[]','GltBits[]','GltBits[]']"
                     vars="['glbit[]','dbits[]','tbits[]']"
                     qual="">
void set(bool glbit[], GltBits dbits[], GltBits tbits[]);
            </method1>

            <member>
bool globalDBit[2];
            </member>

            <member>
GltBits gltDecBits[2], gltTchBits[2];
            </member>

        </section>

        <typemap name="GltBits"
                 value="std::vector&lt;bool&gt;"
                 type="typedef"/>
        <typemap name="globalDBit[2]"
                 value="GltDEDigi::globalDBit[2]"
                 type="member"/>
        <typemap name="gltTchBits[2]"
                 value="GltDEDigi::gltTchBits[2]"
                 type="member"/>

    </class>
    <operator name="operator&lt;&lt;"
              return="std::ostream&amp;"
              args="['std::ostream&amp;','const GltDEDigi&amp;']"
              vars="['','']"
              qual="">
std::ostream&amp; operator&lt;&lt;(std::ostream&amp;, const GltDEDigi&amp;);
    </operator>


    <type name="GltBits gltDecBits[2],"/>
    <type name="GltBits[]"/>
    <type name="GltDEDigi"/>
    <type name="L1DataEmulDigi"/>
    <type name="L1MonitorDigi"/>
    <type name="bool"/>
    <type name="bool[]"/>
    <type name="double"/>
    <type name="float"/>
    <type name="float*"/>
    <type name="int"/>
    <type name="unsigned int"/>
    <type name="unsigned int*"/>
    <type name="void"/>
</header>
