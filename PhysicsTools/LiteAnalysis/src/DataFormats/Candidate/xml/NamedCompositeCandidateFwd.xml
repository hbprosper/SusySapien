<?xml version="1.0"?>
<!--
==============================================================================
  XML File: NamedCompositeCandidateFwd.xml
  Created:  Thu Jan 14 22:46:43 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Candidate/interface/NamedCompositeCandidateFwd.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/Candidate/interface/NamedCompositeCandidateFwd.h">

    <include name="&quot;DataFormats/Common/interface/OwnVector.h&quot;"/>

    <namespace name="reco">
        <forward name="NamedCompositeCandidate"/>
    </namespace>
    <include name="&quot;DataFormats/Common/interface/Ref.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefProd.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBase.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBaseVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBaseProd.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/View.h&quot;"/>

    <namespace name="reco">
        <typedef name="NamedCompositeCandidateCollection"
                 value="std::vector&lt;NamedCompositeCandidate&gt;">
typedef std::vector&lt;NamedCompositeCandidate&gt; NamedCompositeCandidateCollection;
            <comment>
      collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateView"
                 value="edm::View&lt;NamedCompositeCandidate&gt;">
typedef edm::View&lt;NamedCompositeCandidate&gt; NamedCompositeCandidateView;
            <comment>
      view of a collection containing candidates
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateRef"
                 value="edm::Ref&lt;NamedCompositeCandidateCollection&gt;">
typedef edm::Ref&lt;NamedCompositeCandidateCollection&gt; NamedCompositeCandidateRef;
            <comment>
      persistent reference to an object in a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateBaseRef"
                 value="edm::RefToBase&lt;NamedCompositeCandidate&gt;">
typedef edm::RefToBase&lt;NamedCompositeCandidate&gt; NamedCompositeCandidateBaseRef;
            <comment>
      persistent reference to an object in a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateRefVector"
                 value="edm::RefVector&lt;NamedCompositeCandidateCollection&gt;">
typedef edm::RefVector&lt;NamedCompositeCandidateCollection&gt; NamedCompositeCandidateRefVector;
            <comment>
      vector of references to objects in the same  collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateBaseRefVector"
                 value="edm::RefToBaseVector&lt;NamedCompositeCandidate&gt;">
typedef edm::RefToBaseVector&lt;NamedCompositeCandidate&gt; NamedCompositeCandidateBaseRefVector;
            <comment>
      vector of references to objects in the same collection of Candidate objects via base type
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateRefProd"
                 value="edm::RefProd&lt;NamedCompositeCandidateCollection&gt;">
typedef edm::RefProd&lt;NamedCompositeCandidateCollection&gt; NamedCompositeCandidateRefProd;
            <comment>
      reference to a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="NamedCompositeCandidateBaseRefProd"
                 value="edm::RefToBaseProd&lt;NamedCompositeCandidate&gt;">
typedef edm::RefToBaseProd&lt;NamedCompositeCandidate&gt; NamedCompositeCandidateBaseRefProd;
            <comment>
      vector of references to objects in the same collection of Candidate objects via base type
            </comment>
        </typedef>

    </namespace>

</header>
