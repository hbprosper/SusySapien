<?xml version="1.0"?>
<!--
==============================================================================
  XML File: component.xml
  Created:  Thu Jan 14 22:46:46 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Candidate/interface/component.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/Candidate/interface/component.h">

    <include name="&quot;FWCore/Utilities/interface/Exception.h&quot;"/>

    <namespace name="reco">
        <forward name="Candidate"/>

        <class name="DefaultComponentTag"
               fullname="reco::DefaultComponentTag"
               module="DataFormats.Candidate"
               project=""
               type="regular struct">


        </class>

        <namespace name="componenthelper">

            <class name="SingleComponentTag"
                   fullname="reco::componenthelper::SingleComponentTag"
                   module="DataFormats.Candidate"
                   project=""
                   type="regular struct">


            </class>

            <class name="MultipleComponentsTag"
                   fullname="reco::componenthelper::MultipleComponentsTag"
                   module="DataFormats.Candidate"
                   project=""
                   type="regular struct">


            </class>

            <class name="SingleComponent"
                   fullname="reco::componenthelper::SingleComponent&lt;C, T, &gt;"
                   module="DataFormats.Candidate"
                   project=""
                   type="template struct"
                   template="template&lt;typename C, typename T, T (C::*F)() const&gt;">

                <section>
                    <method1 name="get"
                             return="static T"
                             args="['const Candidate&amp;']"
                             vars="['c']"
                             qual="">
static T get(const Candidate&amp; c);
                    </method1>

                </section>

            </class>

            <class name="MultipleComponents"
                   fullname="reco::componenthelper::MultipleComponents&lt;C, T, , &gt;"
                   module="DataFormats.Candidate"
                   project=""
                   type="template struct"
                   template="template&lt;typename C, typename T, T (C::*F)(size_t) const, size_t (C::*S)() const&gt;">

                <section>
                    <method1 name="numberOf"
                             return="static size_t"
                             args="['const Candidate&amp;']"
                             vars="['c']"
                             qual="">
static size_t numberOf(const Candidate&amp; c);
                    </method1>

                    <method1 name="get"
                             return="static T"
                             args="['const Candidate&amp;','size_t']"
                             vars="['c','i']"
                             qual="">
static T get(const Candidate&amp; c, size_t i);
                    </method1>

                </section>

            </class>
        </namespace>

        <class name="component"
               fullname="reco::component&lt;T, M, Tag&gt;"
               module="DataFormats.Candidate"
               project=""
               type="template struct"
               template="template&lt;typename T, typename M, typename Tag=DefaultComponentTag&gt;">


        </class>
    </namespace>

    <type name="const Candidate&amp;"/>
    <type name="reco::DefaultComponentTag"/>
    <type name="reco::component&lt;T, M, Tag&gt;"/>
    <type name="reco::componenthelper::MultipleComponents&lt;C, T, , &gt;"/>
    <type name="reco::componenthelper::MultipleComponentsTag"/>
    <type name="reco::componenthelper::SingleComponent&lt;C, T, &gt;"/>
    <type name="reco::componenthelper::SingleComponentTag"/>
    <type name="size_t"/>
</header>
