<?xml version="1.0"?>
<!--
==============================================================================
  XML File: CandidateFwd.xml
  Created:  Thu Jan 14 22:46:38 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/Candidate/interface/CandidateFwd.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/Candidate/interface/CandidateFwd.h">

    <include name="&quot;DataFormats/Common/interface/OwnVector.h&quot;"/>

    <namespace name="reco">
        <forward name="Candidate"/>
    </namespace>
    <include name="&quot;DataFormats/Common/interface/Ref.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/Ptr.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/PtrVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefProd.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBase.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBaseVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBaseProd.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/View.h&quot;"/>

    <namespace name="reco">
        <typedef name="CandidateCollection"
                 value="edm::OwnVector&lt;Candidate&gt;">
typedef edm::OwnVector&lt;Candidate&gt; CandidateCollection;
            <comment>
      collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidateView"
                 value="edm::View&lt;Candidate&gt;">
typedef edm::View&lt;Candidate&gt; CandidateView;
            <comment>
      view of a collection containing candidates
            </comment>
        </typedef>

        <typedef name="CandidatePtr"
                 value="edm::Ptr&lt;Candidate&gt;">
typedef edm::Ptr&lt;Candidate&gt; CandidatePtr;
            <comment>
      persistent reference to an object in a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidatePtrVector"
                 value="edm::PtrVector&lt;Candidate&gt;">
typedef edm::PtrVector&lt;Candidate&gt; CandidatePtrVector;
            <comment>
      persistent reference to an object in a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidateRef"
                 value="edm::Ref&lt;CandidateCollection&gt;">
typedef edm::Ref&lt;CandidateCollection&gt; CandidateRef;
            <comment>
      persistent reference to an object in a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidateBaseRef"
                 value="edm::RefToBase&lt;Candidate&gt;">
typedef edm::RefToBase&lt;Candidate&gt; CandidateBaseRef;
            <comment>
      persistent reference to an object in a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidateRefVector"
                 value="edm::RefVector&lt;CandidateCollection&gt;">
typedef edm::RefVector&lt;CandidateCollection&gt; CandidateRefVector;
            <comment>
      vector of references to objects in the same  collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidateBaseRefVector"
                 value="edm::RefToBaseVector&lt;Candidate&gt;">
typedef edm::RefToBaseVector&lt;Candidate&gt; CandidateBaseRefVector;
            <comment>
      vector of references to objects in the same collection of Candidate objects via base type
            </comment>
        </typedef>

        <typedef name="CandidateRefProd"
                 value="edm::RefProd&lt;CandidateCollection&gt;">
typedef edm::RefProd&lt;CandidateCollection&gt; CandidateRefProd;
            <comment>
      reference to a collection of Candidate objects
            </comment>
        </typedef>

        <typedef name="CandidateBaseRefProd"
                 value="edm::RefToBaseProd&lt;Candidate&gt;">
typedef edm::RefToBaseProd&lt;Candidate&gt; CandidateBaseRefProd;
            <comment>
      vector of references to objects in the same collection of Candidate objects via base type
            </comment>
        </typedef>

    </namespace>

</header>
