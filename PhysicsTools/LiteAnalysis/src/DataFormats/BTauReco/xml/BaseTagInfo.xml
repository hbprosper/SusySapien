<?xml version="1.0"?>
<!--
==============================================================================
  XML File: BaseTagInfo.xml
  Created:  Fri Jan 15 20:45:09 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/BTauReco/interface/BaseTagInfo.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/BTauReco/interface/BaseTagInfo.h">

    <include name="&quot;DataFormats/BTauReco/interface/RefMacros.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/RefToBase.h&quot;"/>
    <include name="&quot;DataFormats/JetReco/interface/Jet.h&quot;"/>
    <include name="&quot;DataFormats/TrackReco/interface/TrackFwd.h&quot;"/>
    <include name="&quot;DataFormats/BTauReco/interface/TaggingVariable.h&quot;"/>

    <namespace name="reco">

        <class name="BaseTagInfo"
               fullname="reco::BaseTagInfo"
               module="DataFormats.BTauReco"
               project=""
               type="regular">

            <section name="public">
                <constructor name="BaseTagInfo"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
BaseTagInfo(void);
                </constructor>

                <destructor name="~BaseTagInfo"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~BaseTagInfo(void);
                </destructor>

                <method1 name="clone"
                         return="virtual BaseTagInfo*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual BaseTagInfo* clone(void) const;
                    <comment>
      clone
                    </comment>
                </method1>

                <method2 name="jet"
                         return="virtual edm::RefToBase&lt;Jet&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual edm::RefToBase&lt;Jet&gt; jet(void) const;
                    <comment>
      returns a polymorphic reference to the tagged jet
                    </comment>
                </method2>

                <method1 name="tracks"
                         return="virtual TrackRefVector"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual TrackRefVector tracks(void) const;
                    <comment>
      returns a list of tracks associated to the jet
                    </comment>
                </method1>

                <method1 name="hasTracks"
                         return="virtual bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual bool hasTracks(void) const;
                    <comment>
      check if the algorithm is using the tracks or not
                    </comment>
                </method1>

                <method1 name="taggingVariables"
                         return="virtual TaggingVariableList"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual TaggingVariableList taggingVariables(void) const;
                    <comment>
      returns a description of the extended informations in a TaggingVariableList
                    </comment>
                </method1>

            </section>

        </class>
        <typedef name="BaseTagInfoCollection"
                 value="std::vector&lt;BaseTagInfo &gt;">
typedef std::vector&lt;BaseTagInfo &gt; BaseTagInfoCollection;
        </typedef>

        <typedef name="BaseTagInfoRef"
                 value="edm::Ref&lt;BaseTagInfoCollection&gt;">
typedef edm::Ref&lt;BaseTagInfoCollection&gt; BaseTagInfoRef;
        </typedef>

        <typedef name="BaseTagInfoRefProd"
                 value="edm::RefProd&lt;BaseTagInfoCollection&gt;">
typedef edm::RefProd&lt;BaseTagInfoCollection&gt; BaseTagInfoRefProd;
        </typedef>

        <typedef name="BaseTagInfoRefVector"
                 value="edm::RefVector&lt;BaseTagInfoCollection&gt;">
typedef edm::RefVector&lt;BaseTagInfoCollection&gt; BaseTagInfoRefVector;
        </typedef>

    </namespace>

    <type name="BaseTagInfo*"/>
    <type name="TaggingVariableList"/>
    <type name="TrackRefVector"/>
    <type name="bool"/>
    <type name="edm::RefToBase&lt;Jet&gt;"/>
    <type name="reco::BaseTagInfo"/>
    <type name="void"/>
</header>
