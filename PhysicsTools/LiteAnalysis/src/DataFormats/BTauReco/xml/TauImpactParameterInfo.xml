<?xml version="1.0"?>
<!--
==============================================================================
  XML File: TauImpactParameterInfo.xml
  Created:  Thu Jan 14 22:45:43 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/BTauReco/interface/TauImpactParameterInfo.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/BTauReco/interface/TauImpactParameterInfo.h">

    <include name="&quot;DataFormats/BTauReco/interface/RefMacros.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/AssociationMap.h&quot;"/>
    <include name="&quot;DataFormats/GeometryCommonDetAlgo/interface/Measurement1D.h&quot;"/>
    <include name="&quot;DataFormats/TrackReco/interface/TrackFwd.h&quot;"/>
    <include name="&quot;DataFormats/BTauReco/interface/IsolatedTauTagInfo.h&quot;"/>

    <namespace name="reco">

        <class name="TauImpactParameterTrackData"
               fullname="reco::TauImpactParameterTrackData"
               module="DataFormats.BTauReco"
               project=""
               type="regular struct">

            <section>
                <member>
Measurement1D transverseIp;
                </member>

                <member>
Measurement1D ip3D;
                </member>

            </section>

            <typemap name="ip3D"
                     value="reco::TauImpactParameterTrackData::ip3D"
                     type="member"/>
            <typemap name="transverseIp"
                     value="reco::TauImpactParameterTrackData::transverseIp"
                     type="member"/>

        </class>
        <typedef name="TrackTauImpactParameterAssociationCollection"
                 value="edm::AssociationMap&lt;
            edm::OneToValue&lt;
              reco::TrackCollection, 
              reco::TauImpactParameterTrackData
            &gt;
          &gt;">
typedef edm::AssociationMap&lt;
            edm::OneToValue&lt;
              reco::TrackCollection, 
              reco::TauImpactParameterTrackData
            &gt;
          &gt; TrackTauImpactParameterAssociationCollection;
        </typedef>

        <typedef name="TrackTauImpactParameterAssociation"
                 value="TrackTauImpactParameterAssociationCollection::value_type">
typedef TrackTauImpactParameterAssociationCollection::value_type TrackTauImpactParameterAssociation;
        </typedef>


        <class name="TauImpactParameterInfo"
               fullname="reco::TauImpactParameterInfo"
               module="DataFormats.BTauReco"
               project=""
               type="regular">

            <section name="public">
                <constructor name="TauImpactParameterInfo"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
TauImpactParameterInfo();
                </constructor>

                <destructor name="~TauImpactParameterInfo"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~TauImpactParameterInfo();
                </destructor>

                <method1 name="clone"
                         return="virtual TauImpactParameterInfo*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual TauImpactParameterInfo* clone() const;
                </method1>

                <method1 name="discriminator"
                         return="float"
                         args="['double','double','double','bool','bool']"
                         vars="['','','','','']"
                         qual="const">
float discriminator(double, double, double, bool, bool) const;
                </method1>

                <method1 name="discriminator"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float discriminator() const;
                </method1>

                <method1 name="getTrackData"
                         return="const TauImpactParameterTrackData*"
                         args="['const reco::TrackRef&amp;']"
                         vars="['']"
                         qual="const">
const TauImpactParameterTrackData* getTrackData(const reco::TrackRef&amp;) const;
                </method1>

                <method1 name="storeTrackData"
                         return="void"
                         args="['const reco::TrackRef&amp;','const TauImpactParameterTrackData&amp;']"
                         vars="['','']"
                         qual="">
void storeTrackData(const reco::TrackRef&amp;, const TauImpactParameterTrackData&amp;);
                </method1>

                <method1 name="getIsolatedTauTag"
                         return="const IsolatedTauTagInfoRef&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const IsolatedTauTagInfoRef&amp; getIsolatedTauTag() const;
                </method1>

                <method1 name="setIsolatedTauTag"
                         return="void"
                         args="['const IsolatedTauTagInfoRef&amp;']"
                         vars="['']"
                         qual="">
void setIsolatedTauTag(const IsolatedTauTagInfoRef&amp;);
                </method1>

            </section>

        </class>
        <typedef name="TauImpactParameterInfoCollection"
                 value="std::vector&lt;TauImpactParameterInfo &gt;">
typedef std::vector&lt;TauImpactParameterInfo &gt; TauImpactParameterInfoCollection;
        </typedef>

        <typedef name="TauImpactParameterInfoRef"
                 value="edm::Ref&lt;TauImpactParameterInfoCollection&gt;">
typedef edm::Ref&lt;TauImpactParameterInfoCollection&gt; TauImpactParameterInfoRef;
        </typedef>

        <typedef name="TauImpactParameterInfoRefProd"
                 value="edm::RefProd&lt;TauImpactParameterInfoCollection&gt;">
typedef edm::RefProd&lt;TauImpactParameterInfoCollection&gt; TauImpactParameterInfoRefProd;
        </typedef>

        <typedef name="TauImpactParameterInfoRefVector"
                 value="edm::RefVector&lt;TauImpactParameterInfoCollection&gt;">
typedef edm::RefVector&lt;TauImpactParameterInfoCollection&gt; TauImpactParameterInfoRefVector;
        </typedef>

    </namespace>

    <type name="Measurement1D"/>
    <type name="TauImpactParameterInfo*"/>
    <type name="bool"/>
    <type name="const IsolatedTauTagInfoRef&amp;"/>
    <type name="const TauImpactParameterTrackData&amp;"/>
    <type name="const TauImpactParameterTrackData*"/>
    <type name="const reco::TrackRef&amp;"/>
    <type name="double"/>
    <type name="float"/>
    <type name="reco::TauImpactParameterInfo"/>
    <type name="reco::TauImpactParameterTrackData"/>
    <type name="void"/>
</header>
