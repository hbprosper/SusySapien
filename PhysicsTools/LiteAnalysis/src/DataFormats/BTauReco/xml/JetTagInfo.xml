<?xml version="1.0"?>
<!--
==============================================================================
  XML File: JetTagInfo.xml
  Created:  Fri Jan 15 20:45:12 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/BTauReco/interface/JetTagInfo.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/BTauReco/interface/JetTagInfo.h">

    <include name="&quot;DataFormats/BTauReco/interface/RefMacros.h&quot;"/>
    <include name="&quot;DataFormats/BTauReco/interface/BaseTagInfo.h&quot;"/>

    <namespace name="reco">

        <class name="JetTagInfo"
               fullname="reco::JetTagInfo"
               module="DataFormats.BTauReco"
               project=""
               type="regular">
            <baseclass name="public BaseTagInfo"/>

            <section name="public">
                <constructor name="JetTagInfo"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
JetTagInfo(void);
                </constructor>

                <method2 name="JetTagInfo"
                         return="template&lt;typename T&gt;"
                         args="['const edm::Ref&lt;T&gt;&amp;']"
                         vars="['jetRef']"
                         qual="">
template&lt;typename T&gt;   JetTagInfo(const edm::Ref&lt;T&gt;&amp; jetRef);
                </method2>

                <constructor name="JetTagInfo"
                             return=""
                             args="['const edm::RefToBase&lt;Jet&gt;&amp;']"
                             vars="['jetRef']"
                             qual="">
JetTagInfo(const edm::RefToBase&lt;Jet&gt;&amp; jetRef);
                </constructor>

                <destructor name="~JetTagInfo"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~JetTagInfo(void);
                </destructor>

                <method1 name="clone"
                         return="virtual JetTagInfo*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual JetTagInfo* clone(void) const;
                </method1>

                <method2 name="jet"
                         return="virtual edm::RefToBase&lt;Jet&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual edm::RefToBase&lt;Jet&gt; jet(void) const;
                </method2>

                <method2 name="setJetRef"
                         return="template&lt;typename T&gt; void"
                         args="['const edm::Ref&lt;T&gt;&amp;']"
                         vars="['jetRef']"
                         qual="">
template&lt;typename T&gt;   void setJetRef(const edm::Ref&lt;T&gt;&amp; jetRef);
                </method2>

                <method2 name="setJetRef"
                         return="void"
                         args="['const edm::RefToBase&lt;Jet&gt;&amp;']"
                         vars="['jetRef']"
                         qual="">
void setJetRef(const edm::RefToBase&lt;Jet&gt;&amp; jetRef);
                </method2>

            </section>

        </class>
        <typedef name="JetTagInfoCollection"
                 value="std::vector&lt;JetTagInfo &gt;">
typedef std::vector&lt;JetTagInfo &gt; JetTagInfoCollection;
        </typedef>

        <typedef name="JetTagInfoRef"
                 value="edm::Ref&lt;JetTagInfoCollection&gt;">
typedef edm::Ref&lt;JetTagInfoCollection&gt; JetTagInfoRef;
        </typedef>

        <typedef name="JetTagInfoRefProd"
                 value="edm::RefProd&lt;JetTagInfoCollection&gt;">
typedef edm::RefProd&lt;JetTagInfoCollection&gt; JetTagInfoRefProd;
        </typedef>

        <typedef name="JetTagInfoRefVector"
                 value="edm::RefVector&lt;JetTagInfoCollection&gt;">
typedef edm::RefVector&lt;JetTagInfoCollection&gt; JetTagInfoRefVector;
        </typedef>

    </namespace>

    <type name="BaseTagInfo"/>
    <type name="JetTagInfo*"/>
    <type name="const edm::Ref&lt;T&gt;&amp;"/>
    <type name="const edm::RefToBase&lt;Jet&gt;&amp;"/>
    <type name="edm::RefToBase&lt;Jet&gt;"/>
    <type name="reco::JetTagInfo"/>
    <type name="template&lt;typename T&gt;"/>
    <type name="template&lt;typename T&gt; void"/>
    <type name="void"/>
</header>
