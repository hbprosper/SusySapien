<?xml version="1.0"?>
<!--
==============================================================================
  XML File: SoftLeptonTagInfo.xml
  Created:  Fri Jan 15 20:45:14 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/BTauReco/interface/SoftLeptonTagInfo.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/BTauReco/interface/SoftLeptonTagInfo.h">

    <include name="&quot;DataFormats/BTauReco/interface/RefMacros.h&quot;"/>
    <include name="&quot;DataFormats/TrackReco/interface/TrackFwd.h&quot;"/>
    <include name="&quot;DataFormats/BTauReco/interface/JetTagInfo.h&quot;"/>
    <include name="&quot;DataFormats/BTauReco/interface/TaggingVariable.h&quot;"/>

    <namespace name="reco">

        <class name="SoftLeptonProperties"
               fullname="reco::SoftLeptonProperties"
               module="DataFormats.BTauReco"
               project=""
               type="regular">

            <section name="public">
                <member>
float quality;
                </member>

                <member>
float sip2d;
                </member>

                <member>
float sip3d;
                </member>

                <member>
float ptRel;
                </member>

                <member>
float p0Par;
                </member>

                <member>
float etaRel;
                </member>

                <member>
float deltaR;
                </member>

                <member>
float ratio;
                </member>

                <member>
float ratioRel;
                </member>

            </section>

            <typemap name="deltaR"
                     value="reco::SoftLeptonProperties::deltaR"
                     type="member"/>
            <typemap name="etaRel"
                     value="reco::SoftLeptonProperties::etaRel"
                     type="member"/>
            <typemap name="p0Par"
                     value="reco::SoftLeptonProperties::p0Par"
                     type="member"/>
            <typemap name="ptRel"
                     value="reco::SoftLeptonProperties::ptRel"
                     type="member"/>
            <typemap name="quality"
                     value="reco::SoftLeptonProperties::quality"
                     type="member"/>
            <typemap name="ratio"
                     value="reco::SoftLeptonProperties::ratio"
                     type="member"/>
            <typemap name="ratioRel"
                     value="reco::SoftLeptonProperties::ratioRel"
                     type="member"/>
            <typemap name="sip2d"
                     value="reco::SoftLeptonProperties::sip2d"
                     type="member"/>
            <typemap name="sip3d"
                     value="reco::SoftLeptonProperties::sip3d"
                     type="member"/>

        </class>

        <class name="SoftLeptonTagInfo"
               fullname="reco::SoftLeptonTagInfo"
               module="DataFormats.BTauReco"
               project=""
               type="regular">
            <baseclass name="public JetTagInfo"/>

            <section name="public">
                <typedef name="LeptonMap"
                         value="std::vector&lt;std::pair&lt;edm::RefToBase&lt;reco::Track&gt;, SoftLeptonProperties &gt; &gt;">
typedef std::vector&lt;std::pair&lt;edm::RefToBase&lt;reco::Track&gt;, SoftLeptonProperties &gt; &gt; LeptonMap;
                </typedef>

                <constructor name="SoftLeptonTagInfo"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
SoftLeptonTagInfo(void);
                </constructor>

                <destructor name="~SoftLeptonTagInfo"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~SoftLeptonTagInfo(void);
                </destructor>

                <method1 name="clone"
                         return="virtual SoftLeptonTagInfo*"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual SoftLeptonTagInfo* clone(void) const;
                </method1>

                <method1 name="leptons"
                         return="unsigned int"
                         args="['void']"
                         vars="['']"
                         qual="const">
unsigned int leptons(void) const;
                </method1>

                <method2 name="lepton"
                         return="const edm::RefToBase&lt;reco::Track&gt;&amp;"
                         args="['size_t']"
                         vars="['i']"
                         qual="const">
const edm::RefToBase&lt;reco::Track&gt;&amp; lepton(size_t i) const;
                </method2>

                <method1 name="properties"
                         return="const SoftLeptonProperties&amp;"
                         args="['size_t']"
                         vars="['i']"
                         qual="const">
const SoftLeptonProperties&amp; properties(size_t i) const;
                </method1>

                <method2 name="insert"
                         return="void"
                         args="['const edm::RefToBase&lt;reco::Track&gt;&amp;','const SoftLeptonProperties&amp;']"
                         vars="['lepton','properties']"
                         qual="">
void insert(const edm::RefToBase&lt;reco::Track&gt;&amp; lepton, const SoftLeptonProperties&amp; properties);
                </method2>

                <method1 name="taggingVariables"
                         return="virtual TaggingVariableList"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual TaggingVariableList taggingVariables(void) const;
                    <comment>
        returns a description of the extended informations in a TaggingVariableList
                    </comment>
                </method1>

            </section>

            <typemap name="LeptonMap"
                     value="std::vector&lt;std::pair&lt;edm::RefToBase&lt;reco::Track&gt;, SoftLeptonProperties &gt; &gt;"
                     type="typedef"/>

        </class>
        <typedef name="SoftLeptonTagInfoCollection"
                 value="std::vector&lt;SoftLeptonTagInfo &gt;">
typedef std::vector&lt;SoftLeptonTagInfo &gt; SoftLeptonTagInfoCollection;
        </typedef>

        <typedef name="SoftLeptonTagInfoRef"
                 value="edm::Ref&lt;SoftLeptonTagInfoCollection&gt;">
typedef edm::Ref&lt;SoftLeptonTagInfoCollection&gt; SoftLeptonTagInfoRef;
        </typedef>

        <typedef name="SoftLeptonTagInfoRefProd"
                 value="edm::RefProd&lt;SoftLeptonTagInfoCollection&gt;">
typedef edm::RefProd&lt;SoftLeptonTagInfoCollection&gt; SoftLeptonTagInfoRefProd;
        </typedef>

        <typedef name="SoftLeptonTagInfoRefVector"
                 value="edm::RefVector&lt;SoftLeptonTagInfoCollection&gt;">
typedef edm::RefVector&lt;SoftLeptonTagInfoCollection&gt; SoftLeptonTagInfoRefVector;
        </typedef>

    </namespace>

    <type name="JetTagInfo"/>
    <type name="SoftLeptonTagInfo*"/>
    <type name="TaggingVariableList"/>
    <type name="const SoftLeptonProperties&amp;"/>
    <type name="const edm::RefToBase&lt;reco::Track&gt;&amp;"/>
    <type name="float"/>
    <type name="reco::SoftLeptonProperties"/>
    <type name="reco::SoftLeptonTagInfo"/>
    <type name="size_t"/>
    <type name="unsigned int"/>
    <type name="void"/>
</header>
