<?xml version="1.0"?>
<!--
==============================================================================
  XML File: FlavorHistory.xml
  Created:  Fri Jan 15 20:47:45 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/HepMCCandidate/interface/FlavorHistory.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/HepMCCandidate/interface/FlavorHistory.h">

    <include name="&quot;DataFormats/Common/interface/Ptr.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/OwnVector.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/Handle.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/View.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/Candidate.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/CandidateFwd.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/ShallowClonePtrCandidate.h&quot;"/>
    <include name="&lt;fstream&gt;"/>

    <namespace name="reco">

        <class name="FlavorHistory"
               fullname="reco::FlavorHistory"
               module="DataFormats.HepMCCandidate"
               project=""
               type="regular">

            <section name="public">
                <enum name="FLAVOR_T">
enum FLAVOR_T {
 FLAVOR_NULL=0, 
    FLAVOR_GS, 
    FLAVOR_EXC, 
    FLAVOR_ME, 
    FLAVOR_DECAY, 
    N_FLAVOR_TYPES };
                    <field name="FLAVOR_NULL" value="0"/>
                    <field name="FLAVOR_GS" value=""/>
                    <field name="FLAVOR_EXC" value=""/>
                    <field name="FLAVOR_ME" value=""/>
                    <field name="FLAVOR_DECAY" value=""/>
                    <field name="N_FLAVOR_TYPES" value=""/>
                </enum>

                <constant name="gluonId"
                          type="static const int"
                          value="21"/>
                <constant name="tQuarkId"
                          type="static const int"
                          value="6"/>
                <constant name="bQuarkId"
                          type="static const int"
                          value="5"/>
                <constant name="cQuarkId"
                          type="static const int"
                          value="4"/>
                <constructor name="FlavorHistory"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
FlavorHistory();
                </constructor>

                <constructor name="FlavorHistory"
                             return=""
                             args="['FLAVOR_T','reco::CandidatePtr const&amp;','reco::CandidatePtr const&amp;','reco::CandidatePtr const&amp;','reco::ShallowClonePtrCandidate const&amp;','reco::ShallowClonePtrCandidate const&amp;']"
                             vars="['flavorSource','parton','progenitor','sister','matchedJet','sisterJet']"
                             qual="">
FlavorHistory(FLAVOR_T flavorSource, reco::CandidatePtr const&amp; parton, reco::CandidatePtr const&amp; progenitor, reco::CandidatePtr const&amp; sister, reco::ShallowClonePtrCandidate const&amp; matchedJet, reco::ShallowClonePtrCandidate const&amp; sisterJet);
                </constructor>

                <constructor name="FlavorHistory"
                             return=""
                             args="['FLAVOR_T','edm::Handle&lt;edm::View&lt;reco::Candidate&gt; &gt;','int','int','int','reco::ShallowClonePtrCandidate const&amp;','reco::ShallowClonePtrCandidate const&amp;']"
                             vars="['flavorSource','h_partons','iparton','iprogenitor','isister','matchedJet','sisterJet']"
                             qual="">
FlavorHistory(FLAVOR_T flavorSource, edm::Handle&lt;edm::View&lt;reco::Candidate&gt; &gt; h_partons, int iparton, int iprogenitor, int isister, reco::ShallowClonePtrCandidate const&amp; matchedJet, reco::ShallowClonePtrCandidate const&amp; sisterJet);
                </constructor>

                <constructor name="FlavorHistory"
                             return=""
                             args="['FLAVOR_T','edm::Handle&lt;reco::CandidateCollection &gt;','int','int','int','reco::ShallowClonePtrCandidate const&amp;','reco::ShallowClonePtrCandidate const&amp;']"
                             vars="['flavorSource','h_partons','iparton','iprogenitor','isister','matchedJet','sisterJet']"
                             qual="">
FlavorHistory(FLAVOR_T flavorSource, edm::Handle&lt;reco::CandidateCollection &gt; h_partons, int iparton, int iprogenitor, int isister, reco::ShallowClonePtrCandidate const&amp; matchedJet, reco::ShallowClonePtrCandidate const&amp; sisterJet);
                </constructor>

                <destructor name="~FlavorHistory"
                            return=""
                            args="['void']"
                            vars="['']"
                            qual="">
~FlavorHistory();
                </destructor>

                <method1 name="flavorSource"
                         return="FLAVOR_T"
                         args="['void']"
                         vars="['']"
                         qual="const">
FLAVOR_T flavorSource () const;
                    <comment>
     Accessors
                    </comment>
                </method1>

                <method1 name="hasParton"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasParton () const;
                </method1>

                <method1 name="hasSister"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasSister () const;
                </method1>

                <method1 name="hasProgenitor"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasProgenitor () const;
                </method1>

                <method1 name="hasMatchedJet"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasMatchedJet () const;
                </method1>

                <method1 name="hasSisterJet"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool hasSisterJet () const;
                </method1>

                <method1 name="parton"
                         return="const reco::CandidatePtr&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::CandidatePtr&amp; parton () const;
                </method1>

                <method1 name="sister"
                         return="const reco::CandidatePtr&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::CandidatePtr&amp; sister () const;
                </method1>

                <method1 name="progenitor"
                         return="const reco::CandidatePtr&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::CandidatePtr&amp; progenitor() const;
                </method1>

                <method1 name="matchedJet"
                         return="const reco::ShallowClonePtrCandidate&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::ShallowClonePtrCandidate&amp;                               matchedJet() const;
                </method1>

                <method1 name="sisterJet"
                         return="const reco::ShallowClonePtrCandidate&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::ShallowClonePtrCandidate&amp;                               sisterJet() const;
                </method1>

                <operator name="operator&lt;"
                          return="bool"
                          args="['FlavorHistory const&amp;']"
                          vars="['right']"
                          qual="const">
bool operator&lt;(FlavorHistory const&amp; right) const;
                    <comment>
     Operators for sorting and keys
                    </comment>
                </operator>

                <operator name="operator&gt;"
                          return="bool"
                          args="['FlavorHistory const&amp;']"
                          vars="['right']"
                          qual="const">
bool operator&gt;(FlavorHistory const&amp; right) const;
                </operator>

                <operator name="operator=="
                          return="bool"
                          args="['FlavorHistory const&amp;']"
                          vars="['right']"
                          qual="const">
bool operator==(FlavorHistory const&amp; right) const;
                </operator>

            </section>

            <typemap name="FLAVOR_DECAY"
                     value="reco::FlavorHistory::FLAVOR_DECAY"
                     type="enum"/>
            <typemap name="FLAVOR_EXC"
                     value="reco::FlavorHistory::FLAVOR_EXC"
                     type="enum"/>
            <typemap name="FLAVOR_GS"
                     value="reco::FlavorHistory::FLAVOR_GS"
                     type="enum"/>
            <typemap name="FLAVOR_ME"
                     value="reco::FlavorHistory::FLAVOR_ME"
                     type="enum"/>
            <typemap name="FLAVOR_NULL"
                     value="reco::FlavorHistory::FLAVOR_NULL"
                     type="enum"/>
            <typemap name="FLAVOR_T"
                     value="reco::FlavorHistory::FLAVOR_T"
                     type="enum"/>
            <typemap name="N_FLAVOR_TYPES"
                     value="reco::FlavorHistory::N_FLAVOR_TYPES"
                     type="enum"/>

        </class>
    </namespace>
    <operator name="operator&lt;&lt;"
              return="std::ostream&amp;"
              args="['std::ostream&amp;','reco::FlavorHistory const&amp;']"
              vars="['out','cand']"
              qual="">
std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, reco::FlavorHistory const&amp; cand);
    </operator>


    <type name="FLAVOR_T"/>
    <type name="FlavorHistory const&amp;"/>
    <type name="bool"/>
    <type name="const reco::CandidatePtr&amp;"/>
    <type name="const reco::ShallowClonePtrCandidate&amp;"/>
    <type name="edm::Handle&lt;edm::View&lt;reco::Candidate&gt; &gt;"/>
    <type name="edm::Handle&lt;reco::CandidateCollection &gt;"/>
    <type name="enum FLAVOR_T"/>
    <type name="int"/>
    <type name="reco::CandidatePtr const&amp;"/>
    <type name="reco::FlavorHistory"/>
    <type name="reco::ShallowClonePtrCandidate const&amp;"/>
    <type name="void"/>
</header>
