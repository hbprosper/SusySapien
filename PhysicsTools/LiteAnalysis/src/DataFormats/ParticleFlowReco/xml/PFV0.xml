<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PFV0.xml
  Created:  Fri Jan 15 20:47:06 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/ParticleFlowReco/interface/PFV0.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/ParticleFlowReco/interface/PFV0.h">

    <include name="&quot;DataFormats/TrackReco/interface/Track.h&quot;"/>
    <include name="&quot;DataFormats/ParticleFlowReco/interface/PFRecTrack.h&quot;"/>
    <include name="&quot;DataFormats/ParticleFlowReco/interface/PFRecTrackFwd.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/VertexCompositeCandidate.h&quot;"/>
    <include name="&quot;DataFormats/Candidate/interface/VertexCompositeCandidateFwd.h&quot;"/>
    <include name="&lt;iostream&gt;"/>
    <include name="&lt;vector&gt;"/>
    <forward name="Conversion"/>

    <namespace name="reco">

        <class name="PFV0"
               fullname="reco::PFV0"
               module="DataFormats.ParticleFlowReco"
               project=""
               type="regular">

            <section name="public">
                <constructor name="PFV0"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PFV0();
                    <comment>
     Default constructor
                    </comment>
                </constructor>

                <constructor name="PFV0"
                             return=""
                             args="['const reco::VertexCompositeCandidateRef','const std::vector&lt;reco::PFRecTrackRef&gt;&amp;','const std::vector&lt;reco::TrackRef&gt;&amp;']"
                             vars="['V0','pftr','tr']"
                             qual="">
PFV0(const reco::VertexCompositeCandidateRef V0, const std::vector&lt;reco::PFRecTrackRef&gt;&amp; pftr, const std::vector&lt;reco::TrackRef&gt;&amp; tr);
                </constructor>

                <destructor name="~PFV0"
                            return=""
                            args="['void']"
                            vars="['']"
                            qual="">
~PFV0();
                    <comment>
        destructor
                    </comment>
                </destructor>

                <method1 name="originalV0"
                         return="const reco::VertexCompositeCandidateRef&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::VertexCompositeCandidateRef&amp; originalV0() const;
                    <comment>
        Ref to the original V0
                    </comment>
                </method1>

                <method2 name="pfTracks"
                         return="std::vector&lt;reco::PFRecTrackRef&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;reco::PFRecTrackRef&gt; pfTracks() const;
                    <comment>
        Vector of a Refs of PFRecTrack
                    </comment>
                </method2>

                <method2 name="Tracks"
                         return="std::vector&lt;reco::TrackRef&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;reco::TrackRef&gt; Tracks() const;
                    <comment>
        Vector of a Refs of Track
                    </comment>
                </method2>

            </section>

        </class>
    </namespace>

    <type name="const reco::VertexCompositeCandidateRef"/>
    <type name="const reco::VertexCompositeCandidateRef&amp;"/>
    <type name="const std::vector&lt;reco::PFRecTrackRef&gt;&amp;"/>
    <type name="const std::vector&lt;reco::TrackRef&gt;&amp;"/>
    <type name="reco::PFV0"/>
    <type name="std::vector&lt;reco::PFRecTrackRef&gt;"/>
    <type name="std::vector&lt;reco::TrackRef&gt;"/>
    <type name="void"/>
</header>
