<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PFConversion.xml
  Created:  Fri Jan 15 20:47:01 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/ParticleFlowReco/interface/PFConversion.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/ParticleFlowReco/interface/PFConversion.h">

    <include name="&quot;DataFormats/EgammaCandidates/interface/ConversionFwd.h&quot;"/>
    <include name="&quot;DataFormats/EgammaCandidates/interface/Conversion.h&quot;"/>
    <include name="&quot;DataFormats/ParticleFlowReco/interface/PFRecTrackFwd.h&quot;"/>
    <include name="&lt;iostream&gt;"/>
    <include name="&lt;vector&gt;"/>
    <forward name="Conversion"/>

    <namespace name="reco">

        <class name="PFConversion"
               fullname="reco::PFConversion"
               module="DataFormats.ParticleFlowReco"
               project=""
               type="regular">
            <comment>
     \class PFConversion
     \author  Nancy Marinelli - Univ. of Notre Dame
     \date
            </comment>

            <section name="public">
                <constructor name="PFConversion"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PFConversion();
                    <comment>
    Default constructor
                    </comment>
                </constructor>

                <constructor name="PFConversion"
                             return=""
                             args="['reco::ConversionRef']"
                             vars="['c']"
                             qual="">
PFConversion(reco::ConversionRef c);
                    <comment>
          PFConversion(const reco::ConversionRef c);
       PFConversion(const reco::ConversionRef c, const std::vector&lt;reco::PFRecTrackRef&gt;&amp;  tr   );
                    </comment>
                </constructor>

                <constructor name="PFConversion"
                             return=""
                             args="['const reco::ConversionRef&amp;','const std::vector&lt;reco::PFRecTrackRef&gt;&amp;']"
                             vars="['c','tr']"
                             qual="">
PFConversion(const reco::ConversionRef&amp; c, const std::vector&lt;reco::PFRecTrackRef&gt;&amp; tr);
                </constructor>

                <destructor name="~PFConversion"
                            return=""
                            args="['void']"
                            vars="['']"
                            qual="">
~PFConversion();
                    <comment>
        destructor
                    </comment>
                </destructor>

                <method1 name="originalConversion"
                         return="const reco::ConversionRef&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::ConversionRef&amp; originalConversion() const;
                </method1>

                <method2 name="pfTracks"
                         return="std::vector&lt;reco::PFRecTrackRef&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
std::vector&lt;reco::PFRecTrackRef&gt; pfTracks() const;
                </method2>

            </section>

        </class>
    </namespace>

    <type name="const reco::ConversionRef&amp;"/>
    <type name="const std::vector&lt;reco::PFRecTrackRef&gt;&amp;"/>
    <type name="reco::ConversionRef"/>
    <type name="reco::PFConversion"/>
    <type name="std::vector&lt;reco::PFRecTrackRef&gt;"/>
    <type name="void"/>
</header>
