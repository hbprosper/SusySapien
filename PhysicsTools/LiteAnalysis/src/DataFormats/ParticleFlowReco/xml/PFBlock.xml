<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PFBlock.xml
  Created:  Thu Jan 14 22:47:53 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/ParticleFlowReco/interface/PFBlock.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/ParticleFlowReco/interface/PFBlock.h">

    <include name="&lt;map&gt;"/>
    <include name="&lt;iostream&gt;"/>
    <include name="&quot;DataFormats/ParticleFlowReco/interface/PFBlockElement.h&quot;"/>
    <include name="&quot;DataFormats/Common/interface/OwnVector.h&quot;"/>

    <namespace name="reco">

        <class name="PFBlock"
               fullname="reco::PFBlock"
               module="DataFormats.ParticleFlowReco"
               project=""
               type="regular printable">
            <comment>
    \author Colin Bernet
    \date January 2006

    A PFBlock is:
    - a set of topologically connected elements.
    - a set of links between these elements
            </comment>

            <section name="public">
                <typedef name="IE"
                         value="edm::OwnVector&lt;reco::PFBlockElement &gt;::const_iterator">
typedef edm::OwnVector&lt;reco::PFBlockElement &gt;::const_iterator IE;
                </typedef>

                <typedef name="LinkData"
                         value="std::vector&lt;std::vector&lt;std::pair&lt;float, float&gt; &gt; &gt;">
typedef std::vector&lt;std::vector&lt;std::pair&lt;float, float&gt; &gt; &gt; LinkData;
                    <comment>
       typedef std::vector&lt; std::vector&lt;double&gt; &gt; LinkData;
                    </comment>
                </typedef>

                <enum name="LinkTest">
enum LinkTest {

      LINKTEST_CHI2=0, 
      LINKTEST_RECHIT, 
      LINKTEST_TANGENT, 
      LINKTEST_NLINKTEST, 
      LINKTEST_ALL
    };
                    <field name="LINKTEST_CHI2" value="0"/>
                    <field name="LINKTEST_RECHIT" value=""/>
                    <field name="LINKTEST_TANGENT" value=""/>
                    <field name="LINKTEST_NLINKTEST" value=""/>
                    <field name="LINKTEST_ALL" value=""/>
                </enum>

                <constructor name="PFBlock"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PFBlock();
                </constructor>

                <method1 name="addElement"
                         return="void"
                         args="['reco::PFBlockElement*']"
                         vars="['element']"
                         qual="">
void addElement(reco::PFBlockElement* element);
                    <comment>
        the block will keep a copy.
                    </comment>
                </method1>

                <method1 name="bookLinkData"
                         return="void"
                         args="['void']"
                         vars="['']"
                         qual="">
void bookLinkData();
                </method1>

                <method1 name="matrix2vector"
                         return="bool"
                         args="['unsigned','unsigned','unsigned&amp;']"
                         vars="['i','j','index']"
                         qual="const">
bool matrix2vector(unsigned i, unsigned j, unsigned&amp; index) const;
                    <comment>
        the 1D vector which is the most compact way to store the matrix
                    </comment>
                </method1>

                <method1 name="setLink"
                         return="void"
                         args="['unsigned','unsigned','double','double','LinkData&amp;','LinkTest=LINKTEST_CHI2']"
                         vars="['i1','i2','chi2','dist','linkData','test']"
                         qual="const">
void setLink(unsigned i1, unsigned i2, double chi2, double dist, LinkData&amp; linkData, LinkTest test=LINKTEST_CHI2) const;
                    <comment>
        As indicated by the 'const' statement, 'this' is not modified.
                    </comment>
                </method1>

                <method2 name="associatedElements"
                         return="void"
                         args="['unsigned','const LinkData&amp;','std::multimap&lt;double, unsigned&gt;&amp;','reco::PFBlockElement::Type=PFBlockElement::NONE','LinkTest=LINKTEST_CHI2']"
                         vars="['i','linkData','sortedAssociates','type','test']"
                         qual="const">
void associatedElements(unsigned i, const LinkData&amp; linkData, std::multimap&lt;double, unsigned&gt;&amp; sortedAssociates, reco::PFBlockElement::Type type=PFBlockElement::NONE, LinkTest test=LINKTEST_CHI2) const;
                    <comment>
        be considered: chi2 test, rechit test, tangent test etc..
                    </comment>
                </method2>

                <method1 name="chi2"
                         return="double"
                         args="['unsigned','unsigned','const LinkData&amp;','LinkTest=LINKTEST_CHI2']"
                         vars="['ie1','ie2','linkData','test']"
                         qual="const">
double chi2(unsigned ie1, unsigned ie2, const LinkData&amp; linkData, LinkTest test=LINKTEST_CHI2) const;
                    <comment>
        \return chi2 of link
                    </comment>
                </method1>

                <method1 name="dist"
                         return="double"
                         args="['unsigned','unsigned','const LinkData&amp;','LinkTest=LINKTEST_CHI2']"
                         vars="['ie1','ie2','linkData','test']"
                         qual="const">
double dist(unsigned ie1, unsigned ie2, const LinkData&amp; linkData, LinkTest test=LINKTEST_CHI2) const;
                    <comment>
        \return distance of link
                    </comment>
                </method1>

                <method2 name="elements"
                         return="const edm::OwnVector&lt;reco::PFBlockElement &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::OwnVector&lt;reco::PFBlockElement &gt;&amp; elements() const;
                    <comment>
        \return elements
                    </comment>
                </method2>

                <method1 name="linkData"
                         return="const LinkData&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const LinkData&amp; linkData() const;
                    <comment>
        \return link data
                    </comment>
                </method1>

                <method1 name="linkData"
                         return="LinkData&amp;"
                         args="['void']"
                         vars="['']"
                         qual="">
LinkData&amp; linkData();
                    <comment>
        \return link data
                    </comment>
                </method1>

                <operator name="operator&lt;&lt;"
                          return="friend std::ostream&amp;"
                          args="['std::ostream&amp;','const PFBlock&amp;']"
                          vars="['out','co']"
                          qual="">
friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const PFBlock&amp; co);
                </operator>

            </section>

            <typemap name="IE"
                     value="edm::OwnVector&lt;reco::PFBlockElement &gt;::const_iterator"
                     type="typedef"/>
            <typemap name="LINKTEST_ALL"
                     value="reco::PFBlock::LINKTEST_ALL"
                     type="enum"/>
            <typemap name="LINKTEST_CHI2"
                     value="reco::PFBlock::LINKTEST_CHI2"
                     type="enum"/>
            <typemap name="LINKTEST_NLINKTEST"
                     value="reco::PFBlock::LINKTEST_NLINKTEST"
                     type="enum"/>
            <typemap name="LINKTEST_RECHIT"
                     value="reco::PFBlock::LINKTEST_RECHIT"
                     type="enum"/>
            <typemap name="LINKTEST_TANGENT"
                     value="reco::PFBlock::LINKTEST_TANGENT"
                     type="enum"/>
            <typemap name="LinkData"
                     value="std::vector&lt;std::vector&lt;std::pair&lt;float, float&gt; &gt; &gt;"
                     type="typedef"/>
            <typemap name="LinkTest"
                     value="reco::PFBlock::LinkTest"
                     type="enum"/>

        </class>
    </namespace>

    <type name="LinkData&amp;"/>
    <type name="LinkTest"/>
    <type name="bool"/>
    <type name="const LinkData&amp;"/>
    <type name="const PFBlock&amp;"/>
    <type name="const edm::OwnVector&lt;reco::PFBlockElement &gt;&amp;"/>
    <type name="double"/>
    <type name="enum LinkTest"/>
    <type name="reco::PFBlock"/>
    <type name="reco::PFBlockElement*"/>
    <type name="reco::PFBlockElement::Type"/>
    <type name="std::multimap&lt;double, unsigned&gt;&amp;"/>
    <type name="std::ostream&amp;"/>
    <type name="unsigned"/>
    <type name="unsigned&amp;"/>
    <type name="void"/>
</header>
