<?xml version="1.0"?>
<!--
==============================================================================
  XML File: PFCluster.xml
  Created:  Thu Jan 14 22:47:57 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/ParticleFlowReco/interface/PFCluster.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/ParticleFlowReco/interface/PFCluster.h">

    <include name="&quot;DataFormats/CaloRecHit/interface/CaloCluster.h&quot;"/>
    <include name="&quot;Math/GenVector/PositionVector3D.h&quot;"/>
    <include name="&quot;DataFormats/Math/interface/Point3D.h&quot;"/>
    <include name="&quot;Rtypes.h&quot;"/>
    <include name="&quot;DataFormats/ParticleFlowReco/interface/PFRecHitFraction.h&quot;"/>
    <include name="&quot;DataFormats/ParticleFlowReco/interface/PFLayer.h&quot;"/>
    <include name="&lt;iostream&gt;"/>
    <include name="&lt;vector&gt;"/>
    <forward name="PFClusterAlgo"/>

    <namespace name="reco">

        <class name="PFCluster"
               fullname="reco::PFCluster"
               module="DataFormats.ParticleFlowReco"
               project=""
               type="regular printable">
            <baseclass name="public CaloCluster"/>
            <comment>
     \class PFCluster
     \brief Particle flow cluster, see clustering algorithm in PFClusterAlgo

     A particle flow cluster is defined by its energy and position, which are
     calculated from a vector of PFRecHitFraction. This calculation is
     performed in PFClusterAlgo.

     \todo Clean up this class to a common base (talk to Paolo Meridiani)
     the extra internal stuff (like the vector of PFRecHitFraction's)
     could be moved to a PFClusterExtra.

     \todo Now that PFRecHitFraction's hold a reference to the PFRecHit's,
     put back the calculation of energy and position to PFCluster.


     \todo Add an operator+=

     \author Colin Bernet
     \date   July 2006
            </comment>

            <section name="public">
                <typedef name="REPPoint"
                         value="ROOT::Math::PositionVector3D&lt;ROOT::Math::CylindricalEta3D&lt;Double32_t&gt; &gt;">
typedef ROOT::Math::PositionVector3D&lt;ROOT::Math::CylindricalEta3D&lt;Double32_t&gt; &gt; REPPoint;
                </typedef>

                <constructor name="PFCluster"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
PFCluster();
                    <comment>
        default constructor
                    </comment>
                </constructor>

                <constructor name="PFCluster"
                             return=""
                             args="['PFLayer::Layer','double','double','double','double']"
                             vars="['layer','energy','x','y','z']"
                             qual="">
PFCluster(PFLayer::Layer layer, double energy, double x, double y, double z);
                    <comment>
        constructor
                    </comment>
                </constructor>

                <method1 name="reset"
                         return="void"
                         args="['void']"
                         vars="['']"
                         qual="">
void reset();
                    <comment>
        resets clusters parameters
                    </comment>
                </method1>

                <method1 name="addRecHitFraction"
                         return="void"
                         args="['const reco::PFRecHitFraction&amp;']"
                         vars="['frac']"
                         qual="">
void addRecHitFraction(const reco::PFRecHitFraction&amp; frac);
                    <comment>
        add a given fraction of the rechit
                    </comment>
                </method1>

                <method2 name="recHitFractions"
                         return="const std::vector&lt;reco::PFRecHitFraction &gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const std::vector&lt;reco::PFRecHitFraction &gt;&amp; recHitFractions() const;
                    <comment>
        vector of rechit fractions
                    </comment>
                </method2>

                <method1 name="setLayer"
                         return="void"
                         args="['PFLayer::Layer']"
                         vars="['layer']"
                         qual="">
void setLayer(PFLayer::Layer layer);
                    <comment>
        set layer
                    </comment>
                </method1>

                <method1 name="layer"
                         return="PFLayer::Layer"
                         args="['void']"
                         vars="['']"
                         qual="const">
PFLayer::Layer layer() const;
                    <comment>
        cluster layer, see PFLayer.h in this directory
                    </comment>
                </method1>

                <method1 name="energy"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double energy() const;
                    <comment>
        cluster energy
                    </comment>
                </method1>

                <method1 name="positionREP"
                         return="const REPPoint&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const REPPoint&amp; positionREP() const;
                    <comment>
        cluster position: rho, eta, phi
                    </comment>
                </method1>

                <method1 name="calculatePositionREP"
                         return="void"
                         args="['void']"
                         vars="['']"
                         qual="">
void calculatePositionREP();
                    <comment>
        calculates posrep_ once and for all
                    </comment>
                </method1>

                <method1 name="getDepthCorrection"
                         return="static double"
                         args="['double','bool=false','bool=false']"
                         vars="['energy','isBelowPS','isHadron']"
                         qual="">
static double getDepthCorrection(double energy, bool isBelowPS=false, bool isHadron=false);
                    <comment>
        \todo move to PFClusterTools
                    </comment>
                </method1>

                <method1 name="setColor"
                         return="void"
                         args="['int']"
                         vars="['color']"
                         qual="">
void setColor(int color);
                    <comment>
        set cluster color (for the PFRootEventManager display)
                    </comment>
                </method1>

                <method1 name="color"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int color() const;
                    <comment>
        \return color
                    </comment>
                </method1>

                <operator name="operator="
                          return="PFCluster&amp;"
                          args="['const PFCluster&amp;']"
                          vars="['']"
                          qual="">
PFCluster&amp; operator=(const PFCluster&amp;);
                </operator>

                <operator name="operator&lt;&lt;"
                          return="friend std::ostream&amp;"
                          args="['std::ostream&amp;','const PFCluster&amp;']"
                          vars="['out','cluster']"
                          qual="">
friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const PFCluster&amp; cluster);
                </operator>

                <member>
static unsigned instanceCounter_;
                    <comment>
        counter
                    </comment>
                </member>

                <method1 name="setDepthCorParameters"
                         return="static void"
                         args="['int','double','double','double','double']"
                         vars="['mode','a','b','ap','bp']"
                         qual="">
static void setDepthCorParameters(int mode, double a, double b, double ap, double bp);
                    <comment>
        \todo move to PFClusterTools
                    </comment>
                </method1>

            </section>

            <typemap name="REPPoint"
                     value="ROOT::Math::PositionVector3D&lt;ROOT::Math::CylindricalEta3D&lt;Double32_t&gt; &gt;"
                     type="typedef"/>
            <typemap name="instanceCounter_"
                     value="reco::PFCluster::instanceCounter_"
                     type="member"/>

        </class>
    </namespace>

    <type name="CaloCluster"/>
    <type name="PFCluster&amp;"/>
    <type name="PFLayer::Layer"/>
    <type name="bool"/>
    <type name="const PFCluster&amp;"/>
    <type name="const REPPoint&amp;"/>
    <type name="const reco::PFRecHitFraction&amp;"/>
    <type name="const std::vector&lt;reco::PFRecHitFraction &gt;&amp;"/>
    <type name="double"/>
    <type name="int"/>
    <type name="reco::PFCluster"/>
    <type name="std::ostream&amp;"/>
    <type name="unsigned"/>
    <type name="void"/>
</header>
