<?xml version="1.0"?>
<!--
==============================================================================
  XML File: L1GctInternEtSum.xml
  Created:  Fri Jan 15 20:46:35 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/L1GlobalCaloTrigger/interface/L1GctInternEtSum.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/L1GlobalCaloTrigger/interface/L1GctInternEtSum.h">

    <include name="&lt;ostream&gt;"/>
    <include name="&lt;string&gt;"/>
    <include name="&lt;stdint.h&gt;"/>

    <class name="L1GctInternEtSum"
           fullname="L1GctInternEtSum"
           module="DataFormats.L1GlobalCaloTrigger"
           project=""
           type="regular">
        <comment>
    \date June 2008
        </comment>

        <section name="public">
            <enum name="L1GctInternEtSumType">
enum L1GctInternEtSumType {
 null, 
          jet_tot_et, 
         jet_tot_ht, 
         jet_miss_et, 
         total_et_or_ht, 
                              miss_etx_or_ety
  };
                <field name="null" value=""/>
                <field name="jet_tot_et" value=""/>
                <field name="jet_tot_ht" value=""/>
                <field name="jet_miss_et" value=""/>
                <field name="total_et_or_ht" value=""/>
                <field name="miss_etx_or_ety" value=""/>
                <comment>
      et sum type - not clear this is required
                </comment>
            </enum>

            <enum name="numberOfBits">
enum numberOfBits {

    kTotEtOrHtNBits=12, 
    kJetMissEtNBits=17, 
    kMissExOrEyNBits=20, 
    kTotEtOrHtOFlowBit=1&lt;&lt;kTotEtOrHtNBits, 
    kJetMissEtOFlowBit=1&lt;&lt;kJetMissEtNBits, 
    kMissExOrEyOFlowBit=1&lt;&lt;kMissExOrEyNBits, 
    kTotEtOrHtMaxValue=kTotEtOrHtOFlowBit-1, 
    kJetMissEtMaxValue=kJetMissEtOFlowBit-1, 
    kMissExOrEyMaxValue=kMissExOrEyOFlowBit-1, 
    kTotEtOrHtRawCtorMask=kTotEtOrHtOFlowBit | kTotEtOrHtMaxValue, 
    kJetMissEtRawCtorMask=kJetMissEtOFlowBit | kJetMissEtMaxValue, 
    kMissExOrEyRawCtorMask=kMissExOrEyOFlowBit | kMissExOrEyMaxValue
  };
                <field name="kTotEtOrHtNBits" value="12"/>
                <field name="kJetMissEtNBits" value="17"/>
                <field name="kMissExOrEyNBits" value="20"/>
                <field name="kTotEtOrHtOFlowBit"
                       value="1&amp;lt;&amp;lt;kTotEtOrHtNBits"/>
                <field name="kJetMissEtOFlowBit"
                       value="1&amp;lt;&amp;lt;kJetMissEtNBits"/>
                <field name="kMissExOrEyOFlowBit"
                       value="1&amp;lt;&amp;lt;kMissExOrEyNBits"/>
                <field name="kTotEtOrHtMaxValue"
                       value="kTotEtOrHtOFlowBit-1"/>
                <field name="kJetMissEtMaxValue"
                       value="kJetMissEtOFlowBit-1"/>
                <field name="kMissExOrEyMaxValue"
                       value="kMissExOrEyOFlowBit-1"/>
                <field name="kTotEtOrHtRawCtorMask"
                       value="kTotEtOrHtOFlowBit | kTotEtOrHtMaxValue"/>
                <field name="kJetMissEtRawCtorMask"
                       value="kJetMissEtOFlowBit | kJetMissEtMaxValue"/>
                <field name="kMissExOrEyRawCtorMask"
                       value="kMissExOrEyOFlowBit | kMissExOrEyMaxValue"/>
            </enum>

            <constructor name="L1GctInternEtSum"
                         return=""
                         args="['void']"
                         vars="['']"
                         qual="">
L1GctInternEtSum();
                <comment>
      default constructor (for vector initialisation etc.)
                </comment>
            </constructor>

            <constructor name="L1GctInternEtSum"
                         return=""
                         args="['uint16_t','uint16_t','int16_t','uint32_t','uint8_t']"
                         vars="['capBlock','capIndex','bx','et','oflow']"
                         qual="">
L1GctInternEtSum(uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t et, uint8_t oflow);
                <comment>
      construct from individual quantities
                </comment>
            </constructor>

            <destructor name="~L1GctInternEtSum"
                        return=""
                        args="['void']"
                        vars="['']"
                        qual="">
~L1GctInternEtSum();
                <comment>
      destructor
                </comment>
            </destructor>

            <method1 name="fromJetTotEt"
                     return="static L1GctInternEtSum"
                     args="['uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternEtSum fromJetTotEt(uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
                <comment>
     named ctors
                </comment>
            </method1>

            <method1 name="fromJetTotHt"
                     return="static L1GctInternEtSum"
                     args="['uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternEtSum fromJetTotHt(uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
            </method1>

            <method1 name="fromJetMissEt"
                     return="static L1GctInternEtSum"
                     args="['uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternEtSum fromJetMissEt(uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
            </method1>

            <method1 name="fromTotalEtOrHt"
                     return="static L1GctInternEtSum"
                     args="['uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternEtSum fromTotalEtOrHt(uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
            </method1>

            <method1 name="fromMissEtxOrEty"
                     return="static L1GctInternEtSum"
                     args="['uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternEtSum fromMissEtxOrEty(uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
            </method1>

            <method1 name="fromEmulatorJetTotEt"
                     return="static L1GctInternEtSum"
                     args="['unsigned','bool','int16_t']"
                     vars="['totEt','overFlow','bx']"
                     qual="">
static L1GctInternEtSum fromEmulatorJetTotEt(unsigned totEt, bool overFlow, int16_t bx);
            </method1>

            <method1 name="fromEmulatorJetTotHt"
                     return="static L1GctInternEtSum"
                     args="['unsigned','bool','int16_t']"
                     vars="['totHt','overFlow','bx']"
                     qual="">
static L1GctInternEtSum fromEmulatorJetTotHt(unsigned totHt, bool overFlow, int16_t bx);
            </method1>

            <method1 name="fromEmulatorJetMissEt"
                     return="static L1GctInternEtSum"
                     args="['int','bool','int16_t']"
                     vars="['missEtxOrEty','overFlow','bx']"
                     qual="">
static L1GctInternEtSum fromEmulatorJetMissEt(int missEtxOrEty, bool overFlow, int16_t bx);
            </method1>

            <method1 name="fromEmulatorTotalEtOrHt"
                     return="static L1GctInternEtSum"
                     args="['unsigned','bool','int16_t']"
                     vars="['totEtOrHt','overFlow','bx']"
                     qual="">
static L1GctInternEtSum fromEmulatorTotalEtOrHt(unsigned totEtOrHt, bool overFlow, int16_t bx);
            </method1>

            <method1 name="fromEmulatorMissEtxOrEty"
                     return="static L1GctInternEtSum"
                     args="['int','bool','int16_t']"
                     vars="['missEtxOrEty','overFlow','bx']"
                     qual="">
static L1GctInternEtSum fromEmulatorMissEtxOrEty(int missEtxOrEty, bool overFlow, int16_t bx);
            </method1>

            <method1 name="type"
                     return="L1GctInternEtSum::L1GctInternEtSumType"
                     args="['void']"
                     vars="['']"
                     qual="const">
L1GctInternEtSum::L1GctInternEtSumType type() const;
                <comment>
      'type' of object - not required?
                </comment>
            </method1>

            <method1 name="capBlock"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t capBlock() const;
                <comment>
      get capture block
                </comment>
            </method1>

            <method1 name="capIndex"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t capIndex() const;
                <comment>
      get index within capture block
                </comment>
            </method1>

            <method1 name="bx"
                     return="int16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
int16_t bx() const;
                <comment>
      get BX number
                </comment>
            </method1>

            <method1 name="empty"
                     return="bool"
                     args="['void']"
                     vars="['']"
                     qual="const">
bool empty() const;
                <comment>
      is the sum non-zero
                </comment>
            </method1>

            <method1 name="raw"
                     return="uint32_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint32_t raw() const;
                <comment>
      get the raw data
                </comment>
            </method1>

            <method1 name="value"
                     return="uint32_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint32_t value() const;
                <comment>
      get value
                </comment>
            </method1>

            <method1 name="et"
                     return="uint32_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint32_t et() const;
                <comment>
      get et
                </comment>
            </method1>

            <method1 name="count"
                     return="uint32_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint32_t count() const;
                <comment>
      get count
                </comment>
            </method1>

            <method1 name="oflow"
                     return="uint8_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint8_t oflow() const;
                <comment>
      get oflow
                </comment>
            </method1>

            <method1 name="setCapBlock"
                     return="void"
                     args="['uint16_t']"
                     vars="['capBlock']"
                     qual="">
void setCapBlock(uint16_t capBlock);
                <comment>
      set cap block
                </comment>
            </method1>

            <method1 name="setCapIndex"
                     return="void"
                     args="['uint16_t']"
                     vars="['capIndex']"
                     qual="">
void setCapIndex(uint16_t capIndex);
                <comment>
      set cap index
                </comment>
            </method1>

            <method1 name="setBx"
                     return="void"
                     args="['uint16_t']"
                     vars="['bx']"
                     qual="">
void setBx(uint16_t bx);
                <comment>
      set bx
                </comment>
            </method1>

            <method1 name="setType"
                     return="void"
                     args="['L1GctInternEtSumType']"
                     vars="['type']"
                     qual="">
void setType(L1GctInternEtSumType type);
                <comment>
      set type
                </comment>
            </method1>

            <method1 name="setValue"
                     return="void"
                     args="['uint32_t']"
                     vars="['val']"
                     qual="">
void setValue(uint32_t val);
                <comment>
      set value
                </comment>
            </method1>

            <method1 name="setEt"
                     return="void"
                     args="['uint32_t']"
                     vars="['et']"
                     qual="">
void setEt(uint32_t et);
                <comment>
      set Et sum
                </comment>
            </method1>

            <method1 name="setCount"
                     return="void"
                     args="['uint32_t']"
                     vars="['count']"
                     qual="">
void setCount(uint32_t count);
                <comment>
      set count
                </comment>
            </method1>

            <method1 name="setOflow"
                     return="void"
                     args="['uint8_t']"
                     vars="['oflow']"
                     qual="">
void setOflow(uint8_t oflow);
                <comment>
      set overflow bit
                </comment>
            </method1>

            <operator name="operator=="
                      return="bool"
                      args="['const L1GctInternEtSum&amp;']"
                      vars="['c']"
                      qual="const">
bool operator==(const L1GctInternEtSum&amp; c) const;
                <comment>
      equality operator
                </comment>
            </operator>

            <operator name="operator!="
                      return="bool"
                      args="['const L1GctInternEtSum&amp;']"
                      vars="['c']"
                      qual="const">
bool operator!=(const L1GctInternEtSum&amp; c) const;
                <comment>
      inequality operator
                </comment>
            </operator>

        </section>

        <typemap name="L1GctInternEtSumType"
                 value="L1GctInternEtSum::L1GctInternEtSumType"
                 type="enum"/>
        <typemap name="jet_miss_et"
                 value="L1GctInternEtSum::jet_miss_et"
                 type="enum"/>
        <typemap name="jet_tot_et"
                 value="L1GctInternEtSum::jet_tot_et"
                 type="enum"/>
        <typemap name="jet_tot_ht"
                 value="L1GctInternEtSum::jet_tot_ht"
                 type="enum"/>
        <typemap name="kJetMissEtMaxValue "
                 value="L1GctInternEtSum::kJetMissEtMaxValue "
                 type="enum"/>
        <typemap name="kJetMissEtNBits "
                 value="L1GctInternEtSum::kJetMissEtNBits "
                 type="enum"/>
        <typemap name="kJetMissEtOFlowBit "
                 value="L1GctInternEtSum::kJetMissEtOFlowBit "
                 type="enum"/>
        <typemap name="kJetMissEtRawCtorMask "
                 value="L1GctInternEtSum::kJetMissEtRawCtorMask "
                 type="enum"/>
        <typemap name="kMissExOrEyMaxValue "
                 value="L1GctInternEtSum::kMissExOrEyMaxValue "
                 type="enum"/>
        <typemap name="kMissExOrEyNBits "
                 value="L1GctInternEtSum::kMissExOrEyNBits "
                 type="enum"/>
        <typemap name="kMissExOrEyOFlowBit "
                 value="L1GctInternEtSum::kMissExOrEyOFlowBit "
                 type="enum"/>
        <typemap name="kMissExOrEyRawCtorMask "
                 value="L1GctInternEtSum::kMissExOrEyRawCtorMask "
                 type="enum"/>
        <typemap name="kTotEtOrHtMaxValue "
                 value="L1GctInternEtSum::kTotEtOrHtMaxValue "
                 type="enum"/>
        <typemap name="kTotEtOrHtNBits "
                 value="L1GctInternEtSum::kTotEtOrHtNBits "
                 type="enum"/>
        <typemap name="kTotEtOrHtOFlowBit "
                 value="L1GctInternEtSum::kTotEtOrHtOFlowBit "
                 type="enum"/>
        <typemap name="kTotEtOrHtRawCtorMask "
                 value="L1GctInternEtSum::kTotEtOrHtRawCtorMask "
                 type="enum"/>
        <typemap name="miss_etx_or_ety"
                 value="L1GctInternEtSum::miss_etx_or_ety"
                 type="enum"/>
        <typemap name="null"
                 value="L1GctInternEtSum::null"
                 type="enum"/>
        <typemap name="numberOfBits"
                 value="L1GctInternEtSum::numberOfBits"
                 type="enum"/>
        <typemap name="total_et_or_ht"
                 value="L1GctInternEtSum::total_et_or_ht"
                 type="enum"/>

    </class>
    <operator name="operator&lt;&lt;"
              return="std::ostream&amp;"
              args="['std::ostream&amp;','const L1GctInternEtSum&amp;']"
              vars="['s','c']"
              qual="">
std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const L1GctInternEtSum&amp; c);
    </operator>


    <type name="L1GctInternEtSum"/>
    <type name="L1GctInternEtSum::L1GctInternEtSumType"/>
    <type name="L1GctInternEtSumType"/>
    <type name="bool"/>
    <type name="const L1GctInternEtSum&amp;"/>
    <type name="enum L1GctInternEtSumType"/>
    <type name="enum numberOfBits"/>
    <type name="int"/>
    <type name="int16_t"/>
    <type name="uint16_t"/>
    <type name="uint32_t"/>
    <type name="uint8_t"/>
    <type name="unsigned"/>
    <type name="void"/>
</header>
