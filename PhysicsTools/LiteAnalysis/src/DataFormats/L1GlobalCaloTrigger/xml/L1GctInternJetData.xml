<?xml version="1.0"?>
<!--
==============================================================================
  XML File: L1GctInternJetData.xml
  Created:  Fri Jan 15 20:46:37 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/L1GlobalCaloTrigger/interface/L1GctInternJetData.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/L1GlobalCaloTrigger/interface/L1GctInternJetData.h">

    <include name="&lt;string&gt;"/>
    <include name="&quot;DataFormats/L1CaloTrigger/interface/L1CaloRegionDetId.h&quot;"/>

    <class name="L1GctInternJetData"
           fullname="L1GctInternJetData"
           module="DataFormats.L1GlobalCaloTrigger"
           project=""
           type="regular">
        <comment>
    \date June 2006
        </comment>

        <section name="public">
            <enum name="L1GctInternJetType">
enum L1GctInternJetType {
 null, emulator, jet_cluster, jet_cluster_minimal, jet_precluster, gct_trig_object };
                <field name="null" value=""/>
                <field name="emulator" value=""/>
                <field name="jet_cluster" value=""/>
                <field name="jet_cluster_minimal" value=""/>
                <field name="jet_precluster" value=""/>
                <field name="gct_trig_object" value=""/>
            </enum>

        </section>
        <section name="public">
            <constructor name="L1GctInternJetData"
                         return=""
                         args="['void']"
                         vars="['']"
                         qual="">
L1GctInternJetData();
                <comment>
      default constructor (for vector initialisation etc.)
                </comment>
            </constructor>

            <constructor name="L1GctInternJetData"
                         return=""
                         args="['L1CaloRegionDetId','uint16_t','uint16_t','int16_t','uint8_t','uint8_t','uint16_t','uint8_t','uint8_t','uint8_t','uint8_t']"
                         vars="['rgn','capBlock','capIndex','bx','sgnEta','oflow','et','eta','phi','tauVeto','rank']"
                         qual="">
L1GctInternJetData(L1CaloRegionDetId rgn, uint16_t capBlock, uint16_t capIndex, int16_t bx, uint8_t sgnEta, uint8_t oflow, uint16_t et, uint8_t eta, uint8_t phi, uint8_t tauVeto, uint8_t rank);
                <comment>
      construct from individual quantities
                </comment>
            </constructor>

            <method1 name="fromEmulator"
                     return="static L1GctInternJetData"
                     args="['L1CaloRegionDetId','int16_t','uint16_t','bool','bool','uint8_t','uint8_t','uint16_t']"
                     vars="['rgn','bx','et','overFlow','tauVeto','eta','phi','rank']"
                     qual="">
static L1GctInternJetData fromEmulator(L1CaloRegionDetId rgn, int16_t bx, uint16_t et, bool overFlow, bool tauVeto, uint8_t eta, uint8_t phi, uint16_t rank);
                <comment>
     emulator calibrated jet ctor
                </comment>
            </method1>

            <method1 name="fromJetCluster"
                     return="static L1GctInternJetData"
                     args="['L1CaloRegionDetId','uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['rgn','capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternJetData fromJetCluster(L1CaloRegionDetId rgn, uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
                <comment>
      construct from &quot;jet_cluster&quot;
                </comment>
            </method1>

            <method1 name="fromJetPreCluster"
                     return="static L1GctInternJetData"
                     args="['L1CaloRegionDetId','uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['rgn','capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternJetData fromJetPreCluster(L1CaloRegionDetId rgn, uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
                <comment>
      construct from &quot;jet_precluster&quot;
                </comment>
            </method1>

            <method1 name="fromJetClusterMinimal"
                     return="static L1GctInternJetData"
                     args="['L1CaloRegionDetId','uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['rgn','capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternJetData fromJetClusterMinimal(L1CaloRegionDetId rgn, uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
                <comment>
      construct from &quot;jet_cluster_minimal&quot;
                </comment>
            </method1>

            <method1 name="fromGctTrigObject"
                     return="static L1GctInternJetData"
                     args="['L1CaloRegionDetId','uint16_t','uint16_t','int16_t','uint32_t']"
                     vars="['rgn','capBlock','capIndex','bx','data']"
                     qual="">
static L1GctInternJetData fromGctTrigObject(L1CaloRegionDetId rgn, uint16_t capBlock, uint16_t capIndex, int16_t bx, uint32_t data);
                <comment>
      construct from &quot;gct_trig_object&quot;
                </comment>
            </method1>

            <destructor name="~L1GctInternJetData"
                        return="virtual"
                        args="['void']"
                        vars="['']"
                        qual="">
virtual ~L1GctInternJetData();
                <comment>
      destructor (virtual to prevent compiler warnings)
                </comment>
            </destructor>

            <method1 name="type"
                     return="L1GctInternJetData::L1GctInternJetType"
                     args="['void']"
                     vars="['']"
                     qual="const">
L1GctInternJetData::L1GctInternJetType type() const;
                <comment>
      'type' of object
                </comment>
            </method1>

            <method1 name="regionId"
                     return="L1CaloRegionDetId"
                     args="['void']"
                     vars="['']"
                     qual="const">
L1CaloRegionDetId regionId() const;
                <comment>
      region associated with the candidate
                </comment>
            </method1>

            <method1 name="empty"
                     return="bool"
                     args="['void']"
                     vars="['']"
                     qual="const">
bool empty() const;
                <comment>
      was an object really found?
                </comment>
            </method1>

            <method1 name="capBlock"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t capBlock() const;
                <comment>
      get capture block
                </comment>
            </method1>

            <method1 name="capIndex"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t capIndex() const;
                <comment>
      get index within capture block
                </comment>
            </method1>

            <method1 name="bx"
                     return="int16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
int16_t bx() const;
                <comment>
      get BX number
                </comment>
            </method1>

            <method1 name="raw"
                     return="uint32_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint32_t raw() const;
                <comment>
      get the raw data
                </comment>
            </method1>

            <method1 name="rank"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t rank() const;
                <comment>
      get rank bits
                </comment>
            </method1>

            <method1 name="tauVeto"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t tauVeto() const;
                <comment>
      get tau veto
                </comment>
            </method1>

            <method1 name="phi"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t phi() const;
                <comment>
      get phi
                </comment>
            </method1>

            <method1 name="eta"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t eta() const;
                <comment>
      get eta
                </comment>
            </method1>

            <method1 name="et"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t et() const;
                <comment>
      get et
                </comment>
            </method1>

            <method1 name="oflow"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t oflow() const;
                <comment>
      get oflow
                </comment>
            </method1>

            <method1 name="sgnEta"
                     return="uint16_t"
                     args="['void']"
                     vars="['']"
                     qual="const">
uint16_t sgnEta() const;
                <comment>
      get sign of eta
                </comment>
            </method1>

            <method1 name="setRegionId"
                     return="void"
                     args="['L1CaloRegionDetId']"
                     vars="['rgn']"
                     qual="">
void setRegionId(L1CaloRegionDetId rgn);
                <comment>
      set region
                </comment>
            </method1>

            <method1 name="setCapBlock"
                     return="void"
                     args="['uint16_t']"
                     vars="['capBlock']"
                     qual="">
void setCapBlock(uint16_t capBlock);
                <comment>
      set cap block
                </comment>
            </method1>

            <method1 name="setCapIndex"
                     return="void"
                     args="['uint16_t']"
                     vars="['capIndex']"
                     qual="">
void setCapIndex(uint16_t capIndex);
                <comment>
      set cap index
                </comment>
            </method1>

            <method1 name="setBx"
                     return="void"
                     args="['uint16_t']"
                     vars="['bx']"
                     qual="">
void setBx(uint16_t bx);
                <comment>
      set bx
                </comment>
            </method1>

            <method1 name="setType"
                     return="void"
                     args="['L1GctInternJetType']"
                     vars="['type']"
                     qual="">
void setType(L1GctInternJetType type);
                <comment>
      set type
                </comment>
            </method1>

            <method1 name="setRawData"
                     return="void"
                     args="['uint32_t']"
                     vars="['data']"
                     qual="">
void setRawData(uint32_t data);
                <comment>
      set data
                </comment>
            </method1>

            <method1 name="setData"
                     return="void"
                     args="['uint8_t','uint8_t','uint16_t','uint8_t','uint8_t','uint8_t','uint8_t']"
                     vars="['sgnEta','oflow','et','eta','phi','tauVeto','rank']"
                     qual="">
void setData(uint8_t sgnEta, uint8_t oflow, uint16_t et, uint8_t eta, uint8_t phi, uint8_t tauVeto, uint8_t rank);
                <comment>
      construct data word from  components
                </comment>
            </method1>

            <operator name="operator=="
                      return="bool"
                      args="['const L1GctInternJetData&amp;']"
                      vars="['c']"
                      qual="const">
bool operator==(const L1GctInternJetData&amp; c) const;
                <comment>
      equality operator
                </comment>
            </operator>

            <operator name="operator!="
                      return="bool"
                      args="['const L1GctInternJetData&amp;']"
                      vars="['c']"
                      qual="const">
bool operator!=(const L1GctInternJetData&amp; c) const;
                <comment>
      inequality operator
                </comment>
            </operator>

        </section>

        <typemap name="L1GctInternJetType"
                 value="L1GctInternJetData::L1GctInternJetType"
                 type="enum"/>
        <typemap name="emulator"
                 value="L1GctInternJetData::emulator"
                 type="enum"/>
        <typemap name="gct_trig_object"
                 value="L1GctInternJetData::gct_trig_object"
                 type="enum"/>
        <typemap name="jet_cluster"
                 value="L1GctInternJetData::jet_cluster"
                 type="enum"/>
        <typemap name="jet_cluster_minimal"
                 value="L1GctInternJetData::jet_cluster_minimal"
                 type="enum"/>
        <typemap name="jet_precluster"
                 value="L1GctInternJetData::jet_precluster"
                 type="enum"/>
        <typemap name="null"
                 value="L1GctInternJetData::null"
                 type="enum"/>

    </class>
    <operator name="operator&lt;&lt;"
              return="std::ostream&amp;"
              args="['std::ostream&amp;','const L1GctInternJetData&amp;']"
              vars="['s','cand']"
              qual="">
std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const L1GctInternJetData&amp; cand);
    </operator>


    <type name="L1CaloRegionDetId"/>
    <type name="L1GctInternJetData"/>
    <type name="L1GctInternJetData::L1GctInternJetType"/>
    <type name="L1GctInternJetType"/>
    <type name="bool"/>
    <type name="const L1GctInternJetData&amp;"/>
    <type name="enum L1GctInternJetType"/>
    <type name="int16_t"/>
    <type name="uint16_t"/>
    <type name="uint32_t"/>
    <type name="uint8_t"/>
    <type name="void"/>
</header>
