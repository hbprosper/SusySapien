<?xml version="1.0"?>
<!--
==============================================================================
  XML File: NuclearInteraction.xml
  Created:  Fri Jan 15 20:47:43 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/VertexReco/interface/NuclearInteraction.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_3_3_6/src/DataFormats/VertexReco/interface/NuclearInteraction.h">

    <include name="&quot;DataFormats/TrackReco/interface/TrackFwd.h&quot;"/>
    <include name="&quot;DataFormats/TrackReco/interface/Track.h&quot;"/>
    <include name="&quot;DataFormats/TrajectorySeed/interface/TrajectorySeedCollection.h&quot;"/>
    <include name="&quot;DataFormats/VertexReco/interface/Vertex.h&quot;"/>

    <namespace name="reco">

        <class name="NuclearInteraction"
               fullname="reco::NuclearInteraction"
               module="DataFormats.VertexReco"
               project=""
               type="regular">

            <section name="public">
                <typedef name="TrajectorySeedRefVector"
                         value="edm::RefVector&lt;TrajectorySeedCollection&gt;">
typedef edm::RefVector&lt;TrajectorySeedCollection&gt; TrajectorySeedRefVector;
                </typedef>

                <typedef name="TrajectorySeedRef"
                         value="edm::Ref&lt;TrajectorySeedCollection&gt;">
typedef edm::Ref&lt;TrajectorySeedCollection&gt; TrajectorySeedRef;
                </typedef>

                <typedef name="trackRef_iterator"
                         value="reco::Vertex::trackRef_iterator">
typedef reco::Vertex::trackRef_iterator trackRef_iterator;
                </typedef>

                <typedef name="seedRef_iterator"
                         value="TrajectorySeedRefVector::iterator">
typedef TrajectorySeedRefVector::iterator seedRef_iterator;
                </typedef>

                <constructor name="NuclearInteraction"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
NuclearInteraction();
                </constructor>

                <constructor name="NuclearInteraction"
                             return=""
                             args="['const TrajectorySeedRefVector&amp;','const reco::Vertex&amp;','double']"
                             vars="['tseeds','vtx','lkh']"
                             qual="">
NuclearInteraction(const TrajectorySeedRefVector&amp; tseeds, const reco::Vertex&amp; vtx, double lkh);
                </constructor>

                <method2 name="primaryTrack"
                         return="const edm::RefToBase&lt;reco::Track&gt;&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const edm::RefToBase&lt;reco::Track&gt;&amp; primaryTrack() const;
                    <comment>
           return the base reference to the primary track
                    </comment>
                </method2>

                <method1 name="secondaryTracksSize"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int secondaryTracksSize() const;
                    <comment>
           return the number of secondary tracks
                    </comment>
                </method1>

                <method1 name="secondaryTracks_begin"
                         return="trackRef_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
trackRef_iterator secondaryTracks_begin() const;
                    <comment>
           first iterator over secondary tracks
                    </comment>
                </method1>

                <method1 name="secondaryTracks_end"
                         return="trackRef_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
trackRef_iterator secondaryTracks_end() const;
                    <comment>
           last iterator over secondary tracks
                    </comment>
                </method1>

                <method1 name="seedsSize"
                         return="int"
                         args="['void']"
                         vars="['']"
                         qual="const">
int seedsSize() const;
                    <comment>
           return the number of seeds
                    </comment>
                </method1>

                <method1 name="seeds"
                         return="const TrajectorySeedRefVector&amp;"
                         args="['void']"
                         vars="['']"
                         qual="">
const TrajectorySeedRefVector&amp; seeds();
                    <comment>
           return the seeds
                    </comment>
                </method1>

                <method1 name="seeds_begin"
                         return="seedRef_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
seedRef_iterator seeds_begin() const;
                    <comment>
           first iterator over seeds
                    </comment>
                </method1>

                <method1 name="seeds_end"
                         return="seedRef_iterator"
                         args="['void']"
                         vars="['']"
                         qual="const">
seedRef_iterator seeds_end() const;
                    <comment>
           last iterator over seeds
                    </comment>
                </method1>

                <method1 name="vertex"
                         return="const reco::Vertex&amp;"
                         args="['void']"
                         vars="['']"
                         qual="const">
const reco::Vertex&amp; vertex() const;
                    <comment>
           return the vertex
                    </comment>
                </method1>

                <method1 name="likelihood"
                         return="double"
                         args="['void']"
                         vars="['']"
                         qual="const">
double likelihood() const;
                    <comment>
           return the likelihood ~ probability that the vertex is a real nuclear interaction
                    </comment>
                </method1>

            </section>

            <typemap name="TrajectorySeedRef"
                     value="edm::Ref&lt;TrajectorySeedCollection&gt;"
                     type="typedef"/>
            <typemap name="TrajectorySeedRefVector"
                     value="edm::RefVector&lt;TrajectorySeedCollection&gt;"
                     type="typedef"/>
            <typemap name="seedRef_iterator"
                     value="edm::RefVector&lt;TrajectorySeedCollection&gt;::iterator"
                     type="typedef"/>
            <typemap name="trackRef_iterator"
                     value="reco::Vertex::trackRef_iterator"
                     type="typedef"/>

        </class>
    </namespace>

    <type name="const TrajectorySeedRefVector&amp;"/>
    <type name="const edm::RefToBase&lt;reco::Track&gt;&amp;"/>
    <type name="const reco::Vertex&amp;"/>
    <type name="double"/>
    <type name="int"/>
    <type name="reco::NuclearInteraction"/>
    <type name="seedRef_iterator"/>
    <type name="trackRef_iterator"/>
    <type name="void"/>
</header>
