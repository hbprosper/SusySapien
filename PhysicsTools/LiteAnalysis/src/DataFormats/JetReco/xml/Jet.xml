<?xml version="1.0"?>
<!--
==============================================================================
  XML File: Jet.xml
  Created:  Thu Jan 14 22:47:15 2010 with header2xml.py 1.13
==============================================================================
-->
<header name="DataFormats/JetReco/interface/Jet.h"
        file="/home/harry/Desktop/cmssw/slc4_ia32_gcc345/cms/cmssw/CMSSW_2_2_13/src/DataFormats/JetReco/interface/Jet.h">

    <include name="&lt;string&gt;"/>
    <include name="&quot;DataFormats/Candidate/interface/CompositePtrCandidate.h&quot;"/>

    <namespace name="reco">

        <class name="Jet"
               fullname="reco::Jet"
               module="DataFormats.JetReco"
               project=""
               type="regular">
            <baseclass name="public CompositePtrCandidate"/>

            <section name="public">
                <typedef name="Constituent"
                         value="edm::Ptr&lt;Candidate&gt;">
typedef edm::Ptr&lt;Candidate&gt; Constituent;
                </typedef>

                <typedef name="Constituents"
                         value="std::vector&lt;Constituent&gt;">
typedef std::vector&lt;Constituent&gt; Constituents;
                </typedef>


                <class name="EtaPhiMoments"
                       fullname="reco::Jet::EtaPhiMoments"
                       module="DataFormats.JetReco"
                       project=""
                       type="regular">
                    <comment>
        record to store eta-phi first and second moments
                    </comment>

                    <section name="public">
                        <member>
float etaMean;
                        </member>

                        <member>
float phiMean;
                        </member>

                        <member>
float etaEtaMoment;
                        </member>

                        <member>
float phiPhiMoment;
                        </member>

                        <member>
float etaPhiMoment;
                        </member>

                    </section>

                    <typemap name="EtaPhiMoments"
                             value="reco::Jet::EtaPhiMoments"
                             type="class"/>
                    <typemap name="etaEtaMoment"
                             value="reco::Jet::EtaPhiMoments::etaEtaMoment"
                             type="member"/>
                    <typemap name="etaMean"
                             value="reco::Jet::EtaPhiMoments::etaMean"
                             type="member"/>
                    <typemap name="etaPhiMoment"
                             value="reco::Jet::EtaPhiMoments::etaPhiMoment"
                             type="member"/>
                    <typemap name="phiMean"
                             value="reco::Jet::EtaPhiMoments::phiMean"
                             type="member"/>
                    <typemap name="phiPhiMoment"
                             value="reco::Jet::EtaPhiMoments::phiPhiMoment"
                             type="member"/>

                </class>
                <constructor name="Jet"
                             return=""
                             args="['void']"
                             vars="['']"
                             qual="">
Jet ();
                    <comment>
        Default constructor
                    </comment>
                </constructor>

                <constructor name="Jet"
                             return=""
                             args="['const LorentzVector&amp;','const Point&amp;']"
                             vars="['fP4','fVertex']"
                             qual="">
Jet (const LorentzVector&amp; fP4, const Point&amp; fVertex);
                    <comment>
        Initiator
                    </comment>
                </constructor>

                <constructor name="Jet"
                             return=""
                             args="['const LorentzVector&amp;','const Point&amp;','const Constituents&amp;']"
                             vars="['fP4','fVertex','fConstituents']"
                             qual="">
Jet (const LorentzVector&amp; fP4, const Point&amp; fVertex, const Constituents&amp; fConstituents);
                </constructor>

                <destructor name="~Jet"
                            return="virtual"
                            args="['void']"
                            vars="['']"
                            qual="">
virtual ~Jet ();
                    <comment>
        Destructor
                    </comment>
                </destructor>

                <method1 name="etaPhiStatistics"
                         return="EtaPhiMoments"
                         args="['void']"
                         vars="['']"
                         qual="const">
EtaPhiMoments etaPhiStatistics () const;
                    <comment>
        eta-phi statistics, ET weighted
                    </comment>
                </method1>

                <method1 name="etaetaMoment"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float etaetaMoment () const;
                    <comment>
        eta-eta second moment, ET weighted
                    </comment>
                </method1>

                <method1 name="phiphiMoment"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float phiphiMoment () const;
                    <comment>
        phi-phi second moment, ET weighted
                    </comment>
                </method1>

                <method1 name="etaphiMoment"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float etaphiMoment () const;
                    <comment>
        eta-phi second moment, ET weighted
                    </comment>
                </method1>

                <method1 name="etInAnnulus"
                         return="float"
                         args="['float','float']"
                         vars="['fRmin','fRmax']"
                         qual="const">
float etInAnnulus (float fRmin, float fRmax) const;
                    <comment>
        ET in annulus between rmin and rmax around jet direction
                    </comment>
                </method1>

                <method1 name="nCarrying"
                         return="int"
                         args="['float']"
                         vars="['fFraction']"
                         qual="const">
int nCarrying (float fFraction) const;
                    <comment>
        return # of constituent carrying fraction of energy
                    </comment>
                </method1>

                <method1 name="maxDistance"
                         return="float"
                         args="['void']"
                         vars="['']"
                         qual="const">
float maxDistance () const;
                    <comment>
        maximum distance from jet to constituent
                    </comment>
                </method1>

                <method1 name="nConstituents"
                         return="virtual int"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual int nConstituents () const;
                    <comment>
        # of constituents
                    </comment>
                </method1>

                <method1 name="physicsEta"
                         return="static float"
                         args="['float','float']"
                         vars="['fZVertex','fDetectorEta']"
                         qual="">
static float physicsEta (float fZVertex, float fDetectorEta);
                    <comment>
        static function to convert detector eta to physics eta
                    </comment>
                </method1>

                <method1 name="detectorEta"
                         return="static float"
                         args="['float','float']"
                         vars="['fZVertex','fPhysicsEta']"
                         qual="">
static float detectorEta (float fZVertex, float fPhysicsEta);
                    <comment>
        static function to convert physics eta to detector eta
                    </comment>
                </method1>

                <method1 name="getJetConstituents"
                         return="virtual Constituents"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual Constituents getJetConstituents () const;
                    <comment>
        list of constituents
                    </comment>
                </method1>

                <method2 name="getJetConstituentsQuick"
                         return="virtual std::vector&lt;const reco::Candidate*&gt;"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual std::vector&lt;const reco::Candidate*&gt; getJetConstituentsQuick () const;
                    <comment>
        quick list of constituents
                    </comment>
                </method2>

                <method1 name="print"
                         return="virtual std::string"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual std::string print () const;
                    <comment>
        Print object
                    </comment>
                </method1>

                <method1 name="scaleEnergy"
                         return="virtual void"
                         args="['double']"
                         vars="['fScale']"
                         qual="">
virtual void scaleEnergy (double fScale);
                    <comment>
        scale energy of the jet
                    </comment>
                </method1>

                <method1 name="setJetArea"
                         return="virtual void"
                         args="['float']"
                         vars="['fArea']"
                         qual="">
virtual void setJetArea (float fArea);
                    <comment>
        set jet area
                    </comment>
                </method1>

                <method1 name="jetArea"
                         return="virtual float"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual float jetArea () const;
                    <comment>
        get jet area
                    </comment>
                </method1>

                <method1 name="setPileup"
                         return="virtual void"
                         args="['float']"
                         vars="['fEnergy']"
                         qual="">
virtual void setPileup (float fEnergy);
                    <comment>
         Set pileup energy contribution as calculated by algorithm
                    </comment>
                </method1>

                <method1 name="pileup"
                         return="virtual float"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual float pileup () const;
                    <comment>
         pileup energy contribution as calculated by algorithm
                    </comment>
                </method1>

                <method1 name="setNPasses"
                         return="virtual void"
                         args="['int']"
                         vars="['fPasses']"
                         qual="">
virtual void setNPasses (int fPasses);
                    <comment>
         Set number of passes taken by algorithm
                    </comment>
                </method1>

                <method1 name="nPasses"
                         return="virtual int"
                         args="['void']"
                         vars="['']"
                         qual="const">
virtual int nPasses () const;
                    <comment>
         number of passes taken by algorithm
                    </comment>
                </method1>

                <method1 name="isJet"
                         return="bool"
                         args="['void']"
                         vars="['']"
                         qual="const">
bool isJet() const;
                </method1>

            </section>

            <typemap name="Constituent"
                     value="edm::Ptr&lt;Candidate&gt;"
                     type="typedef"/>
            <typemap name="Constituents"
                     value="std::vector&lt;edm::Ptr&lt;Candidate&gt; &gt;"
                     type="typedef"/>

        </class>
    </namespace>

    <type name="CompositePtrCandidate"/>
    <type name="Constituents"/>
    <type name="EtaPhiMoments"/>
    <type name="bool"/>
    <type name="const Constituents&amp;"/>
    <type name="const LorentzVector&amp;"/>
    <type name="const Point&amp;"/>
    <type name="double"/>
    <type name="float"/>
    <type name="int"/>
    <type name="reco::Jet"/>
    <type name="reco::Jet::EtaPhiMoments"/>
    <type name="std::string"/>
    <type name="std::vector&lt;const reco::Candidate*&gt;"/>
    <type name="void"/>
</header>
