Class:
	reco::Muon

Header:
	DataFormats/MuonReco/interface/Muon.h

BaseClasses:
	reco::RecoCandidate	DataFormats/RecoCandidate/interface/RecoCandidate.h
	reco::LeafCandidate	DataFormats/Candidate/interface/LeafCandidate.h
	reco::Candidate	DataFormats/Candidate/interface/Candidate.h
	reco::Particle	DataFormats/Candidate/interface/Particle.h

Version:     CMSSW_2_2_13
Created:     Thu Jan 14 23:15:15 2010	lsclass.py $Revision:$

Methods from reco::Muon

	-o- clone
		Return: Muon*
		Arguments: void	

	-o- innerTrack
		Return: TrackRef
		Arguments: void	

	-o- track
		Return: TrackRef
		Arguments: void	

	-o- outerTrack
		Return: TrackRef
		Arguments: void	

	-o- standAloneMuon
		Return: TrackRef
		Arguments: void	

	-o- globalTrack
		Return: TrackRef
		Arguments: void	

	-o- combinedMuon
		Return: TrackRef
		Arguments: void	

	-o- setInnerTrack
		Return: void
		Arguments: const TrackRef&	t

	-o- setTrack
		Return: void
		Arguments: const TrackRef&	t

	-o- setOuterTrack
		Return: void
		Arguments: const TrackRef&	t

	-o- setStandAlone
		Return: void
		Arguments: const TrackRef&	t

	-o- setGlobalTrack
		Return: void
		Arguments: const TrackRef&	t

	-o- setCombined
		Return: void
		Arguments: const TrackRef&	t

	-o- isEnergyValid
		Return: bool
		Arguments: void	

	-o- calEnergy
		Return: MuonEnergy
		Arguments: void	

	-o- setCalEnergy
		Return: void
		Arguments: const MuonEnergy&	calEnergy

	-o- isTimeValid
		Return: bool
		Arguments: void	

	-o- time
		Return: MuonTime
		Arguments: void	

	-o- setTime
		Return: void
		Arguments: const MuonTime&	time

	-o- isMatchesValid
		Return: bool
		Arguments: void	

	-o- caloCompatibility
		Return: float
		Arguments: void	

	-o- setCaloCompatibility
		Return: void
		Arguments: float	input

	-o- isCaloCompatibilityValid
		Return: bool
		Arguments: void	

	-o- segmentCompatibility
		Return: float
		Arguments: void	

	-o- isolationR03
		Return: const MuonIsolation&
		Arguments: void	

	-o- isolationR05
		Return: const MuonIsolation&
		Arguments: void	

	-o- setIsolation
		Return: void
		Arguments: const MuonIsolation&	isoR03
		           const MuonIsolation&	isoR05

	-o- isIsolationValid
		Return: bool
		Arguments: void	

	-o- isGood
		Return: bool
		Arguments: SelectionType=AllArbitrated	type

	-o- numberOfChambers
		Return: int
		Arguments: void	

	-o- numberOfMatches
		Return: int
		Arguments: ArbitrationType=SegmentArbitration	type

	-o- stationMask
		Return: unsigned int
		Arguments: ArbitrationType=SegmentArbitration	type

	-o- stationGapMaskDistance
		Return: unsigned int
		Arguments: float=10.	distanceCut

	-o- stationGapMaskPull
		Return: unsigned int
		Arguments: float=3.	sigmaCut

	-o- setType
		Return: void
		Arguments: unsigned int	type

	-o- type
		Return: unsigned int
		Arguments: void	

	-o- isMuon
		Return: bool
		Arguments: void	

	-o- isGlobalMuon
		Return: bool
		Arguments: void	

	-o- isTrackerMuon
		Return: bool
		Arguments: void	

	-o- isStandAloneMuon
		Return: bool
		Arguments: void	

	-o- isCaloMuon
		Return: bool
		Arguments: void	

	-o- matches
		Return: std::vector<MuonChamberMatch>&
		Arguments: void	

	-o- matches
		Return: const std::vector<MuonChamberMatch>&
		Arguments: void	

	-o- setMatches
		Return: void
		Arguments: const std::vector<MuonChamberMatch>&	matches

	-o- numberOfSegments
		Return: int
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- dX
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- dY
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- dDxDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- dDyDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- pullX
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type
		           bool=false	includeSegmentError

	-o- pullY
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type
		           bool=false	includeSegmentError

	-o- pullDxDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type
		           bool=false	includeSegmentError

	-o- pullDyDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type
		           bool=false	includeSegmentError

	-o- segmentX
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentY
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentDxDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentDyDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentXErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentYErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentDxDzErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- segmentDyDzErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackEdgeX
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackEdgeY
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackX
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackY
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackDxDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackDyDz
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackXErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackYErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackDxDzErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackDyDzErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackDist
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- trackDistErr
		Return: float
		Arguments: int	station
		           int	muonSubdetId
		           ArbitrationType=SegmentArbitration	type

	-o- t0
		Return: float
		Arguments: int=0	n

Methods from reco::RecoCandidate

	-o- overlap
		Return: bool
		Arguments: const Candidate&	

	-o- track
		Return: reco::edm::Ref<std::vector<Track>>
		Arguments: void	

	-o- track
		Return: reco::edm::Ref<std::vector<Track>>
		Arguments: size_t	

	-o- numberOfTracks
		Return: size_t
		Arguments: void	

	-o- gsfTrack
		Return: reco::edm::Ref<GsfTrackCollection>
		Arguments: void	

	-o- standAloneMuon
		Return: reco::edm::Ref<std::vector<Track>>
		Arguments: void	

	-o- combinedMuon
		Return: reco::edm::Ref<std::vector<Track>>
		Arguments: void	

	-o- superCluster
		Return: reco::edm::Ref<std::vector<SuperCluster>>
		Arguments: void	

	-o- caloTower
		Return: edm::Ref<CaloTowerCollection>
		Arguments: void	

	-o- bestTrack
		Return: const Track*
		Arguments: void	

	-o- bestTrackRef
		Return: edm::RefToBase<reco::Track>
		Arguments: void	

	-o- bestTrackType
		Return: TrackType
		Arguments: void	

Methods from reco::LeafCandidate

	-o- clone
		Return: LeafCandidate*
		Arguments: void	

	-o- begin
		Return: candidate::const_iterator
		Arguments: void	

	-o- end
		Return: candidate::const_iterator
		Arguments: void	

	-o- begin
		Return: candidate::iterator
		Arguments: void	

	-o- end
		Return: candidate::iterator
		Arguments: void	

	-o- numberOfDaughters
		Return: size_t
		Arguments: void	

	-o- daughter
		Return: const Candidate*
		Arguments: size_type	

	-o- numberOfMothers
		Return: size_t
		Arguments: void	

	-o- mother
		Return: const Candidate*
		Arguments: size_type	

	-o- daughter
		Return: Candidate*
		Arguments: size_type	

Methods from reco::Candidate

	-o- clone
		Return: Candidate*
		Arguments: void	

Methods from reco::Particle

	-o- charge
		Return: int
		Arguments: void	

	-o- setCharge
		Return: void
		Arguments: Charge	q

	-o- threeCharge
		Return: int
		Arguments: void	

	-o- setThreeCharge
		Return: void
		Arguments: Charge	qx3

	-o- p4
		Return: const math::XYZTLorentzVectorD&
		Arguments: void	

	-o- polarP4
		Return: const math::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >&
		Arguments: void	

	-o- momentum
		Return: math::XYZVector
		Arguments: void	

	-o- boostToCM
		Return: math::XYZVector
		Arguments: void	

	-o- p
		Return: double
		Arguments: void	

	-o- energy
		Return: double
		Arguments: void	

	-o- et
		Return: double
		Arguments: void	

	-o- mass
		Return: double
		Arguments: void	

	-o- massSqr
		Return: double
		Arguments: void	

	-o- mt
		Return: double
		Arguments: void	

	-o- mtSqr
		Return: double
		Arguments: void	

	-o- px
		Return: double
		Arguments: void	

	-o- py
		Return: double
		Arguments: void	

	-o- pz
		Return: double
		Arguments: void	

	-o- pt
		Return: double
		Arguments: void	

	-o- phi
		Return: double
		Arguments: void	

	-o- theta
		Return: double
		Arguments: void	

	-o- eta
		Return: double
		Arguments: void	

	-o- rapidity
		Return: double
		Arguments: void	

	-o- y
		Return: double
		Arguments: void	

	-o- setP4
		Return: void
		Arguments: const LorentzVector&	p4

	-o- setP4
		Return: void
		Arguments: const PolarLorentzVector&	p4

	-o- setMass
		Return: void
		Arguments: double	m

	-o- setPz
		Return: void
		Arguments: double	pz

	-o- vertex
		Return: const math::XYZPoint&
		Arguments: void	

	-o- vx
		Return: double
		Arguments: void	

	-o- vy
		Return: double
		Arguments: void	

	-o- vz
		Return: double
		Arguments: void	

	-o- setVertex
		Return: void
		Arguments: const Point&	vertex

	-o- pdgId
		Return: int
		Arguments: void	

	-o- setPdgId
		Return: void
		Arguments: int	pdgId

	-o- status
		Return: int
		Arguments: void	

	-o- setStatus
		Return: void
		Arguments: int	status

	-o- setLongLived
		Return: void
		Arguments: void	

	-o- longLived
		Return: bool
		Arguments: void	

