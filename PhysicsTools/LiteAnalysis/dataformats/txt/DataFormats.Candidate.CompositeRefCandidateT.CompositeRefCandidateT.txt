Class:
	reco::CompositeRefCandidateT<D>

Header:
	DataFormats/Candidate/interface/CompositeRefCandidateT.h

BaseClasses:
	reco::Candidate	DataFormats/Candidate/interface/Candidate.h
	reco::Particle	DataFormats/Candidate/interface/Particle.h

Version:     CMSSW_2_2_13
Created:     Thu Jan 14 23:15:04 2010	lsclass.py $Revision:$

Methods from reco::CompositeRefCandidateT<D>

	-o- begin
		Return: candidate::const_iterator
		Arguments: void	

	-o- end
		Return: candidate::const_iterator
		Arguments: void	

	-o- begin
		Return: candidate::iterator
		Arguments: void	

	-o- end
		Return: candidate::iterator
		Arguments: void	

	-o- numberOfDaughters
		Return: size_t
		Arguments: void	

	-o- numberOfMothers
		Return: size_t
		Arguments: void	

	-o- daughter
		Return: const Candidate*
		Arguments: size_type	

	-o- mother
		Return: const Candidate*
		Arguments: size_type=0	

	-o- daughter
		Return: Candidate*
		Arguments: size_type	

	-o- addDaughter
		Return: void
		Arguments: const typename daughters::value_type&	

	-o- addMother
		Return: void
		Arguments: const typename mothers::value_type&	

	-o- clearDaughters
		Return: void
		Arguments: void	

	-o- clearMothers
		Return: void
		Arguments: void	

	-o- daughterRef
		Return: typename D::value_type
		Arguments: size_type	i

	-o- daughterRefVector
		Return: const D&
		Arguments: void	

	-o- motherRef
		Return: typename D::value_type
		Arguments: size_type=0	i

	-o- motherRefVector
		Return: const D&
		Arguments: void	

	-o- resetDaughters
		Return: void
		Arguments: const edm::ProductID&	id

	-o- resetMothers
		Return: void
		Arguments: const edm::ProductID&	id

	-o- clone
		Return: CompositeRefCandidateT<D>*
		Arguments: void	

Methods from reco::Candidate

	-o- clone
		Return: Candidate*
		Arguments: void	

Methods from reco::Particle

	-o- charge
		Return: int
		Arguments: void	

	-o- setCharge
		Return: void
		Arguments: Charge	q

	-o- threeCharge
		Return: int
		Arguments: void	

	-o- setThreeCharge
		Return: void
		Arguments: Charge	qx3

	-o- p4
		Return: const math::XYZTLorentzVectorD&
		Arguments: void	

	-o- polarP4
		Return: const math::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >&
		Arguments: void	

	-o- momentum
		Return: math::XYZVector
		Arguments: void	

	-o- boostToCM
		Return: math::XYZVector
		Arguments: void	

	-o- p
		Return: double
		Arguments: void	

	-o- energy
		Return: double
		Arguments: void	

	-o- et
		Return: double
		Arguments: void	

	-o- mass
		Return: double
		Arguments: void	

	-o- massSqr
		Return: double
		Arguments: void	

	-o- mt
		Return: double
		Arguments: void	

	-o- mtSqr
		Return: double
		Arguments: void	

	-o- px
		Return: double
		Arguments: void	

	-o- py
		Return: double
		Arguments: void	

	-o- pz
		Return: double
		Arguments: void	

	-o- pt
		Return: double
		Arguments: void	

	-o- phi
		Return: double
		Arguments: void	

	-o- theta
		Return: double
		Arguments: void	

	-o- eta
		Return: double
		Arguments: void	

	-o- rapidity
		Return: double
		Arguments: void	

	-o- y
		Return: double
		Arguments: void	

	-o- setP4
		Return: void
		Arguments: const LorentzVector&	p4

	-o- setP4
		Return: void
		Arguments: const PolarLorentzVector&	p4

	-o- setMass
		Return: void
		Arguments: double	m

	-o- setPz
		Return: void
		Arguments: double	pz

	-o- vertex
		Return: const math::XYZPoint&
		Arguments: void	

	-o- vx
		Return: double
		Arguments: void	

	-o- vy
		Return: double
		Arguments: void	

	-o- vz
		Return: double
		Arguments: void	

	-o- setVertex
		Return: void
		Arguments: const Point&	vertex

	-o- pdgId
		Return: int
		Arguments: void	

	-o- setPdgId
		Return: void
		Arguments: int	pdgId

	-o- status
		Return: int
		Arguments: void	

	-o- setStatus
		Return: void
		Arguments: int	status

	-o- setLongLived
		Return: void
		Arguments: void	

	-o- longLived
		Return: bool
		Arguments: void	

