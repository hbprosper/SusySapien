Class:
	pat::EventHypothesis

Header:
	DataFormats/PatCandidates/interface/EventHypothesis.h

Version:     CMSSW_2_2_13
Created:     Thu Jan 14 23:14:15 2010	lsclass.py $Revision:$

Methods from pat::EventHypothesis

	-o- add
		Return: void
		Arguments: const CandRefType&	ref
		           const std::string&	role

	-o- begin
		Return: std::vector<value_type>::const_iterator
		Arguments: void	

	-o- end
		Return: std::vector<value_type>::const_iterator
		Arguments: void	

	-o- rbegin
		Return: std::vector<value_type>::const_reverse_iterator
		Arguments: void	

	-o- rend
		Return: std::vector<value_type>::const_reverse_iterator
		Arguments: void	

	-o- get
		Return: const reco::edm::Ptr<Candidate>&
		Arguments: const std::string&	role
		           int=0	index

	-o- get
		Return: const reco::edm::Ptr<Candidate>&
		Arguments: const ParticleFilter&	filter
		           int=0	index

	-o- count
		Return: size_t
		Arguments: void	

	-o- count
		Return: size_t
		Arguments: const std::string&	roleRegexp

	-o- count
		Return: size_t
		Arguments: const ParticleFilter&	role

	-o- loop
		Return: eventhypothesis::Looper<reco::Candidate>
		Arguments: void	

	-o- loop
		Return: eventhypothesis::Looper<reco::Candidate>
		Arguments: const std::string&	roleRegexp

	-o- loop
		Return: eventhypothesis::Looper<reco::Candidate>
		Arguments: const ParticleFilter&	filter

	-o- loop
		Return: eventhypothesis::Looper<reco::Candidate>
		Arguments: const ParticleFilter*	filter

	-o- loop
		Return: eventhypothesis::Looper<reco::Candidate>
		Arguments: const ParticleFilterPtr&	filter

	-o- getAs
		Return: template<typename T> const T*
		Arguments: const std::string&	role
		           int=0	index

	-o- getAs
		Return: template<typename T> const T*
		Arguments: const ParticleFilter&	filter
		           int=0	index

	-o- all
		Return: std::vector<reco::edm::Ptr<Candidate>>
		Arguments: const std::string&	roleRegexp

	-o- all
		Return: std::vector<reco::edm::Ptr<Candidate>>
		Arguments: const ParticleFilter&	filter

	-o- loopAs
		Return: template<typename T> eventhypothesis::Looper<T>
		Arguments: const std::string&	roleRegexp

	-o- loopAs
		Return: template<typename T> eventhypothesis::Looper<T>
		Arguments: const ParticleFilter&	filter

	-o- loopAs
		Return: template<typename T> eventhypothesis::Looper<T>
		Arguments: const ParticleFilter*	filter

	-o- loopAs
		Return: template<typename T> eventhypothesis::Looper<T>
		Arguments: const ParticleFilterPtr&	filter

