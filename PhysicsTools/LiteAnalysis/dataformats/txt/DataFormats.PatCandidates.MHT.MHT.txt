Class:
	pat::MHT

Header:
	DataFormats/PatCandidates/interface/MHT.h

BaseClasses:
	reco::CompositeRefBaseCandidate	DataFormats/Candidate/interface/CompositeRefBaseCandidate.h
	reco::Candidate	DataFormats/Candidate/interface/Candidate.h
	reco::Particle	DataFormats/Candidate/interface/Particle.h

Version:     CMSSW_2_2_13
Created:     Thu Jan 14 23:14:10 2010	lsclass.py $Revision:$

Methods from pat::MHT

	-o- mht
		Return: double
		Arguments: void	

	-o- phi
		Return: double
		Arguments: void	

	-o- ht
		Return: double
		Arguments: void	

	-o- significance
		Return: double
		Arguments: void	

	-o- error
		Return: double
		Arguments: void	

Methods from reco::CompositeRefBaseCandidate

	-o- clone
		Return: CompositeRefBaseCandidate*
		Arguments: void	

	-o- begin
		Return: candidate::const_iterator
		Arguments: void	

	-o- end
		Return: candidate::const_iterator
		Arguments: void	

	-o- begin
		Return: candidate::iterator
		Arguments: void	

	-o- end
		Return: candidate::iterator
		Arguments: void	

	-o- numberOfDaughters
		Return: size_t
		Arguments: void	

	-o- numberOfMothers
		Return: size_t
		Arguments: void	

	-o- daughter
		Return: const Candidate*
		Arguments: size_type	

	-o- mother
		Return: const Candidate*
		Arguments: size_type	

	-o- daughter
		Return: Candidate*
		Arguments: size_type	

	-o- addDaughter
		Return: void
		Arguments: const CandidateBaseRef&	

	-o- clearDaughters
		Return: void
		Arguments: void	

	-o- daughterRef
		Return: CandidateBaseRef
		Arguments: size_type	i

Methods from reco::Candidate

	-o- clone
		Return: Candidate*
		Arguments: void	

Methods from reco::Particle

	-o- charge
		Return: int
		Arguments: void	

	-o- setCharge
		Return: void
		Arguments: Charge	q

	-o- threeCharge
		Return: int
		Arguments: void	

	-o- setThreeCharge
		Return: void
		Arguments: Charge	qx3

	-o- p4
		Return: const math::XYZTLorentzVectorD&
		Arguments: void	

	-o- polarP4
		Return: const math::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >&
		Arguments: void	

	-o- momentum
		Return: math::XYZVector
		Arguments: void	

	-o- boostToCM
		Return: math::XYZVector
		Arguments: void	

	-o- p
		Return: double
		Arguments: void	

	-o- energy
		Return: double
		Arguments: void	

	-o- et
		Return: double
		Arguments: void	

	-o- mass
		Return: double
		Arguments: void	

	-o- massSqr
		Return: double
		Arguments: void	

	-o- mt
		Return: double
		Arguments: void	

	-o- mtSqr
		Return: double
		Arguments: void	

	-o- px
		Return: double
		Arguments: void	

	-o- py
		Return: double
		Arguments: void	

	-o- pz
		Return: double
		Arguments: void	

	-o- pt
		Return: double
		Arguments: void	

