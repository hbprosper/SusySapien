Class:
	reco::GsfTrack

Header:
	DataFormats/GsfTrackReco/interface/GsfTrack.h

BaseClasses:
	reco::Track	DataFormats/TrackReco/interface/Track.h
	reco::TrackBase	DataFormats/TrackReco/interface/TrackBase.h

Version:     CMSSW_3_3_6
Created:     Fri Jan 15 21:56:13 2010	lsclass.py $Revision:$

Methods from reco::GsfTrack

	-o- setGsfExtra
		Return: void
		Arguments: const GsfTrackExtraRef&	ref

	-o- gsfExtra
		Return: const GsfTrackExtraRef&
		Arguments: void	

	-o- setMode
		Return: void
		Arguments: int	chargeMode
		           const Vector&	momentumMode
		           const CovarianceMatrixMode&	covarianceMode

	-o- chargeMode
		Return: int
		Arguments: void	

	-o- qoverpMode
		Return: double
		Arguments: void	

	-o- thetaMode
		Return: double
		Arguments: void	

	-o- lambdaMode
		Return: double
		Arguments: void	

	-o- pMode
		Return: double
		Arguments: void	

	-o- ptMode
		Return: double
		Arguments: void	

	-o- pxMode
		Return: double
		Arguments: void	

	-o- pyMode
		Return: double
		Arguments: void	

	-o- pzMode
		Return: double
		Arguments: void	

	-o- phiMode
		Return: double
		Arguments: void	

	-o- etaMode
		Return: double
		Arguments: void	

	-o- momentumMode
		Return: const Vector&
		Arguments: void	

	-o- parametersMode
		Return: math::Vector<dimensionMode>::type
		Arguments: void	

	-o- covarianceMode
		Return: math::Error<dimensionMode>::type
		Arguments: void	

	-o- parameterMode
		Return: double
		Arguments: int	i

	-o- covarianceMode
		Return: double
		Arguments: int	i
		           int	j

	-o- errorMode
		Return: double
		Arguments: int	i

	-o- qoverpModeError
		Return: double
		Arguments: void	

	-o- ptModeError
		Return: double
		Arguments: void	

	-o- thetaModeError
		Return: double
		Arguments: void	

	-o- lambdaModeError
		Return: double
		Arguments: void	

	-o- etaModeError
		Return: double
		Arguments: void	

	-o- phiModeError
		Return: double
		Arguments: void	

Methods from reco::Track

	-o- outerOk
		Return: bool
		Arguments: void	

	-o- innerOk
		Return: bool
		Arguments: void	

	-o- innerPosition
		Return: const math::XYZPoint&
		Arguments: void	

	-o- innerMomentum
		Return: const math::XYZVector&
		Arguments: void	

	-o- outerPosition
		Return: const math::XYZPoint&
		Arguments: void	

	-o- outerMomentum
		Return: const math::XYZVector&
		Arguments: void	

	-o- outerStateCovariance
		Return: math::Error<dimension>::type
		Arguments: void	

	-o- innerStateCovariance
		Return: math::Error<dimension>::type
		Arguments: void	

	-o- fillOuter
		Return: math::Error<dimension>::type&
		Arguments: CovarianceMatrix&	v

	-o- fillInner
		Return: math::Error<dimension>::type&
		Arguments: CovarianceMatrix&	v

	-o- outerDetId
		Return: unsigned int
		Arguments: void	

	-o- innerDetId
		Return: unsigned int
		Arguments: void	

	-o- recHitsBegin
		Return: trackingRecHit_iterator
		Arguments: void	

	-o- recHitsEnd
		Return: trackingRecHit_iterator
		Arguments: void	

	-o- recHit
		Return: TrackingRecHitRef
		Arguments: size_t	i

	-o- recHitsSize
		Return: size_t
		Arguments: void	

	-o- outerPx
		Return: double
		Arguments: void	

	-o- outerPy
		Return: double
		Arguments: void	

	-o- outerPz
		Return: double
		Arguments: void	

	-o- outerX
		Return: double
		Arguments: void	

	-o- outerY
		Return: double
		Arguments: void	

	-o- outerZ
		Return: double
		Arguments: void	

	-o- outerP
		Return: double
		Arguments: void	

	-o- outerPt
		Return: double
		Arguments: void	

	-o- outerPhi
		Return: double
		Arguments: void	

	-o- outerEta
		Return: double
		Arguments: void	

	-o- outerTheta
		Return: double
		Arguments: void	

	-o- outerRadius
		Return: double
		Arguments: void	

	-o- setExtra
		Return: void
		Arguments: const TrackExtraRef&	ref

	-o- extra
		Return: const TrackExtraRef&
		Arguments: void	

	-o- found
		Return: unsigned short
		Arguments: void	

	-o- lost
		Return: unsigned short
		Arguments: void	

	-o- seedDirection
		Return: PropagationDirection
		Arguments: void	

	-o- residuals
		Return: const TrackResiduals&
		Arguments: void	

	-o- residualX
		Return: double
		Arguments: int	position

	-o- residualY
		Return: double
		Arguments: int	position

	-o- seedRef
		Return: edm::RefToBase<TrajectorySeed>
		Arguments: void	

Methods from reco::TrackBase

	-o- chi2
		Return: double
		Arguments: void	

	-o- ndof
		Return: double
		Arguments: void	

	-o- normalizedChi2
		Return: double
		Arguments: void	

	-o- charge
		Return: int
		Arguments: void	

	-o- qoverp
		Return: double
		Arguments: void	

	-o- theta
		Return: double
		Arguments: void	

	-o- lambda
		Return: double
		Arguments: void	

	-o- dxy
		Return: double
		Arguments: void	

	-o- d0
		Return: double
		Arguments: void	

	-o- dsz
		Return: double
		Arguments: void	

	-o- dz
		Return: double
		Arguments: void	

	-o- p
		Return: double
		Arguments: void	

	-o- pt
		Return: double
		Arguments: void	

	-o- px
		Return: double
		Arguments: void	

	-o- py
		Return: double
		Arguments: void	

	-o- pz
		Return: double
		Arguments: void	

	-o- phi
		Return: double
		Arguments: void	

	-o- eta
		Return: double
		Arguments: void	

	-o- vx
		Return: double
		Arguments: void	

	-o- vy
		Return: double
		Arguments: void	

	-o- vz
		Return: double
		Arguments: void	

	-o- momentum
		Return: const math::XYZVector&
		Arguments: void	

	-o- referencePoint
		Return: const math::XYZPoint&
		Arguments: void	

	-o- vertex
		Return: const math::XYZPoint&
		Arguments: void	

	-o- dxy
		Return: double
		Arguments: const Point&	myBeamSpot

	-o- dsz
		Return: double
		Arguments: const Point&	myBeamSpot

	-o- dz
		Return: double
		Arguments: const Point&	myBeamSpot

	-o- parameters
		Return: math::math::XYZVector<dimension>::ROOT::Math::SVector<double, N>
		Arguments: void	

	-o- covariance
		Return: math::Error<dimension>::ROOT::Math::SVector<double, N>
		Arguments: void	

	-o- parameter
		Return: double
		Arguments: int	i

	-o- covariance
		Return: double
		Arguments: int	i
		           int	j

	-o- error
		Return: double
		Arguments: int	i

	-o- qoverpError
		Return: double
		Arguments: void	

	-o- ptError
		Return: double
		Arguments: void	

	-o- thetaError
		Return: double
		Arguments: void	

	-o- lambdaError
		Return: double
		Arguments: void	

	-o- etaError
		Return: double
		Arguments: void	

	-o- phiError
		Return: double
		Arguments: void	

	-o- dxyError
		Return: double
		Arguments: void	

	-o- d0Error
		Return: double
		Arguments: void	

	-o- dszError
		Return: double
		Arguments: void	

	-o- dzError
		Return: double
		Arguments: void	

	-o- fill
		Return: math::Error<dimension>::ROOT::Math::SVector<double, N>&
		Arguments: CovarianceMatrix&	v

	-o- covIndex
		Return: static unsigned int
		Arguments: index	i
		           index	j

	-o- hitPattern
		Return: const HitPattern&
		Arguments: void	

	-o- trackerExpectedHitsInner
		Return: const HitPattern&
		Arguments: void	

	-o- trackerExpectedHitsOuter
		Return: const HitPattern&
		Arguments: void	

	-o- numberOfValidHits
		Return: unsigned short
		Arguments: void	

	-o- numberOfLostHits
		Return: unsigned short
		Arguments: void	

	-o- setHitPattern
		Return: void
		Arguments: const TrackingRecHit&	hit
		           size_t	i

	-o- setTrackerExpectedHitsInner
		Return: void
		Arguments: const TrackingRecHit&	hit
		           size_t	i

	-o- setTrackerExpectedHitsOuter
		Return: void
		Arguments: const TrackingRecHit&	hit
		           size_t	i

	-o- setAlgorithm
		Return: void
		Arguments: const TrackAlgorithm	a
		           bool=true	set

	-o- algo
		Return: TrackAlgorithm
		Arguments: void	

	-o- algoName
		Return: std::string
		Arguments: void	

	-o- algoName
		Return: static std::string
		Arguments: TrackAlgorithm	

	-o- algoByName
		Return: static TrackAlgorithm
		Arguments: const std::string&	name

	-o- quality
		Return: bool
		Arguments: const TrackQuality	

	-o- setQuality
		Return: void
		Arguments: const TrackQuality	
		           bool=true	set

	-o- qualityName
		Return: static std::string
		Arguments: TrackQuality	

	-o- qualityByName
		Return: static TrackQuality
		Arguments: const std::string&	name

	-o- qualityMask
		Return: int
		Arguments: void	

	-o- setQualityMask
		Return: void
		Arguments: int	qualMask

	-o- setHitPattern
		Return: template<typename C> void
		Arguments: const C&	c

	-o- setTrackerExpectedHitsInner
		Return: template<typename C> void
		Arguments: const C&	c

	-o- setTrackerExpectedHitsOuter
		Return: template<typename C> void
		Arguments: const C&	c

	-o- setHitPattern
		Return: template<typename I> void
		Arguments: const I&	begin
		           const I&	end

	-o- setTrackerExpectedHitsInner
		Return: template<typename I> void
		Arguments: const I&	begin
		           const I&	end

	-o- setTrackerExpectedHitsOuter
		Return: template<typename I> void
		Arguments: const I&	begin
		           const I&	end

